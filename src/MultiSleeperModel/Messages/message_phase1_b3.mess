# ------------------------------------------------------------------------------------------
# Impression du contenu du fichier de commandes à exécuter :
# ------------------------------------------------------------------------------------------
######################################################
# CRAIG-BAMPTON MODELISATION with coupling modes : Phase 2 / Run simulation
######################################################
DEBUT(PAR_LOT='NON')


from Utilitai import partition
from Utilitai.Table import Table
from math import pi
import time
import numpy as np
import os
import json


with open('fort.2', 'r') as f:
    txt = f.read()
f.close()

parameters = json.loads(txt)
maxFreq = parameters['phase1FreqMax']
includeUSP = parameters['USPON']
freq1 = parameters['phase1Freqs'][0]
freq2 = parameters['phase1Freqs'][-1]
nuPadMat1 = parameters['nuMat1']
nuPadMat2 = parameters['nuMat2']
coefSlpBotArea = parameters['balAreaCoef']
nuBal = parameters['nuBal']
hBal = parameters['hBal']
nModesRails = parameters['phase1RailModes']
nModesSleeper = parameters['phase1SlpModes']
slpForce = 3

if includeUSP == True:
    nuUSP = parameters['nuUSP']

######################################################
# Define functions
######################################################


def GetAlphaBeta(freqList, dampingList):
# Computes optimized Rayleigh's coefs alpha & beta ( eta=1/2*(alpha*w+beta/w) )
# freqList in Hz ; both lists = np.array()
    print(freqList)
    print(dampingList)
    if len(freqList) == 1: # only 1 freq: set beta to 0 and alpha s.t. damping is exact
        return [dampingList[0]/(pi*freqList[0]), 0] 
    elif len(freqList) == 2: # only 2 freqs: return alpha, beta s.t. damping is exact at both freqs
        f0 = freqList[0]
        f1 = freqList[1]
        eta0 = dampingList[0]
        eta1 = dampingList[1]
        alpha = eta0/(pi*f0)*(1 - f1/eta0 * (eta0*f1-eta1*f0)/(f1**2-f0**2))
        beta = 4*pi*f0*f1 * (eta0*f1-eta1*f0)/(f1**2-f0**2)
        return [alpha, beta]

    # more than 2 freqs: use least squares method to optimize damping
    A = np.trapz(dampingList*2*pi*freqList, 2*pi*freqList)
    B = np.trapz(dampingList/(2*pi*freqList), 2*pi*freqList)
    vect = np.array([[A], [B]])
    w1 = 2*pi*freqList[0]
    w2 = 2*pi*freqList[-1]
    M = 12/((w2**3-w1**3)*(1/w1-1/w2) - 3*(w2-w1)**2) * np.array([[1/2*(1/w1-1/w2), -1/2*(w2-w1)], [-1/2*(w2-w1), 1/6*(w2**3-w1**3)]])
    alphaBeta = np.dot(M, vect)
    alpha = float(alphaBeta[0])
    beta = float(alphaBeta[1])
    return [alpha, beta]

    

######################################################
# Trim eigenmodes and define min number of interface modes to compute
######################################################
t0=time.time()
freqBands1 = list(range(0, int(maxFreq) + 1, min(1000, int(maxFreq))))
if freqBands1[-1] != int(maxFreq):
    freqBands1.append(int(maxFreq))


######################################################
# Get list of frequencies from freq files
######################################################
with open('fort.40') as freqFile:
    freqlines = freqFile.read().splitlines()
freqFile.close()

allFreqs = []
for freqline in freqlines:
    try:
        frequency=float(freqline.split(' ')[0])
    except:
        continue
    allFreqs.append(frequency)


######################################################
# MESHES AND MODEL
######################################################
meshSlp = LIRE_MAILLAGE(FORMAT="MED",UNITE=21);
meshRaiR = LIRE_MAILLAGE(FORMAT="MED",UNITE=25);

meshPadR = LIRE_MAILLAGE(FORMAT="MED",UNITE=23);
offsetPadDroit = 757.54
offsetPadBas = 214.0
rotpadX=-1.43261

meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                       MAILLAGE=meshPadR,
                       ROTATION=_F(
                         ANGLE=rotpadX, 
                         POIN_1=(0.0, 0.0, 0.0), 
                         POIN_2=(1000.0, 0.0, 0.0)))

meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                       MAILLAGE=meshPadR,
                       TRANSLATION=(0.0, offsetPadBas, offsetPadDroit),)


if includeUSP == True:
    USPthk = 8.5
    
    meshUSP = LIRE_MAILLAGE(FORMAT="MED",UNITE=26);
    
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_MA = _F(TYPE_MAILLE='2D', NOM='USPbot', OPTION='FACE_NORMALE', VECT_NORMALE=(0,-1,0)))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPbot', GROUP_MA='USPbot'))
                         
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPtop', OPTION='PLAN', POINT=(0,USPthk,0), VECT_NORMALE=(0,1,0), PRECISION=1e-3))
    ###                     
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='tmp', OPTION='PLAN', POINT=(0,0,0), VECT_NORMALE=(0,0,1), PRECISION=1e-3))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPsym', DIFFE=('tmp', 'USPtop')))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         DETR_GROUP_NO = _F(NOM='tmp'))
    
    # Translate components above USPs of USP's thickness
    meshSlp = MODI_MAILLAGE(reuse=meshSlp, MAILLAGE=meshSlp, TRANSLATION=(0, USPthk, 0));
    meshPadR = MODI_MAILLAGE(reuse=meshPadR, MAILLAGE=meshPadR, TRANSLATION=(0, USPthk, 0));
    meshRaiR = MODI_MAILLAGE(reuse=meshRaiR, MAILLAGE=meshRaiR, TRANSLATION=(0, USPthk, 0));
    
    tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshUSP, MAILLAGE_2=meshSlp, OPERATION='SUPERPOSE')
    tmp3 = ASSE_MAILLAGE(MAILLAGE_1=tmp2, MAILLAGE_2=meshPadR, OPERATION='SUPERPOSE')
    mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp3, MAILLAGE_2=meshRaiR, OPERATION='SUPERPOSE')
    
    mesh0 = DEFI_GROUP(reuse=mesh0, MAILLAGE=mesh0, 
                       CREA_GROUP_NO = _F(NOM='slpSym2', UNION=('slpSym', 'USPsym')))
    
    discreteBalNodes = 'USPbot'
    slpSym = 'slpSym2'
else:
    tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshSlp, MAILLAGE_2=meshPadR, OPERATION='SUPERPOSE')
    mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp2, MAILLAGE_2=meshRaiR, OPERATION='SUPERPOSE')
    discreteBalNodes = 'slpBot'
    slpSym = 'slpSym'

mesh = CREA_MAILLAGE(CREA_POI1=_F(GROUP_NO=discreteBalNodes, 
                                  NOM_GROUP_MA=discreteBalNodes + '0D'), 
                     MAILLAGE=mesh0) 

model = AFFE_MODELE(MAILLAGE=mesh,
                    AFFE=(_F(TOUT='OUI',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),
                          _F(GROUP_MA=discreteBalNodes + '0D',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='DIS_T',),));
                          
# Compute area of a half-sleeper bottom face
CH_id = CREA_CHAMP(OPERATION = 'AFFE',
                      TYPE_CHAM ='NOEU_NEUT_R',
                      MAILLAGE = mesh ,
                      AFFE = _F(GROUP_MA=discreteBalNodes, NOM_CMP=('X1'), VALE=1.0,))

intCH_id = POST_ELEM(CHAM_GD=CH_id,
                     INTEGRALE=_F(GROUP_MA=discreteBalNodes,
                                  NOM_CMP=('X1'),
                                  TYPE_MAILLE='2D'),
                     MODELE=model)
                     
A_slpBot = intCH_id['INTE_X1',1]

# Get number of nodes in discreteBalNodes
pyMesh = partition.MAIL_PY()
pyMesh.FromAster('mesh')
nodeGrps = mesh.LIST_GROUP_NO()
for gp in nodeGrps:
    gpName = gp[0]
    if gpName == discreteBalNodes:
        gpNodes = pyMesh.gno.get(gpName)
        nNodesBal = len(gpNodes)
        break
                    
######################################################
# Import materials properties / functions
######################################################
f_EPad1=LIRE_FONCTION(UNITE = 30,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')
                 
f_TDPad1=LIRE_FONCTION(UNITE = 31,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')


f_EPad2=LIRE_FONCTION(UNITE = 32,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')
                 
f_TDPad2=LIRE_FONCTION(UNITE = 33,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')

if includeUSP:
    f_EUSP=LIRE_FONCTION(UNITE = 34,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')
                     
    f_TDUSP=LIRE_FONCTION(UNITE = 35,
                             NOM_PARA = 'FREQ',
                             PROL_GAUCHE = 'CONSTANT',
                             PROL_DROITE = 'CONSTANT')

f_EBal=LIRE_FONCTION(UNITE = 36,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')

f_TDBal=LIRE_FONCTION(UNITE = 37,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')

# Materials frequency-independent hysteretic damping
eta_concrete = 0.016
eta_steel = 0.001

######################################################
# BOUNDARY CONDITIONS AND INTERACTIONS
######################################################

nForce10 = 'nForce10'
force10 = (0, -100000.0, 10000.0)
nForce45 = 'nForce45'
force45 = (0, -173205, -173205)

if includeUSP == True:
    tie1 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('USPtop', ),
                                           GROUP_MA_MAIT=('slpBotV', ),
                                           TYPE_RACCORD='MASSIF')),
                          MODELE=model)
                          
tie2 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('botn', ),
                                       GROUP_MA_MAIT=('slpUpad', ),
                                       TYPE_RACCORD='MASSIF')),
                      MODELE=model)
                      
tie3 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('topn', ),
                                       GROUP_MA_MAIT=('railBotV', ),
                                       TYPE_RACCORD='MASSIF')),
                      MODELE=model)
                                    
BCinterf=AFFE_CHAR_MECA(MODELE=model,
                        DDL_IMPO=_F(GROUP_NO=('railFt', 'railBk', slpSym), #SANS_GROUP_NO='nope','USPsym'
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0),);

if includeUSP == True:
    BCs = (BCinterf, tie1, tie2, tie3)
else:
    BCs = (BCinterf, tie2, tie3)
                              
load10 = AFFE_CHAR_MECA(FORCE_NODALE=_F(FX = force10[0],
                                      FY = force10[1],
                                      FZ = force10[2],
                                      GROUP_NO=(nForce10, )),
                      MODELE=model)
                      
load45 = AFFE_CHAR_MECA(FORCE_NODALE=_F(FX = force45[0],
                                      FY = force45[1],
                                      FZ = force45[2],
                                      GROUP_NO=(nForce45, )),
                      MODELE=model)

t_macroEl = 0
t_modeGe = 0
t_harmo = 0

# Loop over N bands within this frequency band => N macroelem with optimized Rayleigh damping
normMode='TRAN'

# meanFreq is the frequency at which E' is gonna be taken. Since modes are damping independent, 
# we decide to compute them (interface and eigen) only once per job. So we evaluate them with 
# E' at the middle of the whole frequency range (among all jobs). It must be so, otherwise each job
# provides a different list of modes and analyzing their contributions to the response is much harder. 
# However, the frequency range of each job can be divided in nBands bands to better model Rayleigh damping. 
# So the damping matrices are recomputed for each band, as well as the macroelement.


meanFreqGlob = (freq1+freq2)/2.0 # (allFreqs[0] + allFreqs[-1])/2
meanFreqJob = (allFreqs[0] + allFreqs[-1])/2

# to be used for damping (not stiffness, see comments above !), when Rayleigh damping is not possible 
# and viscous damping is used. Properties are taken at the middle of the band


# Materials
allFreqsNP = np.array(allFreqs)
AB_concrete = GetAlphaBeta(allFreqsNP, eta_concrete*np.ones(len(allFreqs)))
AB_steel = GetAlphaBeta(allFreqsNP, eta_steel*np.ones(len(allFreqs)))

eta_padMat1 = np.array([f_TDPad1(f) for f in allFreqs])
AB_padMat1 = GetAlphaBeta(allFreqsNP, eta_padMat1)
eta_padMat2 = np.array([f_TDPad2(f) for f in allFreqs])
AB_padMat2 = GetAlphaBeta(allFreqsNP, eta_padMat2)

if includeUSP:
    eta_USP = np.array([f_TDUSP(f) for f in allFreqs])
    AB_USP = GetAlphaBeta(allFreqsNP, eta_USP)


                        
concrRe = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_concrete[0],
                                AMOR_BETA=AB_concrete[1],
                                E=46300.0,
                                NU=0.2,
                                RHO=2.4356e-09))
                            
steel = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_steel[0],
                              AMOR_BETA=AB_steel[1],
                              E=210000.0,
                              NU=0.3,
                              RHO=7.85e-09))
                            
padMat1 = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_padMat1[0],
                                AMOR_BETA=AB_padMat1[1],
                                E=f_EPad1(meanFreqGlob),
                                NU=nuPadMat1,
                                RHO=1.0e-09))
                                
padMat2 = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_padMat2[0],
                                AMOR_BETA=AB_padMat2[1],
                                E=f_EPad2(meanFreqGlob),
                                NU=nuPadMat2,
                                RHO=1.0e-09))   
    

if includeUSP == True:
    USPmat = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_USP[0],
                                   AMOR_BETA=AB_USP[1],
                                   E=f_EUSP(meanFreqGlob), 
                                   NU=nuUSP,
                                   RHO=0.375e-09)) 

    fieldmat = AFFE_MATERIAU(AFFE=(_F(GROUP_MA=('sleeper'),
                                      MATER=(concrRe, )),
                                   _F(GROUP_MA=('hard'),
                                      MATER=(padMat1, )),
                                   _F(GROUP_MA=('soft'),
                                      MATER=(padMat2, )),
                                   _F(GROUP_MA=('USP'),
                                      MATER=(USPmat, )),
                                   _F(GROUP_MA=('rail'),
                                      MATER=(steel, ))),
                             MAILLAGE=mesh,
                             MODELE=model,)
else:
    fieldmat = AFFE_MATERIAU(AFFE=(_F(GROUP_MA=('sleeper'),
                                      MATER=(concrRe, )),
                                   _F(GROUP_MA=('hard'),
                                      MATER=(padMat1, )),
                                   _F(GROUP_MA=('soft'),
                                      MATER=(padMat2, )),
                                   _F(GROUP_MA=('rail'),
                                      MATER=(steel, ))),
                             MAILLAGE=mesh,
                             MODELE=model,)
                    
######################################################
# Compute elementary matrices & assemble (K, M and vect are independent of damping)
######################################################  
nodeStiff_Y = f_EBal(meanFreqGlob)*(coefSlpBotArea*A_slpBot)/hBal/nNodesBal
nodeStiff_XZ = f_EBal(meanFreqGlob)/2/(1+nuBal)*(coefSlpBotArea*A_slpBot)/hBal/nNodesBal
nodeAmo_Y = nodeStiff_Y*f_TDBal(meanFreqJob)/(2*pi*meanFreqJob)
nodeAmo_XZ = nodeStiff_XZ*f_TDBal(meanFreqJob)/(2*pi*meanFreqJob)

elemprop = AFFE_CARA_ELEM(DISCRET=(_F(CARA='K_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=(nodeStiff_XZ, nodeStiff_Y, nodeStiff_XZ),),
                                   _F(CARA='M_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=0),
                                   _F(CARA='A_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=(nodeAmo_XZ, nodeAmo_Y, nodeAmo_XZ)),
                                      ),
                          MODELE=model)
                              
matEl_K1=CALC_MATR_ELEM(MODELE=model,
                        CHAM_MATER=fieldmat,
                        OPTION='RIGI_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
num1 = NUME_DDL(MATR_RIGI=matEl_K1)
matAs_K1 = ASSE_MATRICE(MATR_ELEM=matEl_K1, NUME_DDL=num1)

matEl_M1=CALC_MATR_ELEM(MODELE=model,
                        CHAM_MATER=fieldmat,
                        OPTION='MASS_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
matAs_M1 = ASSE_MATRICE(MATR_ELEM=matEl_M1, NUME_DDL=num1)

vectEl10=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=load10, CARA_ELEM=elemprop)
                      
vectEl45=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=load45, CARA_ELEM=elemprop)

vectAs10 = ASSE_VECTEUR(VECT_ELEM=vectEl10, NUME_DDL=num1)
vectAs45 = ASSE_VECTEUR(VECT_ELEM=vectEl45, NUME_DDL=num1)

matEl_A1=CALC_MATR_ELEM(MODELE=model,
                        RIGI_MECA=matEl_K1,
                        MASS_MECA=matEl_M1,
                        CHAM_MATER=fieldmat,
                        OPTION='AMOR_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
matAs_A1 = ASSE_MATRICE(MATR_ELEM=matEl_A1, NUME_DDL=num1)  

######################################################
# Compute eigen modes (once since damping-independent)
######################################################
t_modes0 = time.time()

tabModes = INFO_MODE( MATR_RIGI = matAs_K1,
                      MATR_MASS = matAs_M1,
                      FREQ = freqBands1)                              

# Build a list of frequency bands which contain roughly the same desired number of modes
temp1 = tabModes.EXTR_TABLE()
temp2 = temp1.values()
fMin = temp2['FREQ_MIN']
fMax = temp2['FREQ_MAX']
nModes = temp2['NB_MODE']

nEigen = sum(nModes)

table = []
for i in range(len(fMin)):
    table.append([fMin[i], fMax[i], nModes[i]])

nModesPerBand = 40
nTot = 0
freqBandsOpt = [table[0][0]]
# nModesList = []
cursor = 0

i = 0
while i < len(table):
    f1 = table[i][0]
    f2 = table[i][1]
    nInBand = table[i][2]
    nRemaining = table[i][2]*(1-cursor)
    
    if nTot + nRemaining < nModesPerBand:
        nTot += nRemaining
        i += 1
        cursor = 0
        continue
    else:
        cursor += (nModesPerBand - nTot)/nInBand
        fSup = f1 + (f2 - f1)*cursor
        freqBandsOpt.append(fSup)
        # nModesList.append(nModesPerBand) # supposition.. works if modal density const in the band
        nTot = 0

if freqBandsOpt[-1] < table[-1][1]:
    freqBandsOpt.append(table[-1][1])
    # nModesList.append(nTot)

print('Optimized frequency bands : ')
print(freqBandsOpt)

# Modes computed with (E, tanD) of the middle of the frequency band
modes_1=CALC_MODES(MATR_RIGI=matAs_K1,
                   CALC_FREQ=_F(FREQ=freqBandsOpt,),
                   STOP_BANDE_VIDE='NON',
                   OPTION='BANDE',
                   NORM_MODE=_F(NORME=normMode),
                   MATR_MASS=matAs_M1,
                   VERI_MODE=_F(STOP_ERREUR='NON',),)
                   

print('TIME FOR INFO_MODE + CALC_MODES     ' + str(time.time() - t_modes0))

######################################################
# Compute static interface modes (once as well (iBand==0) cause damping indep)
######################################################
t_modesSta0 = time.time()

modStaR1=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = 'railBk',
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesRails,
                                      SHIFT=10.,),);

modStaR2=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = 'railFt',
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesRails,
                                      SHIFT=10.,),);

modStaS=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = slpSym,
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesSleeper,
                                      SHIFT=10.,),);

                                      
print('TIME FOR INTF MODES     ' + str(time.time() - t_modesSta0))
# Normalize static modes
modStaR1 = NORM_MODE(reuse=modStaR1, MODE=modStaR1, NORME=normMode)
modStaR2 = NORM_MODE(reuse=modStaR2, MODE=modStaR2, NORME=normMode)
modStaS = NORM_MODE(reuse=modStaS, MODE=modStaS, NORME=normMode)

t_bamo0 = time.time()

# Define dynamic interfaces   
Lint=DEFI_INTERF_DYNA(NUME_DDL=num1,
                      INTERFACE=(_F(NOM = 'I_slpSym',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = slpSym),
                                 _F(NOM = 'I_raiRBk',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = 'railBk'),
                                 _F(NOM = 'I_raiRFt',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = 'railFt'),))

######################################################
# Create modal basis
######################################################
bamo1=DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA = modes_1, ),
                             _F(MODE_INTF = modStaR1, )),
                       INTERF_DYNA=Lint,
                       NUME_REF=num1)

bamo1=DEFI_BASE_MODALE(reuse=bamo1,
                       RITZ=(_F(BASE_MODALE=bamo1),
                             _F(MODE_INTF = modStaR2, )),
                       NUME_REF=num1)

bamo1=DEFI_BASE_MODALE(reuse=bamo1,
                       RITZ=(_F(BASE_MODALE=bamo1),
                             _F(MODE_INTF = modStaS, )),
                       NUME_REF=num1)

print('TIME FOR BAMO     ' + str(time.time() - t_bamo0))
    
######################################################
# Create macro element
######################################################
t_macroEl0 = time.time()

macroEl1 = MACR_ELEM_DYNA(BASE_MODALE=bamo1,
                          MATR_MASS=matAs_M1,
                          MATR_RIGI=matAs_K1,
                          MATR_AMOR=matAs_A1)
                          
print('TIME FOR MACROEL     ' + str(time.time() - t_macroEl0))
######################################################
# Macroelements coupling and generalized model creation
######################################################
t_modeGe0 = time.time()

substructs = []
liaisons = []
nSlp = 3
for i in range(nSlp):
    substR = _F(NOM = 'elem'+str(i)+'R', MACR_ELEM_DYNA = macroEl1, ANGL_NAUT = (0., 0., 0.), TRANS=(i*600,0.,0.))
    substL = _F(NOM = 'elem'+str(i)+'L', MACR_ELEM_DYNA = macroEl1, ANGL_NAUT = (0., 180., 0.), TRANS=(i*600,0.,0.))
    substructs.append(substR)
    substructs.append(substL)
    
    liais2 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'R', SOUS_STRUC_2 = 'elem'+str(i)+'L', INTERFACE_1  = 'I_slpSym', INTERFACE_2  = 'I_slpSym', OPTION='REDUIT')
    liaisons.append(liais2)
    
    if i != nSlp-1:
        liais4 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'R', SOUS_STRUC_2 = 'elem'+str(i+1)+'R', INTERFACE_1  = 'I_raiRFt', INTERFACE_2  = 'I_raiRBk', OPTION='REDUIT')
        liais6 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'L', SOUS_STRUC_2 = 'elem'+str(i+1)+'L', INTERFACE_1  = 'I_raiRBk', INTERFACE_2  = 'I_raiRFt', OPTION='REDUIT')
        liaisons.append(liais4)
        liaisons.append(liais6)

modeGene=DEFI_MODELE_GENE(SOUS_STRUC=substructs, LIAISON=liaisons, VERIF=_F( STOP_ERREUR = 'OUI', PRECISION = 1.E-6, CRITERE = 'RELATIF'))
numGene=NUME_DDL_GENE(MODELE_GENE=modeGene);

######################################################
# ASSEMBLAGE DES MATRICES RAIDEUR ET MASSE GENERALISEES STATIQUES
######################################################
masGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='MASS_GENE');

rigGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='RIGI_GENE');
                                  
amoGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='AMOR_GENE');

vectGe10 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,CHAR_SOUS_STRUC=(_F(SOUS_STRUC = 'elem'+str(slpForce-1)+'R',VECT_ASSE = vectAs10),))        
vectGe45 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,CHAR_SOUS_STRUC=(_F(SOUS_STRUC = 'elem'+str(slpForce-1)+'R',VECT_ASSE = vectAs45),)) 

print('TIME FOR MODEGENE     ' + str(time.time() - t_modeGe0))
    
######################################################
# HARMONIC SIMULATION
######################################################
t_harmo0 = time.time()

harmGe10 = DYNA_VIBRA(BASE_CALCUL='GENE',
                      TYPE_CALCUL='HARM',
                      MATR_MASS=masGene,
                      MATR_RIGI=rigGene,
                      MATR_AMOR=amoGene,
                      FREQ=allFreqs,
                      TOUT_CHAM='OUI',
                      EXCIT=_F(VECT_ASSE_GENE=vectGe10, COEF_MULT=1.0,),
                      SOLVEUR=_F(METHODE='LDLT',
                                 RENUM='RCMK',
                                 NPREC=8,
                                 ELIM_LAGR='NON',
                                 STOP_SINGULIER='OUI',),)
                                 
harmGe45 = DYNA_VIBRA(BASE_CALCUL='GENE',
                      TYPE_CALCUL='HARM',
                      MATR_MASS=masGene,
                      MATR_RIGI=rigGene,
                      MATR_AMOR=amoGene,
                      FREQ=allFreqs,
                      TOUT_CHAM='OUI',
                      EXCIT=_F(VECT_ASSE_GENE=vectGe45, COEF_MULT=1.0,),
                      SOLVEUR=_F(METHODE='LDLT',
                                 RENUM='RCMK',
                                 NPREC=8,
                                 ELIM_LAGR='NON',
                                 STOP_SINGULIER='OUI',),)
 
print('TIME FOR HARMO     ' + str(time.time() - t_harmo0))
######################################################
# POST-PROCESSING : vect_mag (envelope of max modal vector components)
######################################################
nModesTot = nEigen + 2*nModesRails + nModesSleeper

vect_mag = [0]*nModesTot
for i in range(len(vect_mag)):
    vect_mag[i] = [0.0]*(nSlp*2)
    
for freq in allFreqs:
    dispGene = RECU_GENE(RESU_GENE=harmGe10,
                         NOM_CHAM='DEPL',
                         FREQ=freq)

    IMPR_GENE(UNITE=8, GENE=_F(RESU_GENE=dispGene))

    DETRUIRE(CONCEPT=_F(NOM=(dispGene)))

# if only 1 concept is printed to fort.8, nothing appears in it while still in the calculation (content=''). It's a bug..
if len(allFreqs) == 1:
    dispGen2 = RECU_GENE(RESU_GENE=harmGe10,
                         NOM_CHAM='DEPL',
                         FREQ=allFreqs[0])

    IMPR_GENE(UNITE=8, GENE=_F(RESU_GENE=dispGen2))
    DETRUIRE(CONCEPT=_F(NOM=(dispGen2)))

    
with open('fort.8','r') as f:
    content = f.read()
f.close()
lines = content.split('\n')

for line in lines:
    listLine = line.split(' ')
    listLine = [x.replace('D','e') for x in listLine if x]
    try:
        lineNo = int(listLine[0])
    except:
        continue
      
    # if lineNo > nModesTot:
        # continue

    modeNo = lineNo % nModesTot 
    macroElNo = (lineNo // nModesTot) % (3*nSlp) # 0 => 5
    if modeNo == 0: # True when lineNo == nModesTot
        modeNo = nModesTot
        macroElNo = macroElNo - 1
        
    modeNo = modeNo - 1 # 0 => 1409 p.ex
        
    real = float(listLine[1])
    imag = float(listLine[2])
    magn = (real**2+imag**2)**(1/2)

    print(str(lineNo) + ' ' + str(modeNo) + ' ' + str(macroElNo) + ' ' + str(magn))
        
    vect_mag[modeNo][macroElNo] = max(vect_mag[modeNo][macroElNo], magn)

vect_mag_str = []
for i in vect_mag:
    myStrList = []
    for j in i:
        myStrList.append(str(j))
    vect_mag_str.append('\t'.join(myStrList))
    
fileVectContent = '\n'.join(vect_mag_str)
fileVect=open('fort.91','w')
fileVect.write(fileVectContent)
fileVect.close()

#=====================================================

vect_mag = [0]*nModesTot
for i in range(len(vect_mag)):
    vect_mag[i] = [0.0]*(nSlp*2)
    
for freq in allFreqs:
    dispGene = RECU_GENE(RESU_GENE=harmGe45,
                         NOM_CHAM='DEPL',
                         FREQ=freq)

    IMPR_GENE(UNITE=9, GENE=_F(RESU_GENE=dispGene))
    DETRUIRE(CONCEPT=_F(NOM=(dispGene)))

# if only 1 concept is printed to fort.9, nothing appears in it while still in the calculation (content=''). It's a bug..
if len(allFreqs) == 1:
    dispGen2 = RECU_GENE(RESU_GENE=harmGe45,
                         NOM_CHAM='DEPL',
                         FREQ=allFreqs[0])

    IMPR_GENE(UNITE=9, GENE=_F(RESU_GENE=dispGen2))
    DETRUIRE(CONCEPT=_F(NOM=(dispGen2)))
    
    
with open('fort.9','r') as f:
    content = f.read()
f.close()
lines = content.split('\n')


for line in lines:
    listLine = line.split(' ')
    listLine = [x.replace('D','e') for x in listLine if x]
    try:
        lineNo = int(listLine[0])
    except:
        continue
      
    # if lineNo > nModesTot:
        # continue

    modeNo = lineNo % nModesTot 
    macroElNo = (lineNo // nModesTot) % (3*nSlp) # 0 => 5
    if modeNo == 0: # True when lineNo == nModesTot
        modeNo = nModesTot
        macroElNo = macroElNo - 1
        
    modeNo = modeNo - 1 # 0 => 1409 p.ex
        
    real = float(listLine[1])
    imag = float(listLine[2])
    magn = (real**2+imag**2)**(1/2)
        
    vect_mag[modeNo][macroElNo] = max(vect_mag[modeNo][macroElNo], magn)

vect_mag_str = []
for i in vect_mag:
    myStrList = []
    for j in i:
        myStrList.append(str(j))
    vect_mag_str.append('\t'.join(myStrList))
    
fileVectContent = '\n'.join(vect_mag_str)
fileVect=open('fort.92','w')
fileVect.write(fileVectContent)
fileVect.close()

try:
    IMPR_RESU(FORMAT='MED',
              RESU=_F(RESULTAT=modes_1),
              UNITE=82)
except:
    pass
          


 
t_fin = time.time()
print('nModesTot ' + str(nModesTot))
print('nEigen ' + str(nEigen))
print('TOTAL TIME ' + str(t_fin-t0))

fileModesContent = 'nEigen = ' + str(nEigen) + '\nnModesRails = ' + str(nModesRails) + '\nnModesSleeper = ' + str(nModesSleeper)
fileModes=open('fort.10','w')
fileModes.write(fileModesContent)
fileModes.close()

DETRUIRE(CONCEPT=_F(NOM=(matEl_A1, matAs_A1, masGene, rigGene, amoGene, vectGe10, vectGe45, elemprop)))
DETRUIRE(CONCEPT=_F(NOM=(meshSlp, meshRaiR, meshPadR, tmp2, mesh, mesh0, model, f_EBal, f_TDBal,  f_EPad1, )))
DETRUIRE(CONCEPT=_F(NOM=(f_EPad2, f_TDPad1, f_TDPad2, tie2, tie3, BCinterf, load10, load45, )))
DETRUIRE(CONCEPT=_F(NOM=(matEl_K1, concrRe, steel, padMat1, padMat2, fieldmat, tabModes, macroEl1, )))
DETRUIRE(CONCEPT=_F(NOM=(matAs_K1, matEl_M1, matAs_M1, vectEl10, vectEl45, vectAs10, vectAs45, modeGene, numGene, )))
DETRUIRE(CONCEPT=_F(NOM=(modStaR1, modStaR2, modStaS, Lint, bamo1, )))
DETRUIRE(CONCEPT=_F(NOM=(harmGe10, harmGe45, CH_id, intCH_id)))
if includeUSP == True:
    DETRUIRE(CONCEPT=_F(NOM=(meshUSP, tmp3, tie1, f_EUSP, f_TDUSP, USPmat)))

# saves only modes_1 & num1 to the base
FIN(RETASSAGE='OUI')

# ------------------------------------------------------------------------------------------

  Ouverture en écriture du fichier ./vola.1

 <INFO> Démarrage de l'exécution.
                                                                                
                                                                                
              -- CODE_ASTER -- VERSION : EXPLOITATION (stable) --               
                                                                                
                     Version 14.4.0 modifiée le 21/08/2019                      
                 révision 2708712c2a40 - branche 'v14.4_smeca'                  
                         Copyright EDF R&D 1991 - 2022                          
                                                                                
                    Exécution du : Thu Aug 25 18:58:22 2022                     
                         Nom de la machine : caelinuxVM                         
                              Architecture : 64bit                              
                          Type de processeur : x86_64                           
Système d'exploitation : Linux-4.15.0-112-generic-x86_64-with-debian-buster-sid 
                        Langue des messages : en (UTF-8)                        
                                                                                
                           Version de Python : 3.6.5                            
                           Version de NumPy : 1.15.1                            
   
   !------------------------------------------------------------------------------------!
   ! <A> <SUPERVIS2_2>                                                                  !
   !                                                                                    !
   !     Vous utilisez une vieille version de Code_Aster.                               !
   !                                                                                    !
   !     En mettant à jour votre version, vous bénéficierez des dernières améliorations !
   !     apportées au code depuis 15 mois.                                              !
   !     Si vous avez des développements privés, vous risquez d'avoir un travail        !
   !     important de portage si vous ne suivez pas les mises à jour.                   !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
                           Parallélisme MPI : inactif                           
                          Parallélisme OpenMP : actif                           
                        Nombre de processus utilisés : 1                        
                     Version de la librairie HDF5 : 1.10.3                      
                      Version de la librairie MED : 4.0.0                       
                     Version de la librairie MFront : 3.2.1                     
                     Version de la librairie MUMPS : 5.1.2                      
                        Librairie PETSc : non disponible                        
                     Version de la librairie SCOTCH : 6.0.4                     

                  Mémoire limite pour l'exécution : 8000.00 Mo                  
                   consommée par l'initialisation : 280.75 Mo                   
                  par les objets du jeu de commandes : 0.00 Mo                  
                 reste pour l'allocation dynamique : 7717.06 Mo                 
                Taille limite des fichiers d'échange : 48.00 Go                 
                                                                                

.. __stg1_txt4
  # ------------------------------------------------------------------------------------------
  # Commande No :  0001            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DEBUT(PAR_LOT='NON',
        IMPR_MACRO='NON',
        DEBUG=_F(JXVERI='NON',
                 SDVERI='NON',
                 JEVEUX='NON',
                 HIST_ETAPE='NON',),
        MESURE_TEMPS=_F(NIVE_DETAIL=1,
                        MOYENNE='NON',),
        MEMOIRE=_F(TAILLE_BLOC=800.0,
                   TAILLE_GROUP_ELEM=1000,),
        RESERVE_CPU=_F(BORNE=900,),
        INFO=1,)

   
   !---------------------------------------------------!
   ! <I> <SUPERVIS_41>                                 !
   !                                                   !
   ! La version 14.4.0 a été modifiée par 1 révisions. !
   !---------------------------------------------------!
   
   
   !------------------------------------------------------------------------------------!
   ! <A> <SUPERVIS_1>                                                                   !
   !                                                                                    !
   !  L'utilisation du mot-clé PAR_LOT='NON' permet d'accéder en lecture et en écriture !
   !  au contenu des concepts Aster. De ce fait, votre étude est exclue du périmètre    !
   !  qualifié de Code_Aster puisque toutes ses étapes ne peuvent être certifiées.      !
   !                                                                                    !
   !  Conseils :                                                                        !
   !    - Il n'y a pas particulièrement de risque de résultat faux... sauf si votre     !
   !      programmation l'introduit.                                                    !
   !    - Distinguez le calcul lui-même (qui doit sans doute passer en PAR_LOT='OUI')   !
   !      des post-traitements (qui nécessiteraient le mode PAR_LOT='NON') qui peuvent  !
   !      être réalisés en POURSUITE.                                                   !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   

  Valeur initiale du temps CPU maximum =   3600900 secondes
  Valeur du temps CPU maximum passé aux commandes =   3600000 secondes
  Réserve CPU prévue = 900 secondes

  Ouverture en écriture du fichier ./glob.1

  Ouverture en écriture du fichier ./vola.1

  Ouverture en lecture du fichier /opt/SalomeMeca/V2019_univ/tools/Code_aster_stable-v144_smeca/lib/aster/elem.1

     Nom de la base                          :  ELEMBASE
     Créée avec la version                   :  14.04.00
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %

  Ouverture en lecture du fichier /opt/SalomeMeca/V2019_univ/tools/Code_aster_stable-v144_smeca/lib/aster/elem.1


     Nom de la base                          :  ELEMBASE
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  60
     Volume des accès en lecture             :         46.88 Mo.
     Nombre total d'accès en écriture        :  0
     Volume des accès en écriture            :          0.00 Mo.
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %

  Relecture des catalogues des éléments faite.

  Fin de lecture (durée  0.027986  s.) 
  # Mémoire (Mo) :   326.57 /   318.75 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0001   user+syst:        0.04s (syst:        0.02s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt100
  # ------------------------------------------------------------------------------------------
  # Commande No :  0002            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshSlp = LIRE_MAILLAGE(FORMAT='MED',
                          UNITE=21,
                          INFO_MED=1,
                          VERI_MAIL=_F(VERIF='OUI',
                                       APLAT=1.E-3,),
                          INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshSlp  - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:22                                                        

NOMBRE DE NOEUDS                        5774

NOMBRE DE MAILLES                       6879
                              QUAD4                2347
                              HEXA8                4532

NOMBRE DE GROUPES DE NOEUDS                4
                              slpBot                             540
                              Sc_Y                                13
                              slpSym                              72
                              Ss_Y                                 9

NOMBRE DE GROUPES DE MAILLES               8
                              sleeper                           4532
                              slpBotV                            480
                              slpUpad                             64
                              slpAcY                             480
                              slpAcZ                              96
                              slpSym                              56
                              slpBot                             480
                              slpAcX                            1133

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.57 /   321.41 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0002   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt101
  # ------------------------------------------------------------------------------------------
  # Commande No :  0004            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshRaiR = LIRE_MAILLAGE(FORMAT='MED',
                           UNITE=25,
                           INFO_MED=1,
                           VERI_MAIL=_F(VERIF='OUI',
                                        APLAT=1.E-3,),
                           INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshRaiR - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                       14357

NOMBRE DE MAILLES                       5220
                              QUAD8                2668
                              HEXA20               2552

NOMBRE DE GROUPES DE NOEUDS               10
                              railBk                             233
                              nForce45                             1
                              railFt                             233
                              nForce10                             1
                              Rb_Y                                11
                              Ra_Y                                17
                              Ra_Z                                13
                              Rb_Z                                 7
                              Rf_Y                                11
                              nMunich                              1

NOMBRE DE GROUPES DE MAILLES               6
                              rail                              2552
                              railBotV                           168
                              railBk                              58
                              railFt                              58
                              railAcZ                            572
                              railAcY                            704

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.57 /   323.06 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0004   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt103
  # ------------------------------------------------------------------------------------------
  # Commande No :  0006            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = LIRE_MAILLAGE(FORMAT='MED',
                           UNITE=23,
                           INFO_MED=1,
                           VERI_MAIL=_F(VERIF='OUI',
                                        APLAT=1.E-3,),
                           INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshPadR - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                        9828

NOMBRE DE MAILLES                      12032
                              SEG2                  336
                              QUAD4                3906
                              HEXA8                7790

NOMBRE DE GROUPES DE NOEUDS                2
                              botn                              1638
                              topn                              1638

NOMBRE DE GROUPES DE MAILLES               4
                              hard                              1558
                              top                               1558
                              bot                               1558
                              soft                              6232

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.57 /   325.12 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0006   user+syst:        0.03s (syst:        0.01s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt113
  # ------------------------------------------------------------------------------------------
  # Commande No :  0008            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                           MAILLAGE=meshPadR,
                           ROTATION=_F(POIN_1=(0.0, 0.0, 0.0),
                                       ANGLE=-1.43261,
                                       POIN_2=(1000.0, 0.0, 0.0),),
                           INFO=1,)

  # Mémoire (Mo) :   326.57 /   325.12 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0008   user+syst:        0.01s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt117
  # ------------------------------------------------------------------------------------------
  # Commande No :  0009            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                           MAILLAGE=meshPadR,
                           TRANSLATION=(0.0, 214.0, 757.54),
                           INFO=1,)

  # Mémoire (Mo) :   326.57 /   325.12 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0009   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt158
  # ------------------------------------------------------------------------------------------
  # Commande No :  0010            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshSlp,
                       MAILLAGE_2=meshPadR,
                       OPERATION='SUPERPOSE',)

  # Mémoire (Mo) :   327.54 /   327.54 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0010   user+syst:        0.04s (syst:        0.00s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt159
  # ------------------------------------------------------------------------------------------
  # Commande No :  0011            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp2,
                        MAILLAGE_2=meshRaiR,
                        OPERATION='SUPERPOSE',)

  # Mémoire (Mo) :   331.83 /   331.83 /    47.56 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0011   user+syst:        0.05s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt165
  # ------------------------------------------------------------------------------------------
  # Commande No :  0012            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  mesh = CREA_MAILLAGE(MAILLAGE=mesh0,
                       CREA_POI1=_F(NOM_GROUP_MA=('slpBot0D', ),
                                    GROUP_NO=('slpBot', ),),
                       INFO=1,)

MOT CLE FACTEUR "CREA_POI1", OCCURRENCE    1
  CREATION DU GROUP_MA slpBot0D DE    540 MAILLES POI1

------------ MAILLAGE mesh     - IMPRESSIONS NIVEAU  1 ------------

ASTER 14.04.00 CONCEPT mesh CALCULE LE 25/08/2022 A 18:58:23 DE TYPE            
MAILLAGE_SDASTER                                                                

NOMBRE DE NOEUDS                       29959

NOMBRE DE MAILLES                      24671
                              POI1                  540
                              SEG2                  336
                              QUAD4                6253
                              QUAD8                2668
                              HEXA8               12322
                              HEXA20               2552

NOMBRE DE GROUPES DE NOEUDS               16
                              slpBot                             540
                              Sc_Y                                13
                              slpSym                              72
                              Ss_Y                                 9
                              botn                              1638
                              topn                              1638
                              railBk                             233
                              nForce45                             1
                              railFt                             233
                              nForce10                             1
                              Rb_Y                                11
                              Ra_Y                                17
                              Ra_Z                                13
                              Rb_Z                                 7
                              Rf_Y                                11
                              nMunich                              1

NOMBRE DE GROUPES DE MAILLES              19
                              sleeper                           4532
                              slpBotV                            480
                              slpUpad                             64
                              slpAcY                             480
                              slpAcZ                              96
                              slpSym                              56
                              slpBot                             480
                              slpAcX                            1133
                              hard                              1558
                              top                               1558
                              bot                               1558
                              soft                              6232
                              rail                              2552
                              railBotV                           168
                              railBk                              58
                              railFt                              58
                              railAcZ                            572
                              railAcY                            704
                              slpBot0D                           540

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   337.06 /   336.27 /    52.73 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0012   user+syst:        0.07s (syst:        0.00s, elaps:        0.07s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt173
  # ------------------------------------------------------------------------------------------
  # Commande No :  0013            Concept de type : modele_sdaster
  # ------------------------------------------------------------------------------------------
  model = AFFE_MODELE(MAILLAGE=mesh,
                      AFFE=(_F(TOUT='OUI',
                               PHENOMENE='MECANIQUE',
                               MODELISATION=('3D', ),),
                            _F(GROUP_MA=('slpBot0D', ),
                               PHENOMENE='MECANIQUE',
                               MODELISATION=('DIS_T', ),),
                            ),
                      INFO=1,
                      DISTRIBUTION=_F(PARTITIONNEUR='METIS',
                                      METHODE='SOUS_DOMAINE',),
                      VERI_JACOBIEN='OUI',)


Sur les 24671 mailles du maillage mesh, on a demandé l'affectation de 24671, on a pu en affecter 24671
 Modélisation     Type maille  Élément fini     Nombre
                  SEG2         MECA_ARETE2      336
 DIS_T            POI1         MECA_DIS_T_N     540
                  QUAD4        MECA_FACE4       6253
                  QUAD8        MECA_FACE8       2668
 3D               HEXA20       MECA_HEXA20      2552
 3D               HEXA8        MECA_HEXA8       12322
#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.02      0.00      0.01
  # Mémoire (Mo) :   371.91 /   370.65 /    55.01 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0013   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt179
  # ------------------------------------------------------------------------------------------
  # Commande No :  0014            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  CH_id = CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                     OPERATION='AFFE',
                     MAILLAGE=mesh,
                     AFFE=_F(GROUP_MA=('slpBot', ),
                             NOM_CMP=('X1', ),
                             VALE=(1.0, ),),
                     INFO=1,)

  # Mémoire (Mo) :   371.91 /   371.52 /    55.01 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0014   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt185
  # ------------------------------------------------------------------------------------------
  # Commande No :  0015            Concept de type : table_sdaster
  # ------------------------------------------------------------------------------------------
  intCH_id = POST_ELEM(INTEGRALE=_F(GROUP_MA=('slpBot', ),
                                    NOM_CMP=('X1', ),
                                    TYPE_MAILLE='2D',),
                       MODELE=model,
                       CHAM_GD=CH_id,
                       PRECISION=1.E-06,
                       CRITERE='RELATIF',
                       INFO=1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   379.02 /   371.75 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0015   user+syst:        0.02s (syst:        0.01s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt206
  # ------------------------------------------------------------------------------------------
  # Commande No :  0016            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EPad1 = LIRE_FONCTION(UNITE=30,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.59 /   391.12 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0016   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt211
  # ------------------------------------------------------------------------------------------
  # Commande No :  0020            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDPad1 = LIRE_FONCTION(UNITE=31,
                           NOM_PARA='FREQ',
                           PROL_DROITE='CONSTANT',
                           PROL_GAUCHE='CONSTANT',
                           INDIC_RESU=(1, 2),
                           FORMAT='LIBRE',
                           TYPE='FONCTION',
                           SEPAR='None',
                           INDIC_PARA=(1, 1),
                           NOM_RESU='TOUTRESU',
                           INTERPOL=('LIN', ),
                           VERIF='CROISSANT',
                           INFO=1,)

  # Mémoire (Mo) :   392.59 /   391.12 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0020   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt217
  # ------------------------------------------------------------------------------------------
  # Commande No :  0024            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EPad2 = LIRE_FONCTION(UNITE=32,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.59 /   391.12 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0024   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt222
  # ------------------------------------------------------------------------------------------
  # Commande No :  0028            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDPad2 = LIRE_FONCTION(UNITE=33,
                           NOM_PARA='FREQ',
                           PROL_DROITE='CONSTANT',
                           PROL_GAUCHE='CONSTANT',
                           INDIC_RESU=(1, 2),
                           FORMAT='LIBRE',
                           TYPE='FONCTION',
                           SEPAR='None',
                           INDIC_PARA=(1, 1),
                           NOM_RESU='TOUTRESU',
                           INTERPOL=('LIN', ),
                           VERIF='CROISSANT',
                           INFO=1,)

  # Mémoire (Mo) :   392.59 /   391.12 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0028   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt238
  # ------------------------------------------------------------------------------------------
  # Commande No :  0032            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EBal = LIRE_FONCTION(UNITE=36,
                         NOM_PARA='FREQ',
                         PROL_DROITE='CONSTANT',
                         PROL_GAUCHE='CONSTANT',
                         INDIC_RESU=(1, 2),
                         FORMAT='LIBRE',
                         TYPE='FONCTION',
                         SEPAR='None',
                         INDIC_PARA=(1, 1),
                         NOM_RESU='TOUTRESU',
                         INTERPOL=('LIN', ),
                         VERIF='CROISSANT',
                         INFO=1,)

  # Mémoire (Mo) :   392.59 /   391.12 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0032   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt243
  # ------------------------------------------------------------------------------------------
  # Commande No :  0036            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDBal = LIRE_FONCTION(UNITE=37,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.59 /   391.12 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0036   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt267
  # ------------------------------------------------------------------------------------------
  # Commande No :  0040            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  tie2 = AFFE_CHAR_MECA(MODELE=model,
                        LIAISON_MAIL=_F(GROUP_MA_MAIT=('slpUpad', ),
                                        GROUP_NO_ESCL=('botn', ),
                                        TYPE_RACCORD='MASSIF',
                                        ELIM_MULT='NON',),
                        VERI_NORM='OUI',
                        DOUBLE_LAGRANGE='OUI',
                        INFO=1,)

  # Mémoire (Mo) :   400.67 /   400.67 /    70.33 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0040   user+syst:        0.13s (syst:        0.01s, elaps:        0.14s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt272
  # ------------------------------------------------------------------------------------------
  # Commande No :  0041            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  tie3 = AFFE_CHAR_MECA(MODELE=model,
                        LIAISON_MAIL=_F(GROUP_MA_MAIT=('railBotV', ),
                                        GROUP_NO_ESCL=('topn', ),
                                        TYPE_RACCORD='MASSIF',
                                        ELIM_MULT='NON',),
                        VERI_NORM='OUI',
                        DOUBLE_LAGRANGE='OUI',
                        INFO=1,)

  # Mémoire (Mo) :   436.66 /   430.91 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0041   user+syst:        0.30s (syst:        0.02s, elaps:        0.31s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt278
  # ------------------------------------------------------------------------------------------
  # Commande No :  0042            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  BCinterf = AFFE_CHAR_MECA(MODELE=model,
                            DDL_IMPO=_F(GROUP_NO=('railFt', 'railBk', 'slpSym'),
                                        DX=0.0,
                                        DY=0.0,
                                        DZ=0.0,),
                            VERI_NORM='OUI',
                            DOUBLE_LAGRANGE='OUI',
                            INFO=1,)

  # Mémoire (Mo) :   436.66 /   432.06 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0042   user+syst:        0.04s (syst:        0.00s, elaps:        0.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt289
  # ------------------------------------------------------------------------------------------
  # Commande No :  0043            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  load10 = AFFE_CHAR_MECA(MODELE=model,
                          FORCE_NODALE=_F(GROUP_NO=('nForce10', ),
                                          FX=0,
                                          FY=-1.E5,
                                          FZ=1.E4,),
                          VERI_NORM='OUI',
                          DOUBLE_LAGRANGE='OUI',
                          INFO=1,)

  # Mémoire (Mo) :   436.66 /   433.20 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0043   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt295
  # ------------------------------------------------------------------------------------------
  # Commande No :  0044            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  load45 = AFFE_CHAR_MECA(MODELE=model,
                          FORCE_NODALE=_F(GROUP_NO=('nForce45', ),
                                          FX=0,
                                          FY=-173205,
                                          FZ=-173205,),
                          VERI_NORM='OUI',
                          DOUBLE_LAGRANGE='OUI',
                          INFO=1,)

  # Mémoire (Mo) :   436.66 /   434.35 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0044   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt339
  # ------------------------------------------------------------------------------------------
  # Commande No :  0045            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  concrRe = DEFI_MATERIAU(ELAS=_F(E=4.6300E4,
                                  NU=0.2,
                                  RHO=2.4356E-09,
                                  AMOR_ALPHA=2.9958577523180304E-06,
                                  AMOR_BETA=85.1556408690692,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.66 /   434.35 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0045   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt345
  # ------------------------------------------------------------------------------------------
  # Commande No :  0046            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  steel = DEFI_MATERIAU(ELAS=_F(E=2.10000E5,
                                NU=0.3,
                                RHO=7.85E-09,
                                AMOR_ALPHA=1.872411095198769E-07,
                                AMOR_BETA=5.322227554316825,
                                COEF_AMOR=1.0,),
                        INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.66 /   434.35 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0046   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt351
  # ------------------------------------------------------------------------------------------
  # Commande No :  0047            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  padMat1 = DEFI_MATERIAU(ELAS=_F(E=151.3306,
                                  NU=0.48,
                                  RHO=1.E-09,
                                  AMOR_ALPHA=2.981444231292963E-05,
                                  AMOR_BETA=847.4594430750207,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.66 /   434.35 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0047   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt357
  # ------------------------------------------------------------------------------------------
  # Commande No :  0048            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  padMat2 = DEFI_MATERIAU(ELAS=_F(E=151.3306,
                                  NU=0.48,
                                  RHO=1.E-09,
                                  AMOR_ALPHA=2.981444231292963E-05,
                                  AMOR_BETA=847.4594430750207,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.66 /   434.35 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0048   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt389
  # ------------------------------------------------------------------------------------------
  # Commande No :  0049            Concept de type : cham_mater
  # ------------------------------------------------------------------------------------------
  fieldmat = AFFE_MATERIAU(MAILLAGE=mesh,
                           MODELE=model,
                           AFFE=(_F(GROUP_MA=('sleeper', ),
                                    MATER=(concrRe, ),),
                                 _F(GROUP_MA=('hard', ),
                                    MATER=(padMat1, ),),
                                 _F(GROUP_MA=('soft', ),
                                    MATER=(padMat2, ),),
                                 _F(GROUP_MA=('rail', ),
                                    MATER=(steel, ),),
                                 ),
                           INFO=1,)

  # Mémoire (Mo) :   436.66 /   434.35 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0049   user+syst:        0.01s (syst:        0.01s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt412
  # ------------------------------------------------------------------------------------------
  # Commande No :  0050            Concept de type : cara_elem
  # ------------------------------------------------------------------------------------------
  elemprop = AFFE_CARA_ELEM(MODELE=model,
                            DISCRET=(_F(REPERE='GLOBAL',
                                        CARA='K_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=(2.6203704283304667E5, 5.764814942327027E5, 2.6203704283304667E5),
                                        SYME='OUI',),
                                     _F(REPERE='GLOBAL',
                                        CARA='M_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=0,
                                        SYME='OUI',),
                                     _F(REPERE='GLOBAL',
                                        CARA='A_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=(56.42372263067223, 124.13218978747891, 56.42372263067223),
                                        SYME='OUI',),
                                     ),
                            INFO=1,)


     LE MODELE model    CONTIENT : 
                                      540 ELEMENT(S) DISCRET         
                                    14874 ELEMENT(S) MASSIF          
#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   440.89 /   438.62 /   110.49 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0050   user+syst:        0.12s (syst:        0.00s, elaps:        0.14s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt418
  # ------------------------------------------------------------------------------------------
  # Commande No :  0052            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_K1 = CALC_MATR_ELEM(OPTION='RIGI_MECA',
                            MODELE=model,
                            CHAM_MATER=fieldmat,
                            CARA_ELEM=elemprop,
                            CHARGE=(BCinterf, tie2, tie3),
                            MODE_FOURIER=0,
                            CALC_ELEM_MODELE='OUI',
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.36      0.01      0.38
  # Mémoire (Mo) :   515.85 /   509.32 /   185.71 /    65.52 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0052   user+syst:        0.36s (syst:        0.01s, elaps:        0.38s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt420
  # ------------------------------------------------------------------------------------------
  # Commande No :  0053            Concept de type : nume_ddl_sdaster
  # ------------------------------------------------------------------------------------------
  num1 = NUME_DDL(MATR_RIGI=(matEl_K1, ),)

  Le système linéaire à résoudre a 112761 degrés de liberté:
   - 89877 sont des degrés de liberté physiques
     (ils sont portés par 29959 noeuds du maillage)
   - 22884 sont les couples de paramètres de Lagrange associés
     aux 11442 relations linéaires dualisées.
  La matrice est de taille 112761 équations.
  Elle contient 5537580 termes non nuls si elle est symétrique et 10962399 termes non nuls si elle n'est pas symétrique.
  Soit un taux de remplissage de   0.086 %.
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.87      0.21      1.07
  # Mémoire (Mo) :   667.75 /   537.58 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0053   user+syst:        0.87s (syst:        0.21s, elaps:        1.08s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt421
  # ------------------------------------------------------------------------------------------
  # Commande No :  0054            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_K1 = ASSE_MATRICE(MATR_ELEM=matEl_K1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.26      0.01      0.29
  # Mémoire (Mo) :   667.75 /   584.56 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0054   user+syst:        0.27s (syst:        0.02s, elaps:        0.29s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt427
  # ------------------------------------------------------------------------------------------
  # Commande No :  0055            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_M1 = CALC_MATR_ELEM(OPTION='MASS_MECA',
                            MODELE=model,
                            CHAM_MATER=fieldmat,
                            CARA_ELEM=elemprop,
                            CHARGE=(BCinterf, tie2, tie3),
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.14      0.03      0.18
  # Mémoire (Mo) :   667.75 /   648.45 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0055   user+syst:        0.14s (syst:        0.03s, elaps:        0.19s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt429
  # ------------------------------------------------------------------------------------------
  # Commande No :  0056            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_M1 = ASSE_MATRICE(MATR_ELEM=matEl_M1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.19      0.01      0.21
  # Mémoire (Mo) :   690.70 /   690.70 /   356.09 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0056   user+syst:        0.20s (syst:        0.01s, elaps:        0.21s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt432
  # ------------------------------------------------------------------------------------------
  # Commande No :  0057            Concept de type : vect_elem_depl_r
  # ------------------------------------------------------------------------------------------
  vectEl10 = CALC_VECT_ELEM(OPTION='CHAR_MECA',
                            CHARGE=(load10, ),
                            CARA_ELEM=elemprop,
                            INST=0.0,
                            MODE_FOURIER=0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   690.70 /   690.70 /   356.20 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0057   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt435
  # ------------------------------------------------------------------------------------------
  # Commande No :  0058            Concept de type : vect_elem_depl_r
  # ------------------------------------------------------------------------------------------
  vectEl45 = CALC_VECT_ELEM(OPTION='CHAR_MECA',
                            CHARGE=(load45, ),
                            CARA_ELEM=elemprop,
                            INST=0.0,
                            MODE_FOURIER=0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   690.70 /   690.70 /   356.20 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0058   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt437
  # ------------------------------------------------------------------------------------------
  # Commande No :  0059            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  vectAs10 = ASSE_VECTEUR(VECT_ELEM=(vectEl10, ),
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   691.57 /   691.57 /   356.84 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0059   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt438
  # ------------------------------------------------------------------------------------------
  # Commande No :  0060            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  vectAs45 = ASSE_VECTEUR(VECT_ELEM=(vectEl45, ),
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   692.43 /   692.43 /   357.70 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0060   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt446
  # ------------------------------------------------------------------------------------------
  # Commande No :  0061            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_A1 = CALC_MATR_ELEM(OPTION='AMOR_MECA',
                            MODELE=model,
                            CARA_ELEM=elemprop,
                            CHAM_MATER=fieldmat,
                            RIGI_MECA=matEl_K1,
                            MASS_MECA=matEl_M1,
                            CHARGE=(BCinterf, tie2, tie3),
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.15      0.02      0.16
  # Mémoire (Mo) :   796.40 /   756.32 /   462.07 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0061   user+syst:        0.15s (syst:        0.02s, elaps:        0.16s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt448
  # ------------------------------------------------------------------------------------------
  # Commande No :  0062            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_A1 = ASSE_MATRICE(MATR_ELEM=matEl_A1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.20      0.01      0.21
  # Mémoire (Mo) :   798.57 /   798.57 /   463.93 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0062   user+syst:        0.20s (syst:        0.01s, elaps:        0.20s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt457
  # ------------------------------------------------------------------------------------------
  # Commande No :  0063            Concept de type : table_sdaster
  # ------------------------------------------------------------------------------------------
  tabModes = INFO_MODE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       FREQ=(0, 1000, 2000),
                       COMPTAGE=_F(METHODE='AUTO',
                                   SEUIL_FREQ=1.E-2,
                                   PREC_SHIFT=0.05,
                                   NMAX_ITER_SHIFT=3,),
                       TYPE_MODE='DYNAMIQUE',
                       INFO=1,
                       SOLVEUR=_F(RENUM='AUTO',
                                  NPREC=8,
                                  ELIM_LAGR='LAGR2',
                                  TYPE_RESOL='AUTO',
                                  ACCELERATION='AUTO',
                                  LOW_RANK_SEUIL=0.0,
                                  PRETRAITEMENTS='AUTO',
                                  PCENT_PIVOT=20,
                                  GESTION_MEMOIRE='AUTO',
                                  METHODE='MUMPS',),
                       NIVEAU_PARALLELISME='COMPLET',
                       )


 Opérateur INFO_MODE + COMPTAGE/METHODE='AUTO'.
 Compte-tenu des propriétés des matrices fournies (nombre, type, symétrie), on a choisi pour vous la
 méthode de comptage: STURM.
  Le nombre total de DDL est       :     112761
  Le nombre de DDL de Lagrange est :      22884
  Le nombre de DDL actifs est      :      78435
------------------------------------------------------------------------

  Vérification du spectre de fréquences (Méthode de Sturm)

  Il n'y a pas de fréquence dans la bande numéro 1 de bornes ( 0.000E+00 , 1.000E+03 )
------------------------------------------------------------------------

  Nombre de fréquences dans la bande numéro 2 de bornes ( 1.000E+03 , 2.000E+03 ) : 2
------------------------------------------------------------------------

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     47.74      0.75     49.25
  # Mémoire (Mo) :  1601.34 /   774.20 /   529.76 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0063   user+syst:       47.95s (syst:        0.82s, elaps:       49.48s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt511
  # ------------------------------------------------------------------------------------------
  # Commande No :  0064            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modes_1 = CALC_MODES(OPTION='BANDE',
                       STOP_BANDE_VIDE='NON',
                       SOLVEUR_MODAL=_F(PREC_SOREN=0.0,
                                        NMAX_ITER_SOREN=20,
                                        PARA_ORTHO_SOREN=0.717,
                                        METHODE='SORENSEN',
                                        APPROCHE='REEL',),
                       MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       CALC_FREQ=_F(FREQ=(0.0, 2000.0),
                                    NMAX_ITER_SHIFT=3,
                                    PREC_SHIFT=0.05,
                                    SEUIL_FREQ=1.E-2,),
                       NORM_MODE=_F(NORME='TRAN',
                                    INFO=1,),
                       SOLVEUR=_F(RENUM='AUTO',
                                  NPREC=8,
                                  ELIM_LAGR='LAGR2',
                                  TYPE_RESOL='AUTO',
                                  ACCELERATION='AUTO',
                                  LOW_RANK_SEUIL=0.0,
                                  PRETRAITEMENTS='AUTO',
                                  POSTTRAITEMENTS='AUTO',
                                  PCENT_PIVOT=20,
                                  RESI_RELA=-1.0,
                                  GESTION_MEMOIRE='AUTO',
                                  METHODE='MUMPS',),
                       VERI_MODE=_F(STOP_ERREUR='NON',
                                    SEUIL=1.E-06,
                                    PREC_SHIFT=5.E-3,
                                    STURM='GLOBAL',),
                       TYPE_RESU='DYNAMIQUE',
                       AMELIORATION='NON',
                       INFO=1,)

  Le nombre total de DDL est       :     112761
  Le nombre de DDL de Lagrange est :      22884
  Le nombre de DDL actifs est      :      78435
  L'option choisie est : BANDE
------------------------------------------------------------------------

  Vérification du spectre de fréquences (Méthode de Sturm)

  Nombre de fréquences propres inférieures à  2.000E+03 Hz : 2
------------------------------------------------------------------------

  La valeur minimale en fréquence est :  0.00000E+00
  La valeur maximale en fréquence est :  2.00000E+03
  La valeur de décalage en fréquence est :  1.41421E+03
------------------------------------------------------------------------

      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 2

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 5


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     5
     Nombre de produits OP*X                    =    18
     Nombre de produits B*X                     =    56
     Nombre de réorthogonalisations  (étape 1)  =    17
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure :  1.02200E+03
      Fréquence supérieure :  1.67293E+03

------------------------------------------------------------------------
     Calcul modal : Méthode d'itération simultanée
                    Méthode de Sorensen

numéro    fréquence (HZ)     norme d'erreur
    1       1.02200E+03        1.11493E-10
    2       1.67293E+03        1.34716E-10

  Norme d'erreur moyenne   :  1.23104E-10
------------------------------------------------------------------------

         Vérification à posteriori des modes

  Dans l'intervalle ( 1.01944E+03 , 1.67711E+03 ) il y a bien 2 fréquence(s).
------------------------------------------------------------------------

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     83.71      1.26     84.83
 Normalisation des modes : modes_1


 NUME_ORDRE             ancienne norme              nouvelle norme
     1                  SANS_CMP: LAGR                        TRAN
     2                  SANS_CMP: LAGR                        TRAN
  # Mémoire (Mo) :  3973.41 /   799.54 /   534.95 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0064   user+syst:       84.85s (syst:        1.44s, elaps:       85.99s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt526
  # ------------------------------------------------------------------------------------------
  # Commande No :  0070            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR1 = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                           MATR_MASS=matAs_M1,
                           MODE_INTERF=_F(GROUP_NO=('railBk', ),
                                          TOUT_CMP='OUI',
                                          NB_MODE=20,
                                          SHIFT=10.0,),
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='OUI',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=1.E-06,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :       1398
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :       1398
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     1
     Nombre de produits OP*X                    =    79
     Nombre de produits B*X                     =   234
     Nombre de réorthogonalisations  (étape 1)  =    77
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  1.56811E+04

------------------------------------------------------------------------
         1          279.33
         2          633.72
         3          822.81
         4         1684.83
         5         2090.81
         6         2409.19
         7         3423.56
         8         4266.01
         9         5327.89
        10         6024.71
        11        10440.57
        12        11344.57
        13        15026.66
        14        17105.29
        15        19103.10
        16        24346.77
        17        29701.36
        18        30921.17
        19        39854.58
        20        39956.51
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.67      0.34     17.98
  # Mémoire (Mo) :  4115.19 /   822.02 /   618.96 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0070   user+syst:       19.12s (syst:        0.44s, elaps:       19.47s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt533
  # ------------------------------------------------------------------------------------------
  # Commande No :  0071            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR2 = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                           MATR_MASS=matAs_M1,
                           MODE_INTERF=_F(GROUP_NO=('railFt', ),
                                          TOUT_CMP='OUI',
                                          NB_MODE=20,
                                          SHIFT=10.0,),
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='OUI',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=1.E-06,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :       1398
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :       1398
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     1
     Nombre de produits OP*X                    =    79
     Nombre de produits B*X                     =   235
     Nombre de réorthogonalisations  (étape 1)  =    78
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  1.56811E+04

------------------------------------------------------------------------
         1          279.33
         2          633.72
         3          822.81
         4         1684.83
         5         2090.81
         6         2409.19
         7         3423.56
         8         4266.00
         9         5327.89
        10         6024.71
        11        10440.57
        12        11344.57
        13        15026.66
        14        17105.29
        15        19103.10
        16        24346.77
        17        29701.36
        18        30921.17
        19        39854.58
        20        39956.51
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.62      0.31     17.86
  # Mémoire (Mo) :  4132.76 /   839.12 /   636.27 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0071   user+syst:       19.06s (syst:        0.41s, elaps:       19.33s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt540
  # ------------------------------------------------------------------------------------------
  # Commande No :  0072            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaS = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                          MATR_MASS=matAs_M1,
                          MODE_INTERF=_F(GROUP_NO=('slpSym', ),
                                         TOUT_CMP='OUI',
                                         NB_MODE=20,
                                         SHIFT=10.0,),
                          SOLVEUR=_F(RENUM='AUTO',
                                     NPREC=8,
                                     ELIM_LAGR='LAGR2',
                                     STOP_SINGULIER='OUI',
                                     TYPE_RESOL='AUTO',
                                     ACCELERATION='AUTO',
                                     LOW_RANK_SEUIL=0.0,
                                     PRETRAITEMENTS='AUTO',
                                     POSTTRAITEMENTS='AUTO',
                                     PCENT_PIVOT=20,
                                     RESI_RELA=1.E-06,
                                     GESTION_MEMOIRE='AUTO',
                                     METHODE='MUMPS',),
                          INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :        432
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :        432
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     2
     Nombre de produits OP*X                    =    99
     Nombre de produits B*X                     =   294
     Nombre de réorthogonalisations  (étape 1)  =    96
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  5.63415E+04

------------------------------------------------------------------------
         1         3207.99
         2         3878.80
         3         6221.83
         4         7214.71
         5         9853.90
         6        10728.75
         7        12423.84
         8        13314.49
         9        15766.15
        10        17899.83
        11        19297.67
        12        22093.40
        13        23082.11
        14        24417.19
        15        27129.31
        16        30004.28
        17        31009.97
        18        32149.03
        19        34108.18
        20        37830.07
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.34      0.43     17.61
  # Mémoire (Mo) :  4147.64 /   857.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0072   user+syst:       18.75s (syst:        0.52s, elaps:       19.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt545
  # ------------------------------------------------------------------------------------------
  # Commande No :  0073            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR1 = NORM_MODE(reuse=modStaR1,
                       MODE=modStaR1,
                       NORME='TRAN',
                       INFO=1,)

   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR1) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le       !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il   !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR1) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le          !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il      !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaR1


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.64 /   857.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0073   user+syst:        0.94s (syst:        0.04s, elaps:        0.95s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt546
  # ------------------------------------------------------------------------------------------
  # Commande No :  0074            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR2 = NORM_MODE(reuse=modStaR2,
                       MODE=modStaR2,
                       NORME='TRAN',
                       INFO=1,)

   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR2) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le       !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il   !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR2) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le          !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il      !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaR2


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.64 /   857.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0074   user+syst:        0.95s (syst:        0.01s, elaps:        0.96s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt547
  # ------------------------------------------------------------------------------------------
  # Commande No :  0075            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaS = NORM_MODE(reuse=modStaS,
                      MODE=modStaS,
                      NORME='TRAN',
                      INFO=1,)

   
   !------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                   !
   !                                                                                    !
   !  La base modale à normer (modStaS) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.             !
   !                                                                                    !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les        !
   !  matrices de rigidité et de masse sont nécessaires.                                !
   !                                                                                    !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le      !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.          !
   !                                                                                    !
   !  Conseil :                                                                         !
   !                                                                                    !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il  !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice. !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
   
   !------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                   !
   !                                                                                    !
   !  La base modale à normer (modStaS) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.             !
   !                                                                                    !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les        !
   !  matrices de rigidité et de masse sont nécessaires.                                !
   !                                                                                    !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le         !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.          !
   !                                                                                    !
   !  Conseil :                                                                         !
   !                                                                                    !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il     !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice. !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaS


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.64 /   857.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0075   user+syst:        0.95s (syst:        0.04s, elaps:        0.96s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt561
  # ------------------------------------------------------------------------------------------
  # Commande No :  0076            Concept de type : interf_dyna_clas
  # ------------------------------------------------------------------------------------------
  Lint = DEFI_INTERF_DYNA(NUME_DDL=num1,
                          INTERFACE=(_F(NOM='I_slpSym',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('slpSym', ),),
                                     _F(NOM='I_raiRBk',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('railBk', ),),
                                     _F(NOM='I_raiRFt',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('railFt', ),),
                                     ),
                          FREQ=1.0,
                          INFO=1,)

  # Mémoire (Mo) :  4147.64 /   857.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0076   user+syst:        0.07s (syst:        0.00s, elaps:        0.07s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt569
  # ------------------------------------------------------------------------------------------
  # Commande No :  0077            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA=(modes_1, ),),
                                 _F(MODE_INTF=modStaR1,),
                                 ),
                           INTERF_DYNA=Lint,
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)


 MODE_MECA : modes_1
 Nombre de modes propres calculés insuffisant
 par rapport au nombre demandé sous NMAX_MODE (9999).
 Nombre de modes propres limité à : 2.
  # Mémoire (Mo) :  4147.64 /   880.79 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0077   user+syst:        0.03s (syst:        0.00s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt574
  # ------------------------------------------------------------------------------------------
  # Commande No :  0078            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(reuse=bamo1,
                           RITZ=(_F(BASE_MODALE=bamo1,),
                                 _F(MODE_INTF=modStaR2,),
                                 ),
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   898.06 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0078   user+syst:        0.05s (syst:        0.00s, elaps:        0.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt579
  # ------------------------------------------------------------------------------------------
  # Commande No :  0079            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(reuse=bamo1,
                           RITZ=(_F(BASE_MODALE=bamo1,),
                                 _F(MODE_INTF=modStaS,),
                                 ),
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   915.32 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0079   user+syst:        0.06s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt591
  # ------------------------------------------------------------------------------------------
  # Commande No :  0080            Concept de type : macr_elem_dyna
  # ------------------------------------------------------------------------------------------
  macroEl1 = MACR_ELEM_DYNA(BASE_MODALE=bamo1,
                            MATR_RIGI=matAs_K1,
                            MATR_MASS=matAs_M1,
                            MATR_AMOR=matAs_A1,)


  Le nombre de modes dynamiques est 3,
  ce n'est pas un multiple du nombre de composante.
  # Mémoire (Mo) :  4147.64 /   943.59 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0080   user+syst:        3.96s (syst:        0.27s, elaps:        4.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt617
  # ------------------------------------------------------------------------------------------
  # Commande No :  0081            Concept de type : modele_gene
  # ------------------------------------------------------------------------------------------
  modeGene = DEFI_MODELE_GENE(SOUS_STRUC=(_F(NOM='elem0R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(0, 0.0, 0.0),),
                                          _F(NOM='elem0L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(0, 0.0, 0.0),),
                                          _F(NOM='elem1R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(600, 0.0, 0.0),),
                                          _F(NOM='elem1L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(600, 0.0, 0.0),),
                                          _F(NOM='elem2R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(1200, 0.0, 0.0),),
                                          _F(NOM='elem2L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(1200, 0.0, 0.0),),
                                          ),
                              LIAISON=(_F(SOUS_STRUC_1='elem0R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem0L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem0R',
                                          INTERFACE_1='I_raiRFt',
                                          SOUS_STRUC_2='elem1R',
                                          INTERFACE_2='I_raiRBk',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem0L',
                                          INTERFACE_1='I_raiRBk',
                                          SOUS_STRUC_2='elem1L',
                                          INTERFACE_2='I_raiRFt',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem1L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1R',
                                          INTERFACE_1='I_raiRFt',
                                          SOUS_STRUC_2='elem2R',
                                          INTERFACE_2='I_raiRBk',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1L',
                                          INTERFACE_1='I_raiRBk',
                                          SOUS_STRUC_2='elem2L',
                                          INTERFACE_2='I_raiRFt',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem2R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem2L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       ),
                              VERIF=_F(STOP_ERREUR='OUI',
                                       PRECISION=1.E-06,
                                       CRITERE='RELATIF',),
                              INFO=1,)

  # Mémoire (Mo) :  4147.64 /   943.59 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0081   user+syst:        0.23s (syst:        0.00s, elaps:        0.23s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt618
  # ------------------------------------------------------------------------------------------
  # Commande No :  0082            Concept de type : nume_ddl_gene
  # ------------------------------------------------------------------------------------------
  numGene = NUME_DDL_GENE(MODELE_GENE=modeGene,
                          STOCKAGE='LIGN_CIEL',
                          METHODE='CLASSIQUE',)

 +++ NOMBRE DE SOUS-STRUCTURES:                     6
 +++ NOMBRE DE LIAISONS:                     7
 +++ NOMBRE TOTAL D'EQUATIONS:                   652
 +++ DONT NOMBRE D'EQUATIONS STRUCTURE:                   372
 +++ DONT NOMBRE D'EQUATIONS LIAISON:                   280
 +++ HAUTEUR MAXIMUM D'UNE COLONNE:                   326
 +++ HAUTEUR MOYENNE D'UNE COLONNE:                   119
 +++ NOMBRE DE BLOCS DU STOCKAGE:                     1
 +++ NOMBRE DE TERMES DU STOCKAGE:                 78098
  # Mémoire (Mo) :  4147.64 /   943.59 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0082   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt624
  # ------------------------------------------------------------------------------------------
  # Commande No :  0083            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  masGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='MASS_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  1.000000
  # Mémoire (Mo) :  4147.64 /   944.18 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0083   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt627
  # ------------------------------------------------------------------------------------------
  # Commande No :  0084            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  rigGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='RIGI_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  55432.422893
  # Mémoire (Mo) :  4147.64 /   944.78 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0084   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt630
  # ------------------------------------------------------------------------------------------
  # Commande No :  0085            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  amoGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='AMOR_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  1.000000
  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0085   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt632
  # ------------------------------------------------------------------------------------------
  # Commande No :  0086            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  vectGe10 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,
                            CHAR_SOUS_STRUC=_F(SOUS_STRUC='elem2R',
                                               VECT_ASSE=vectAs10,),
                            METHODE='CLASSIQUE',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0086   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt633
  # ------------------------------------------------------------------------------------------
  # Commande No :  0087            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  vectGe45 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,
                            CHAR_SOUS_STRUC=_F(SOUS_STRUC='elem2R',
                                               VECT_ASSE=vectAs45,),
                            METHODE='CLASSIQUE',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0087   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt654
  # ------------------------------------------------------------------------------------------
  # Commande No :  0088            Concept de type : harm_gene
  # ------------------------------------------------------------------------------------------
  harmGe10 = DYNA_VIBRA(BASE_CALCUL='GENE',
                        TYPE_CALCUL='HARM',
                        MATR_MASS=masGene,
                        MATR_RIGI=rigGene,
                        MATR_AMOR=amoGene,
                        FREQ=(800.0, 900.0),
                        TOUT_CHAM='OUI',
                        EXCIT=_F(VECT_ASSE_GENE=vectGe10,
                                 COEF_MULT=1.0,
                                 PHAS_DEG=0.0,
                                 PUIS_PULS=0,),
                        SOLVEUR=_F(METHODE='LDLT',
                                   RENUM='RCMK',
                                   NPREC=8,
                                   ELIM_LAGR='NON',
                                   STOP_SINGULIER='OUI',),
                        )


--------------------------------------------------------------------------------------

D Y N A _ V I B R A
=====================================================================================
                     Calcul HARMonique sur base GENEralisee
=====================================================================================

Modèle de sous-structuration dynamique
--------------------------------------------------------------------------------------
    >> modèle généralisé : bamo1
    >> numérotation généralisée : numGene
    >> nombre de modes    : 652
    >> fréquence minimale : 0.00000e+00
    >> fréquence maximale : 1.67293e+03

Matrices dynamiques pour la résolution
--------------------------------------------------------------------------------------
    >> matrice de masse        : masGene
    >> matrice de rigidité     : rigGene
    >> matrice d'amortissement : amoGene

Résolution
--------------------------------------------------------------------------------------
    >> fréquence minimale : 8.00000e+02
    >> fréquence maximale : 9.00000e+02
    >> nombre de fréquences calculées : 2

Archivage
--------------------------------------------------------------------------------------
    >> fréquences archivées : toutes (2 fréquences)
    >> champs archivés      : DEPL  VITE  ACCE

======================================================================================

Avancement du calcul
--------------------------------------------------------------------------------------
[ 50%] Fréquence calculée : 8.00000e+02, archivée au numéro d'ordre :     1
[100%] Fréquence calculée : 9.00000e+02, archivée au numéro d'ordre :     2

======================================================================================
                                                                        Fin du calcul

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.02      0.00      0.02
  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0088   user+syst:        0.03s (syst:        0.01s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt668
  # ------------------------------------------------------------------------------------------
  # Commande No :  0089            Concept de type : harm_gene
  # ------------------------------------------------------------------------------------------
  harmGe45 = DYNA_VIBRA(BASE_CALCUL='GENE',
                        TYPE_CALCUL='HARM',
                        MATR_MASS=masGene,
                        MATR_RIGI=rigGene,
                        MATR_AMOR=amoGene,
                        FREQ=(800.0, 900.0),
                        TOUT_CHAM='OUI',
                        EXCIT=_F(VECT_ASSE_GENE=vectGe45,
                                 COEF_MULT=1.0,
                                 PHAS_DEG=0.0,
                                 PUIS_PULS=0,),
                        SOLVEUR=_F(METHODE='LDLT',
                                   RENUM='RCMK',
                                   NPREC=8,
                                   ELIM_LAGR='NON',
                                   STOP_SINGULIER='OUI',),
                        )


--------------------------------------------------------------------------------------

D Y N A _ V I B R A
=====================================================================================
                     Calcul HARMonique sur base GENEralisee
=====================================================================================

Modèle de sous-structuration dynamique
--------------------------------------------------------------------------------------
    >> modèle généralisé : bamo1
    >> numérotation généralisée : numGene
    >> nombre de modes    : 652
    >> fréquence minimale : 0.00000e+00
    >> fréquence maximale : 1.67293e+03

Matrices dynamiques pour la résolution
--------------------------------------------------------------------------------------
    >> matrice de masse        : masGene
    >> matrice de rigidité     : rigGene
    >> matrice d'amortissement : amoGene

Résolution
--------------------------------------------------------------------------------------
    >> fréquence minimale : 8.00000e+02
    >> fréquence maximale : 9.00000e+02
    >> nombre de fréquences calculées : 2

Archivage
--------------------------------------------------------------------------------------
    >> fréquences archivées : toutes (2 fréquences)
    >> champs archivés      : DEPL  VITE  ACCE

======================================================================================

Avancement du calcul
--------------------------------------------------------------------------------------
[ 50%] Fréquence calculée : 8.00000e+02, archivée au numéro d'ordre :     1
[100%] Fréquence calculée : 9.00000e+02, archivée au numéro d'ordre :     2

======================================================================================
                                                                        Fin du calcul

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.02      0.00      0.02
  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0089   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0090            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=800.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0090   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0091            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0091   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0092            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0092   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0093            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=900.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0093   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0094            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0094   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0095            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0095   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------
  Lecture des blocs du fichier 'fort.30'...
  Lecture des blocs du fichier 'fort.31'...
  Lecture des blocs du fichier 'fort.32'...
  Lecture des blocs du fichier 'fort.33'...
  Lecture des blocs du fichier 'fort.36'...
  Lecture des blocs du fichier 'fort.37'...
[800. 900.]
[0.016 0.016]
[800. 900.]
[0.001 0.001]
[800. 900.]
[0.15923022 0.15923022]
[800. 900.]
[0.15923022 0.15923022]
Optimized frequency bands : 
[0.0, 2000.0]
TIME FOR INFO_MODE + CALC_MODES     135.47309827804565
TIME FOR INTF MODES     57.86588525772095
TIME FOR BAMO     0.22217702865600586
TIME FOR MACROEL     4.05336856842041
TIME FOR MODEGENE     0.2638671398162842
TIME FOR HARMO     0.06001853942871094
1 0 0 0.024805711886007227
2 1 0 0.02011991074561714
3 2 0 0.010672340143628296
4 3 0 0.2976088681810406
5 4 0 4.079022567294768
6 5 0 0.013784729946560433
7 6 0 0.0815154700440352
8 7 0 0.19879075820822253
9 8 0 0.03589552501426884
10 9 0 0.04822985756603476
11 10 0 0.0001700443100956042
12 11 0 0.02995075657863921
13 12 0 0.0023708943273701593
14 13 0 0.00030545440433066273
15 14 0 0.003438739529827754
16 15 0 0.00012410116323890763
17 16 0 0.003418000003431978
18 17 0 7.778754219442853e-05
19 18 0 0.0012920915637295214
20 19 0 4.335714361867027e-05
21 20 0 6.817811691101845e-06
22 21 0 3.570009279119594e-05
23 22 0 0.00870516397263716
24 23 0 0.37252613213303576
25 24 0 0.444051529927834
26 25 0 0.04863330277124925
27 26 0 0.03718379951349782
28 27 0 0.17422856714672252
29 28 0 0.05687644739476966
30 29 0 0.031297637435755435
31 30 0 0.0371663387711246
32 31 0 0.021593147657124934
33 32 0 0.0010569056901398534
34 33 0 0.008927550542293222
35 34 0 0.014572357215773293
36 35 0 0.00011405654025496345
37 36 0 0.040075705897837904
38 37 0 0.01284061671573449
39 38 0 0.0108843460941023
40 39 0 0.00015429677732683983
41 40 0 0.0002982564146250672
42 41 0 0.00013601567040440597
43 42 0 4.943579538805864e-05
44 43 0 8.550460254863478e-05
45 44 0 1.2646840879982637e-05
46 45 0 1.970720951580918e-05
47 46 0 1.7096744019435398e-06
48 47 0 3.4594140403975936e-05
49 48 0 4.6590802073370665e-06
50 49 0 1.9898895635489423e-05
51 50 0 1.9929551309640665e-06
52 51 0 1.6489332377401338e-06
53 52 0 4.31395113677705e-06
54 53 0 7.601267900192704e-06
55 54 0 3.2199666989892923e-06
56 55 0 1.4340660909417668e-06
57 56 0 2.399423823780409e-06
58 57 0 2.001251649068652e-06
59 58 0 1.4306857060518218e-06
60 59 0 5.842730347645697e-06
61 60 0 9.77164478545961e-07
62 61 0 8.605386959835101e-07
63 0 1 1.5375761926034755e-06
64 1 1 8.1206231002122e-07
65 2 1 6.394266941354575e-07
66 3 1 1.2232199485258404e-05
67 4 1 1.1687330368608564e-07
68 5 1 2.2419623040194055e-06
69 6 1 1.5498760092371905e-06
70 7 1 2.803978844089235e-08
71 8 1 1.98223119476614e-06
72 9 1 1.499137303753062e-08
73 10 1 1.3129611943237318e-06
74 11 1 9.293627154695845e-09
75 12 1 2.889357149972983e-10
76 13 1 3.1134840756644316e-07
77 14 1 2.7824649705791447e-09
78 15 1 1.3441944575231666e-08
79 16 1 6.982921376680393e-09
80 17 1 2.4518033776181974e-09
81 18 1 1.8667058421990325e-09
82 19 1 5.521536066806863e-09
83 20 1 1.1163902004702478e-10
84 21 1 5.435209392580934e-09
85 22 1 2.116634309511211e-06
86 23 1 1.2334911684094702e-05
87 24 1 7.314027453715224e-07
88 25 1 7.728485396120575e-07
89 26 1 3.2114033849898087e-06
90 27 1 3.0359565753976126e-08
91 28 1 1.329393439529472e-06
92 29 1 1.4106139387160472e-08
93 30 1 6.29604982960745e-08
94 31 1 7.970419078179014e-09
95 32 1 4.495889470371797e-10
96 33 1 1.9274453570539946e-08
97 34 1 5.160358143869474e-10
98 35 1 4.950071183809482e-09
99 36 1 8.566980489163029e-10
100 37 1 4.083865944971749e-11
101 38 1 3.0966081721296286e-10
102 39 1 2.148228610913885e-09
103 40 1 3.0410509836734075e-11
104 41 1 1.4404859818064873e-09
105 42 1 5.425917092188195e-05
106 43 1 5.831668364319082e-05
107 44 1 1.2884045112499259e-05
108 45 1 7.594436477580151e-05
109 46 1 1.5712406098061494e-05
110 47 1 1.5101260163165191e-05
111 48 1 3.990505238709003e-06
112 49 1 1.699156496735954e-05
113 50 1 1.4640810319104609e-06
114 51 1 3.2374051195820393e-06
115 52 1 2.7914763268206303e-06
116 53 1 8.167022264038467e-06
117 54 1 3.251926572632906e-06
118 55 1 6.791222828578077e-07
119 56 1 1.758971309174769e-06
120 57 1 9.874198911025644e-07
121 58 1 6.629662827399294e-07
122 59 1 2.06032103329287e-06
123 60 1 8.420962308548828e-07
124 61 1 2.735783699801576e-07
125 0 2 0.027692320423113696
126 1 2 0.006955105122308432
127 2 2 0.04459093725433454
128 3 2 0.36704688374375277
129 4 2 0.5104728747601482
130 5 2 0.0033788253224012635
131 6 2 0.018865734381677275
132 7 2 0.1689849424889685
133 8 2 0.04009041447740345
134 9 2 0.1953515225023652
135 10 2 0.0369184083027695
136 11 2 0.08847155869177677
137 12 2 0.004687179892739343
138 13 2 0.007637492156493518
139 14 2 0.0061166853648851344
140 15 2 0.0005095312574219564
141 16 2 0.04263918215268674
142 17 2 0.011913283233030264
143 18 2 0.01209675185800304
144 19 2 0.0007552296137712026
145 20 2 0.0010569435298695006
146 21 2 0.0001298319891806715
147 22 2 0.03917998128049578
148 23 2 0.3200615553358447
149 24 2 1.5843204546331529
150 25 2 0.01904293551955948
151 26 2 0.0054978116119507045
152 27 2 0.1414700936475268
153 28 2 0.02530722134609013
154 29 2 0.6670500380848502
155 30 2 0.013562522908371438
156 31 2 0.2856548543837475
157 32 2 0.008291427526144096
158 33 2 0.00241177041723378
159 34 2 0.009972607696064254
160 35 2 0.00010490533829124235
161 36 2 0.10315895096311323
162 37 2 0.027084100024368542
163 38 2 0.029633149284036618
164 39 2 0.0012211107320812475
165 40 2 0.0022722351179840523
166 41 2 0.0002568469700696506
167 42 2 1.5548562005857648e-05
168 43 2 3.844458668629434e-05
169 44 2 3.489740898434868e-05
170 45 2 5.62337410223613e-06
171 46 2 8.81792892478727e-06
172 47 2 2.6634912548758258e-05
173 48 2 8.128756509724535e-06
174 49 2 1.3021398591933205e-05
175 50 2 1.8260299963856015e-06
176 51 2 9.080821461283115e-07
177 52 2 2.5591219269507266e-06
178 53 2 4.551035222759762e-06
179 54 2 1.8112417900713863e-06
180 55 2 2.379307499000497e-06
181 56 2 2.5633974091037854e-06
182 57 2 1.2819416523087156e-06
183 58 2 1.4089427078163966e-06
184 59 2 3.66125315515057e-06
185 60 2 2.3928877374327448e-06
186 61 2 1.4111671535647362e-06
187 0 3 1.6779189597236214e-06
188 1 3 1.5340238230448052e-07
189 2 3 2.432295241253619e-06
190 3 3 1.3010009348190337e-05
191 4 3 2.3730464648843266e-07
192 5 3 1.3739965523115405e-06
193 6 3 3.952137124961633e-07
194 7 3 3.155988776057355e-08
195 8 3 1.4071249502517536e-06
196 9 3 8.191559470363382e-08
197 10 3 1.0734825309525816e-06
198 11 3 3.572150086684489e-08
199 12 3 1.466080453057062e-09
200 13 3 2.1042236402352766e-07
201 14 3 1.0903373579956802e-09
202 15 3 3.339422711906955e-08
203 16 3 1.407644015930164e-08
204 17 3 3.6986771487790064e-09
205 18 3 3.852738658616751e-09
206 19 3 3.979369280740354e-08
207 20 3 4.282893367024213e-10
208 21 3 5.4295132288056235e-09
209 22 3 3.077861195521981e-06
210 23 3 1.2006238905797644e-05
211 24 3 1.2703407032634987e-07
212 25 3 7.799393539634989e-07
213 26 3 1.7992110203000091e-06
214 27 3 2.6168887846639565e-08
215 28 3 1.1234586517419142e-06
216 29 3 4.171793874222455e-08
217 30 3 1.3969470102766962e-06
218 31 3 1.9450770535379826e-08
219 32 3 6.259236953942549e-10
220 33 3 2.6264548819273486e-07
221 34 3 9.768797512616382e-10
222 35 3 2.2170301672282224e-08
223 36 3 8.032934174042509e-09
224 37 3 2.1710424079229774e-09
225 38 3 2.2113049968287954e-09
226 39 3 3.3921175753385967e-08
227 40 3 3.101705108613648e-10
228 41 3 7.976199469434049e-09
229 42 3 2.5244064820270127e-05
230 43 3 2.21582280124111e-05
231 44 3 2.2807139964712807e-05
232 45 3 3.61991846064245e-05
233 46 3 3.090671732831716e-05
234 47 3 1.4907404052013884e-05
235 48 3 1.2337903466719944e-05
236 49 3 1.080966469114098e-05
237 50 3 3.834555770385926e-07
238 51 3 3.925336083662137e-06
239 52 3 1.1778226225251406e-06
240 53 3 3.6861173183310375e-06
241 54 3 1.591681326905763e-06
242 55 3 1.5936783292252707e-06
243 56 3 1.515421706179834e-06
244 57 3 4.864185700618347e-07
245 58 3 4.1606746137856056e-07
246 59 3 1.1570992658033103e-06
247 60 3 1.3427766561122517e-06
248 61 3 5.082154982219648e-07
249 0 4 0.0205039641688345
250 1 4 0.04866059884356233
251 2 4 0.03637254488154493
252 3 4 0.36219659073492116
253 4 4 1.3388058335531707
254 5 4 0.02004654645818077
255 6 4 0.019486713473299288
256 7 4 0.16193935925537065
257 8 4 0.0631535999750608
258 9 4 0.03412198333772526
259 10 4 0.05612201208554447
260 11 4 0.04321663461041361
261 12 4 0.005030346928443404
262 13 4 0.012825617704909966
263 14 4 0.029986225378496708
264 15 4 0.00044639876991990016
265 16 4 0.09085419385614514
266 17 4 0.029914555306907037
267 18 4 0.02438023112462226
268 19 4 0.0005472619357781884
269 20 4 0.0006277692840032874
270 21 4 0.00027490578466623795
271 22 4 0.04595894000318545
272 23 4 0.17827419757915053
273 24 4 8.900890097445311
274 25 4 0.09810393154007642
275 26 4 0.05881522228411621
276 27 4 0.17385722862739988
277 28 4 0.027844297085758873
278 29 4 0.11935919255696228
279 30 4 0.08555792319810154
280 31 4 0.0510644998920669
281 32 4 0.03691106102102187
282 33 4 0.026369968695289677
283 34 4 0.002876531933996214
284 35 4 0.005425174627686561
285 36 4 0.01815157881407565
286 37 4 0.006854595411928847
287 38 4 0.006324539611900617
288 39 4 0.004123115404021848
289 40 4 0.0017667782289782041
290 41 4 0.0013168853899216135
291 42 4 9.200115915634379e-05
292 43 4 0.00017986154292955455
293 44 4 2.0467922090031516e-05
294 45 4 3.480047032555738e-05
295 46 4 1.1332823174231566e-05
296 47 4 7.858785637520596e-05
297 48 4 3.024856741897044e-06
298 49 4 4.5104305767520685e-05
299 50 4 4.081567351655488e-06
300 51 4 4.239375060666371e-06
301 52 4 9.666258762820287e-06
302 53 4 1.7307957972458798e-05
303 54 4 6.787750701174875e-06
304 55 4 1.606295256923832e-06
305 56 4 2.499561906480614e-06
306 57 4 4.406667377077603e-06
307 58 4 2.0884873577843366e-06
308 59 4 1.2622143169145248e-05
309 60 4 2.1072951579928237e-06
310 61 4 4.394888103977257e-07
311 0 5 9.712411256418254e-07
312 1 5 9.291117429593709e-07
313 2 5 1.0569372597183809e-06
314 3 5 1.7859416336644376e-05
315 4 5 1.1348744144133306e-06
316 5 5 2.12208754101922e-06
317 6 5 2.4050763999424738e-06
318 7 5 4.57571434520338e-08
319 8 5 1.4522625320044582e-06
320 9 5 3.04387484883988e-08
321 10 5 6.728805671625538e-08
322 11 5 1.544628082688192e-08
323 12 5 8.471017254645395e-10
324 13 5 6.1612057469297355e-09
325 14 5 6.693400129874204e-10
326 15 5 8.287966412051873e-09
327 16 5 1.6536516177841088e-09
328 17 5 5.194272299610408e-11
329 18 5 5.945781110417705e-10
330 19 5 8.952875935323799e-10
331 20 5 2.904815789050385e-11
332 21 5 1.5083602957728635e-09
333 22 5 3.522993672503543e-06
334 23 5 1.3836609220907413e-05
335 24 5 2.155726829285195e-07
336 25 5 7.502720033594483e-07
337 26 5 1.0637280635430279e-06
338 27 5 3.5028100943099956e-08
339 28 5 1.93914732981406e-06
340 29 5 2.2315722395064875e-08
341 30 5 2.064364259866945e-06
342 31 5 1.3105252551935044e-08
343 32 5 2.6369072335266177e-10
344 33 5 4.2685603134195027e-07
345 34 5 5.0343619421928735e-09
346 35 5 4.3816587785905926e-08
347 36 5 1.2183475664111618e-08
348 37 5 4.2907026145026645e-09
349 38 5 3.2709486242678895e-09
350 39 5 1.0491286700233675e-08
351 40 5 3.447714530881146e-11
352 41 5 2.206230261741734e-09
353 42 5 8.277966197523942e-05
354 43 5 0.00012194526553798635
355 44 5 3.763906892857473e-06
356 45 5 0.00015879696741613174
357 46 5 8.712000747566543e-07
358 47 5 3.838206139187941e-05
359 48 5 4.8995095074099e-06
360 49 5 3.860018600706479e-05
361 50 5 2.8403825724187225e-06
362 51 5 2.6521575991801464e-06
363 52 5 5.776534001094428e-06
364 53 5 1.6552830980880583e-05
365 54 5 6.6436716500664e-06
366 55 5 2.7732677251453457e-06
367 56 5 2.095929310265258e-06
368 57 5 2.096052835099583e-06
369 58 5 9.310999272347141e-07
370 59 5 4.596922267849327e-06
371 60 5 8.101243385320552e-07
372 61 5 8.991694418573175e-08
1 0 0 0.01911310984295596
2 1 0 0.002864246841688928
3 2 0 0.021836199360293906
4 3 0 0.036927861678515854
5 4 0 0.26145770861238726
6 5 0 0.020291721847021753
7 6 0 0.0006879004623184956
8 7 0 0.027105544772059093
9 8 0 0.004198539151912342
10 9 0 0.010193832850861348
11 10 0 4.693079013451617e-05
12 11 0 0.005134109682671378
13 12 0 0.0003322318019750066
14 13 0 9.320864806052279e-05
15 14 0 0.00028651879240287187
16 15 0 3.412669371231852e-05
17 16 0 0.0004299178912722754
18 17 0 0.0001340950554508256
19 18 0 0.00013060426554075484
20 19 0 7.26154132368604e-06
21 20 0 4.285112837720846e-06
22 21 0 3.5626223601371226e-06
23 22 0 0.007135560149998667
24 23 0 0.04262659991864803
25 24 0 0.09064363043402443
26 25 0 0.00740861099263175
27 26 0 0.00961818300762488
28 27 0 0.02217788953652038
29 28 0 0.007137761264262066
30 29 0 0.01050423148254074
31 30 0 0.011387135146821785
32 31 0 0.004907962391104887
33 32 0 0.00040008138914600865
34 33 0 0.00249242793171257
35 34 0 0.0006496235041191167
36 35 0 0.0003981618509528631
37 36 0 0.002105396499104385
38 37 0 0.0005459758201045263
39 38 0 0.0006051691106973654
40 39 0 7.589964396271961e-05
41 40 0 5.270805954434293e-05
42 41 0 3.5647117701155028e-06
43 42 0 3.437677808917089e-06
44 43 0 3.243537081391981e-06
45 44 0 1.1429656063018695e-06
46 45 0 1.6673107684819889e-06
47 46 0 2.9043204664947013e-07
48 47 0 3.7074782334627402e-06
49 48 0 4.036818711621814e-07
50 49 0 1.5310266649438213e-06
51 50 0 3.199065681757722e-07
52 51 0 1.487430802020719e-07
53 52 0 2.7466005890190877e-07
54 53 0 4.83078311684555e-07
55 54 0 2.4573140556560935e-07
56 55 0 9.8131195191947e-08
57 56 0 2.444992078601483e-07
58 57 0 1.6127617300088072e-07
59 58 0 9.728068621931076e-08
60 59 0 4.760333726168786e-07
61 60 0 5.405324464081689e-08
62 61 0 9.748045902051344e-08
63 0 1 2.7954498106129537e-07
64 1 1 7.606452020449483e-08
65 2 1 9.363683003476784e-08
66 3 1 9.524475024451479e-07
67 4 1 7.0121042558421785e-09
68 5 1 8.096130107711956e-08
69 6 1 1.1956599755118508e-07
70 7 1 2.9767565130020286e-09
71 8 1 1.6354349477093243e-07
72 9 1 3.009903378162827e-09
73 10 1 2.1602041530191075e-07
74 11 1 1.4922982891530096e-09
75 12 1 2.6131440744053897e-11
76 13 1 4.878711477306277e-08
77 14 1 8.849130388399755e-11
78 15 1 6.850657279093737e-09
79 16 1 2.311747467542465e-10
80 17 1 5.0030589260896176e-11
81 18 1 5.851558997500495e-11
82 19 1 1.5844007616370298e-09
83 20 1 8.01329296662739e-12
84 21 1 3.249086431971455e-10
85 22 1 3.364215276777038e-07
86 23 1 7.358611726800103e-07
87 24 1 6.868287862866553e-09
88 25 1 3.311194731573484e-07
89 26 1 7.891236802890914e-08
90 27 1 3.7085228660613647e-09
91 28 1 9.57476973430693e-08
92 29 1 9.298625413812517e-10
93 30 1 9.882911753709025e-10
94 31 1 2.7559857054055994e-10
95 32 1 1.0033176404175299e-11
96 33 1 1.2331628552308085e-09
97 34 1 5.215726828736336e-11
98 35 1 6.451226360816989e-10
99 36 1 2.715425227565657e-11
100 37 1 7.405967784388479e-12
101 38 1 9.757539256559515e-12
102 39 1 7.502731133480662e-11
103 40 1 8.539399742862492e-13
104 41 1 8.689505766118116e-11
105 42 1 4.511979627624663e-06
106 43 1 8.567849289856819e-07
107 44 1 1.4057900482294645e-06
108 45 1 3.695007390815883e-06
109 46 1 1.7036757325277601e-06
110 47 1 2.132549559213103e-06
111 48 1 5.905165191465857e-07
112 49 1 1.1917944364797143e-06
113 50 1 3.398483409537849e-08
114 51 1 3.4123858491384e-07
115 52 1 1.0177558961725548e-07
116 53 1 4.457587075593701e-07
117 54 1 1.9756906316779456e-07
118 55 1 1.1394529925609041e-07
119 56 1 1.7017429013599555e-07
120 57 1 5.102618069736358e-08
121 58 1 5.5812027116115395e-08
122 59 1 1.1091333773938102e-07
123 60 1 1.0717864258899718e-07
124 61 1 2.8805190960658463e-08
125 0 2 0.020972116154789913
126 1 2 0.002695924696061817
127 2 2 0.017973093458834518
128 3 2 0.03154819591657832
129 4 2 0.10076926493261722
130 5 2 0.01634436880644906
131 6 2 0.01215071654746999
132 7 2 0.0232437226345975
133 8 2 0.003343190336083879
134 9 2 0.03510260663579843
135 10 2 0.003629251999639733
136 11 2 0.013820848423845043
137 12 2 0.00035290135044230135
138 13 2 0.00048662123844038084
139 14 2 0.0008925878639736258
140 15 2 0.00031243632709467375
141 16 2 0.0011313258511481121
142 17 2 0.0006862090929064479
143 18 2 0.000235054996588224
144 19 2 0.00019287569513785842
145 20 2 4.7093972377152475e-05
146 21 2 3.6679242633332817e-06
147 22 2 0.02127934484909956
148 23 2 0.04408439334828978
149 24 2 0.44742043938027687
.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0096            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=800.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0096   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0097            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0097   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0098            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0098   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0099            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=900.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0099   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0100            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0100   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0101            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   945.38 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0101   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt813
  # ------------------------------------------------------------------------------------------
  # Commande No :  0102            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_RESU(FORMAT='MED',
            UNITE=82,
            VERSION_MED='3.3.1',
            RESU=_F(RESULTAT=modes_1,
                    INFO_MAILLAGE='NON',
                    IMPR_NOM_VARI='OUI',),
            PROC0='OUI',
            INFO=1,)


Création du fichier au format MED 3.3.1.
  # Mémoire (Mo) :  4147.64 /   945.97 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0102   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt830
  # ------------------------------------------------------------------------------------------
  # Commande No :  0103            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matEl_A1, matAs_A1, masGene, rigGene, amoGene, vectGe10, vectGe45, elemprop),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   833.76 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0103   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt831
  # ------------------------------------------------------------------------------------------
  # Commande No :  0104            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(meshSlp, meshRaiR, meshPadR, tmp2, mesh, mesh0, model, f_EBal, f_TDBal, f_EPad1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   818.33 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0104   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt832
  # ------------------------------------------------------------------------------------------
  # Commande No :  0105            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(f_EPad2, f_TDPad1, f_TDPad2, tie2, tie3, BCinterf, load10, load45),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   775.11 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0105   user+syst:        0.02s (syst:        0.01s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt833
  # ------------------------------------------------------------------------------------------
  # Commande No :  0106            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matEl_K1, concrRe, steel, padMat1, padMat2, fieldmat, tabModes, macroEl1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   676.15 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0106   user+syst:        0.01s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt834
  # ------------------------------------------------------------------------------------------
  # Commande No :  0107            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matAs_K1, matEl_M1, matAs_M1, vectEl10, vectEl45, vectAs10, vectAs45, modeGene, numGene),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   525.17 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0107   user+syst:        0.04s (syst:        0.01s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt835
  # ------------------------------------------------------------------------------------------
  # Commande No :  0108            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(modStaR1, modStaR2, modStaS, Lint, bamo1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   415.30 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0108   user+syst:        0.01s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt836
  # ------------------------------------------------------------------------------------------
  # Commande No :  0109            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(harmGe10, harmGe45, CH_id, intCH_id),),
           INFO=1,)

  # Mémoire (Mo) :  4147.64 /   414.62 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0109   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt841
  # ------------------------------------------------------------------------------------------
  # Commande No :  0110            Concept de type : -
  # ------------------------------------------------------------------------------------------
  FIN(RETASSAGE='OUI',
      FORMAT_HDF='NON',
      INFO_RESU='OUI',
      PROC0='OUI',
      )

   
   !-------------------------------------------------------------------------!
   ! <I> <CATAMESS_89>                                                       !
   !                                                                         !
   !     Liste des alarmes émises lors de l'exécution du calcul.             !
   !                                                                         !
   !     Les alarmes que vous avez choisies d'ignorer sont précédées de (*). !
   !     Nombre d'occurrences pour chacune des alarmes :                     !
   !            ALGELINE_1           émise    6 fois                         !
   !            SUPERVIS2_2          émise    1 fois                         !
   !            SUPERVIS_1           émise    1 fois                         !
   !-------------------------------------------------------------------------!
   

 ======>

 STRUCTURE DU CONCEPT modes_1  CALCULE POUR          2 NUMEROS D'ORDRE

 LISTE DES NOMS SYMBOLIQUES:
 ! ---------- !----------------!
 ! NUME_ORDRE !      DEPL      !
 ! ---------- !----------------!
 !          1 !     DEPL_R     !
 !          2 !     DEPL_R     !
 ! ---------- !----------------!

 LISTE DES NOMS DE VARIABLES D'ACCES:
                                      FREQ             DE TYPE  R
                                      NUME_MODE        DE TYPE  I
                                      NOEUD_CMP        DE TYPE  K16

 LISTE DES NOMS DE PARAMETRES:
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 ! NUME_ORDRE !   AMOR_GENE    !  AMOR_REDUIT   !    CARAELEM    !    CHAMPMAT    !     EXCIT      !FACT_PARTICI_DX !FACT_PARTICI_DY !FACT_PARTICI_DZ !  MASS_EFFE_DX  !  MASS_EFFE_DY  !  MASS_EFFE_DZ  !MASS_EFFE_UN_DX !MASS_EFFE_UN_DY !MASS_EFFE_UN_DZ !   MASS_GENE    !     MODELE     !     NORME      !    NUME_DDL    !     OMEGA2     !   RIGI_GENE    !   TYPE_DEFO    !   TYPE_MODE    !
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 !          1 !       R        !       R        !       K8       !       K8       !      K24       !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       K8       !      K24       !       I        !       R        !       R        !      K16       !      K16       !
 !          2 !       R        !       R        !       K8       !       K8       !      K24       !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       K8       !      K24       !       I        !       R        !       R        !      K16       !      K16       !
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 ---------------------------------------------------------------------------
 Concepts de la base: G
    Nom       Type                 Taille (Mo)         Nombre      Nombre de
                                                     d'objets       segments
    TOTAL                                57.28             76            148
  
    num1       NUME_DDL_SDASTER          28.25             11             16
    modes_1    MODE_MECA                  1.74             20             26
    &FOZERO                               0.00              2              2
    &&_NUM_C                              0.00              1              1
    &CATA.AC                              0.00              2              4
    &CATA.CL                              0.60              1              3
    &CATA.GD                              0.14              4             11
    &CATA.ME                              0.20              2              4
    &CATA.OP                              0.30              4             19
    &CATA.PH                              0.00              1              1
    &CATA.PR                              0.00              2              4
    &CATA.TE                             26.03             17             42
    &CATA.TH                              0.01              2              4
    &CATA.TM                              0.01              7             11
 ---------------------------------------------------------------------------


     Nom de la base                          :  GLOBALE
     Nombre d'enregistrements utilisés       :  93
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  413
     Volume des accès en lecture             :        322.66 Mo.
     Nombre total d'accès en écriture        :  174
     Volume des accès en écriture            :        135.94 Mo.
     Nombre d'identificateurs utilisés       :  1835
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  91 %


     Nom de la base                          :  VOLATILE
     Nombre d'enregistrements utilisés       :  62
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  509
     Volume des accès en lecture             :        397.66 Mo.
     Nombre total d'accès en écriture        :  623
     Volume des accès en écriture            :        486.72 Mo.
     Nombre d'identificateurs utilisés       :  1030
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  51 %

  Ouverture en lecture du fichier ./glob.1

     Nom de la base                          :  GLOBALE
     Créée avec la version                   :  14.04.00
     Nombre d'enregistrements utilisés       :  93
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre d'identificateurs utilisés       :  1835
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  91 %

  Ouverture en lecture du fichier ./glob.1


Lancement de la commande : rm -f ./vola.?


  Ouverture en écriture du fichier ./vola.1


Lancement de la commande : rm -f ./glob.*



Lancement de la commande ->mv ./vola.1 ./glob.1<-

 <I> <FIN> RETASSAGE DE LA BASE "GLOBALE" EFFECTUEE,  1 FICHIER(S) UTILISE(S).

 <FIN> Arrêt normal dans "FIN".
 <I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".

 La mémoire demandée au lancement est surestimée, elle est de 8000.00 Mo.
 Le pic mémoire utilisée est de 4147.64 Mo.



     Nom de la base                          :  ELEMBASE
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  60
     Volume des accès en lecture             :         46.88 Mo.
     Nombre total d'accès en écriture        :  0
     Volume des accès en écriture            :          0.00 Mo.
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %
  
 <I> <FIN> MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :                     180.99 Mo
 <I> <FIN> MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :                     652.08 Mo
 <I> <FIN> MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS LORS DE L'EXECUTION :    4147.64 Mo
  
 <I>       FERMETURE DES BASES EFFECTUEE
  
   STATISTIQUES CONCERNANT L'ALLOCATION DYNAMIQUE :
     TAILLE CUMULEE MAXIMUM            :                  652  Mo.
     TAILLE CUMULEE LIBEREE            :                  497  Mo.
     NOMBRE TOTAL D'ALLOCATIONS        :               665913
     NOMBRE TOTAL DE LIBERATIONS       :               665853
     APPELS AU MECANISME DE LIBERATION :                    0
     TAILLE MEMOIRE CUMULEE RECUPEREE  :                  697  Mo.
     VOLUME DES LECTURES               :                    0  Mo.
     VOLUME DES ECRITURES              :                  505  Mo.
  
   MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :     180.99 Mo
     - IMPOSE DE NOMBREUX ACCES DISQUE
     - RALENTIT LA VITESSE D'EXECUTION
   MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :     652.08 Mo
     - LIMITE LES ACCES DISQUE
     - AMELIORE LA VITESSE D'EXECUTION
   MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS     :    4147.64 Mo
     - COMPREND LA MEMOIRE CONSOMMEE PAR  JEVEUX, 
       LE SUPERVISEUR PYTHON, LES LIBRAIRIES EXTERNES
  
 <I>       FIN D'EXECUTION LE : JE-25-AOUT-2022 19:01:47


  <I> Informations sur les temps d'exécution
      Temps cpu user total                  196.48 s
      Temps cpu systeme total                 4.53 s
      Temps elapsed total                   205.19 s
      Temps restant                     3599794.81 s


  La signature de la base sauvegardée est (à l'adresse 0) :
    a5bd95be1b7c04791fa912f586bcdce95a0210f3

 ********************************************************************************
 * COMMAND                  :       USER :     SYSTEM :   USER+SYS :    ELAPSED *
 ********************************************************************************
 * init (jdc)               :     196.48 :       4.54 :     201.02 :     205.20 *
 *  . compile               :       0.00 :       0.00 :       0.00 :       0.00 *
 *  . exec_compile          :     196.31 :       4.52 :     200.83 :     205.01 *
 * DEBUT                    :       0.02 :       0.02 :       0.04 :       0.04 *
 * LIRE_MAILLAGE            :       0.02 :       0.00 :       0.02 :       0.02 *
 * LIRE_MAILLAGE            :       0.02 :       0.00 :       0.02 :       0.02 *
 * LIRE_MAILLAGE            :       0.02 :       0.01 :       0.03 :       0.02 *
 * MODI_MAILLAGE            :       0.01 :       0.00 :       0.01 :       0.02 *
 * MODI_MAILLAGE            :       0.00 :       0.00 :       0.00 :       0.01 *
 * ASSE_MAILLAGE            :       0.04 :       0.00 :       0.04 :       0.04 *
 * ASSE_MAILLAGE            :       0.05 :       0.00 :       0.05 :       0.06 *
 * CREA_MAILLAGE            :       0.07 :       0.00 :       0.07 :       0.07 *
 * AFFE_MODELE              :       0.03 :       0.00 :       0.03 :       0.03 *
 * CREA_CHAMP               :       0.00 :       0.00 :       0.00 :       0.00 *
 * POST_ELEM                :       0.01 :       0.01 :       0.02 :       0.02 *
 * LIRE_FONCTION            :       0.01 :       0.00 :       0.01 :       0.01 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.01 :       0.00 :       0.01 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.01 *
 * LIRE_FONCTION            :       0.01 :       0.00 :       0.01 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * AFFE_CHAR_MECA           :       0.12 :       0.01 :       0.13 :       0.14 *
 * AFFE_CHAR_MECA           :       0.28 :       0.02 :       0.30 :       0.31 *
 * AFFE_CHAR_MECA           :       0.04 :       0.00 :       0.04 :       0.05 *
 * AFFE_CHAR_MECA           :       0.00 :       0.00 :       0.00 :       0.00 *
 * AFFE_CHAR_MECA           :       0.01 :       0.00 :       0.01 :       0.01 *
 * DEFI_MATERIAU            :       0.01 :       0.00 :       0.01 :       0.00 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.01 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * AFFE_MATERIAU            :       0.00 :       0.01 :       0.01 :       0.01 *
 * AFFE_CARA_ELEM           :       0.12 :       0.00 :       0.12 :       0.14 *
 * CALC_MATR_ELEM           :       0.35 :       0.01 :       0.36 :       0.38 *
 * NUME_DDL                 :       0.66 :       0.21 :       0.87 :       1.08 *
 * ASSE_MATRICE             :       0.25 :       0.02 :       0.27 :       0.29 *
 * CALC_MATR_ELEM           :       0.11 :       0.03 :       0.14 :       0.19 *
 * ASSE_MATRICE             :       0.19 :       0.01 :       0.20 :       0.21 *
 * CALC_VECT_ELEM           :       0.00 :       0.00 :       0.00 :       0.00 *
 * CALC_VECT_ELEM           :       0.00 :       0.00 :       0.00 :       0.01 *
 * ASSE_VECTEUR             :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_VECTEUR             :       0.00 :       0.00 :       0.00 :       0.01 *
 * CALC_MATR_ELEM           :       0.13 :       0.02 :       0.15 :       0.16 *
 * ASSE_MATRICE             :       0.19 :       0.01 :       0.20 :       0.20 *
 * INFO_MODE                :      47.13 :       0.82 :      47.95 :      49.48 *
 * CALC_MODES               :      83.41 :       1.44 :      84.85 :      85.99 *
 * MODE_STATIQUE            :      18.68 :       0.44 :      19.12 :      19.47 *
 * MODE_STATIQUE            :      18.65 :       0.41 :      19.06 :      19.33 *
 * MODE_STATIQUE            :      18.23 :       0.52 :      18.75 :      19.05 *
 * NORM_MODE                :       0.90 :       0.04 :       0.94 :       0.95 *
 * NORM_MODE                :       0.94 :       0.01 :       0.95 :       0.96 *
 * NORM_MODE                :       0.91 :       0.04 :       0.95 :       0.96 *
 * DEFI_INTERF_DYNA         :       0.07 :       0.00 :       0.07 :       0.07 *
 * DEFI_BASE_MODALE         :       0.03 :       0.00 :       0.03 :       0.04 *
 * DEFI_BASE_MODALE         :       0.05 :       0.00 :       0.05 :       0.05 *
 * DEFI_BASE_MODALE         :       0.06 :       0.00 :       0.06 :       0.06 *
 * MACR_ELEM_DYNA           :       3.69 :       0.27 :       3.96 :       4.05 *
 * DEFI_MODELE_GENE         :       0.23 :       0.00 :       0.23 :       0.23 *
 * NUME_DDL_GENE            :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_MATR_GENE           :       0.01 :       0.00 :       0.01 :       0.00 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_VECT_GENE           :       0.01 :       0.00 :       0.01 :       0.01 *
 * ASSE_VECT_GENE           :       0.01 :       0.00 :       0.01 :       0.01 *
 * DYNA_VIBRA               :       0.02 :       0.01 :       0.03 :       0.03 *
 * DYNA_VIBRA               :       0.03 :       0.00 :       0.03 :       0.03 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.00 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.01 *
 * IMPR_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_RESU                :       0.03 :       0.00 :       0.03 :       0.03 *
 * DETRUIRE                 :       0.02 :       0.00 :       0.02 :       0.02 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * DETRUIRE                 :       0.01 :       0.01 :       0.02 :       0.01 *
 * DETRUIRE                 :       0.01 :       0.00 :       0.01 :       0.02 *
 * DETRUIRE                 :       0.03 :       0.01 :       0.04 :       0.03 *
 * DETRUIRE                 :       0.01 :       0.00 :       0.01 :       0.02 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * FIN                      :       0.03 :       0.10 :       0.13 :       0.13 *
 *  . part Superviseur      :       0.63 :       0.08 :       0.71 :       0.84 *
 *  . part Fortran          :     195.85 :       4.46 :     200.31 :     204.36 *
 ********************************************************************************
 * TOTAL_JOB                :     196.48 :       4.53 :     201.01 :     205.19 *
 ********************************************************************************


150 25 2 0.004266491397699168
151 26 2 0.0037403134756500023
152 27 2 0.014019236557348621
153 28 2 0.010542057873466688
154 29 2 0.17067915188238428
155 30 2 0.01104944973736955
156 31 2 0.07618857307127429
157 32 2 0.001894379759813858
158 33 2 0.002876535122925081
159 34 2 0.0008320444856742937
160 35 2 0.00028223842713742935
161 36 2 0.020667118937568438
162 37 2 0.005127925608427739
163 38 2 0.006043550556950442
164 39 2 7.688109222390119e-05
165 40 2 0.0005251917557435189
166 41 2 4.238185376927725e-05
167 42 2 5.522187370544392e-06
168 43 2 1.3646864520178252e-05
169 44 2 7.564075805311578e-06
170 45 2 2.081013558269143e-06
171 46 2 2.05274856609766e-06
172 47 2 1.0489629443998487e-05
173 48 2 1.7231637751531339e-06
174 49 2 4.960611367341731e-06
175 50 2 7.631522717256365e-07
176 51 2 3.1287740923563017e-07
177 52 2 9.701250030434223e-07
178 53 2 1.8229074159704328e-06
179 54 2 7.563831211509152e-07
180 55 2 5.628350537848544e-07
181 56 2 4.3338598640242164e-07
182 57 2 5.034450358839252e-07
183 58 2 3.2328250818749843e-07
184 59 2 1.4422288561301358e-06
185 60 2 5.347530293228828e-07
186 61 2 2.637634489462101e-07
187 0 3 3.264114442555591e-07
188 1 3 6.774928074319313e-08
189 2 3 2.7290595501197844e-07
190 3 3 7.875443954628843e-07
191 4 3 4.04238972862897e-08
192 5 3 5.3514277286907275e-08
193 6 3 4.703009151096774e-08
194 7 3 9.096540593973074e-10
195 8 3 1.2450275714617727e-07
196 9 3 8.804010630635394e-09
197 10 3 9.583046144154791e-08
198 11 3 3.876528540245899e-09
199 12 3 2.398938116021545e-10
200 13 3 2.6960532377688688e-08
201 14 3 1.7499006483752158e-10
202 15 3 9.819408664273017e-09
203 16 3 1.1947111623501304e-09
204 17 3 3.0480884192647693e-10
205 18 3 3.2424734560672675e-10
206 19 3 1.3282812738287024e-09
207 20 3 5.5984356676946814e-11
208 21 3 4.211770173988605e-10
209 22 3 2.734081786642272e-07
210 23 3 7.529101227802692e-07
211 24 3 5.637571890104817e-09
212 25 3 2.651618044400249e-07
213 26 3 1.792396253913738e-07
214 27 3 3.007298043510154e-09
215 28 3 7.422746730880692e-08
216 29 3 4.5104352584756163e-10
217 30 3 4.354621564694227e-08
218 31 3 2.1973981244681174e-10
219 32 3 7.560439697881333e-11
220 33 3 4.58172053264928e-09
221 34 3 6.062418460127938e-11
222 35 3 4.9972710155143675e-09
223 36 3 1.8636192221599345e-10
224 37 3 4.154817920458609e-11
225 38 3 3.052311622052375e-11
226 39 3 4.028463518539047e-09
227 40 3 7.336680489976376e-12
228 41 3 1.6047058315205314e-10
229 42 3 4.188621565431759e-06
230 43 3 7.0389413826867456e-06
231 44 3 4.48021218306678e-06
232 45 3 1.3342169058350293e-05
233 46 3 6.172852023441029e-06
234 47 3 5.842705914873689e-06
235 48 3 2.4873274811331137e-06
236 49 3 4.045162332082607e-06
237 50 3 1.0011538522350099e-07
238 51 3 7.697238146198933e-07
239 52 3 4.081361902154231e-07
240 53 3 1.465762513562139e-06
241 54 3 6.19016428606705e-07
242 55 3 3.782154850412659e-07
243 56 3 2.5070251694406656e-07
244 57 3 1.9115480345782577e-07
245 58 3 5.770493862658897e-08
246 59 3 4.384274296939004e-07
247 60 3 2.493064415453399e-07
248 61 3 9.964642418120181e-08
249 0 4 0.01421892849439961
250 1 4 0.020471213300500998
251 2 4 0.028560859054209135
252 3 4 0.03229170598377686
253 4 4 0.39186943736873636
254 5 4 0.011382497641566527
255 6 4 0.006118913214754725
256 7 4 0.020126264303004668
257 8 4 0.0017878448107429125
258 9 4 0.01951527169095014
259 10 4 0.0026669642994610935
260 11 4 0.021302490245311695
261 12 4 0.0008513156425116363
262 13 4 0.00012879551130082136
263 14 4 0.006600594281464359
264 15 4 0.00022455494347584513
265 16 4 0.01722495025689189
266 17 4 0.005893779988355606
267 18 4 0.0045341215061358905
268 19 4 0.00017184033715193298
269 20 4 3.303748776178358e-05
270 21 4 2.372110064889275e-05
271 22 4 0.021999464414076655
272 23 4 0.2430473945020806
273 24 4 1.703577187435016
274 25 4 0.1377834567073949
275 26 4 0.13065391026713769
276 27 4 0.019859256036508517
277 28 4 0.012357322928646034
278 29 4 0.027221837106264524
279 30 4 0.08586653233641217
280 31 4 0.04691490112357587
281 32 4 0.03189302920245894
282 33 4 0.026224737371033376
283 34 4 0.0014197702861948338
284 35 4 0.005283532712390131
285 36 4 0.012520832638074875
286 37 4 0.005788552846626715
287 38 4 0.0042466249582068065
288 39 4 0.0041477202651309525
289 40 4 0.0017972921449584908
290 41 4 0.0012830983878388555
291 42 4 2.4594549045672705e-05
292 43 4 4.828888177883186e-05
293 44 4 1.0704123587944974e-05
294 45 4 1.580352017469842e-05
295 46 4 4.153802359525546e-06
296 47 4 1.8717165118171608e-05
297 48 4 1.9630250553115718e-06
298 49 4 1.1423043490628932e-05
299 50 4 8.858434170845319e-07
300 51 4 1.3097948631201758e-06
301 52 4 2.5419522164076963e-06
302 53 4 5.107312389750602e-06
303 54 4 1.7217030746110084e-06
304 55 4 8.084097005475689e-07
305 56 4 2.496315120893194e-07
306 57 4 1.0726481959636907e-06
307 58 4 6.50656703816229e-07
308 59 4 2.946257992356406e-06
309 60 4 8.985392786628752e-07
310 61 4 1.068640137565495e-07
311 0 5 1.8474254661555364e-07
312 1 5 1.6058567194230002e-07
313 2 5 9.69037954633357e-08
314 3 5 8.407940345322391e-07
315 4 5 5.684682077399668e-08
316 5 5 8.087856117575287e-08
317 6 5 1.0334707074131321e-07
318 7 5 4.412789446245991e-09
319 8 5 7.805686183014278e-09
320 9 5 8.049733492379485e-09
321 10 5 2.841301341163939e-08
322 11 5 2.7370037106056324e-09
323 12 5 4.9248378891593986e-11
324 13 5 3.780353401601496e-10
325 14 5 1.4988233011719562e-11
326 15 5 5.865914450006921e-10
327 16 5 3.019097608365122e-10
328 17 5 2.0641457580791138e-11
329 18 5 1.008285263158998e-10
330 19 5 2.10705766235763e-11
331 20 5 2.3076787595547174e-12
332 21 5 6.189405767608067e-11
333 22 5 5.380431494229807e-07
334 23 5 6.972553865894476e-07
335 24 5 4.128825202403342e-08
336 25 5 1.9386893595852326e-07
337 26 5 2.92923730704769e-07
338 27 5 1.4503054669151598e-09
339 28 5 1.0776435580988734e-07
340 29 5 9.671471221309402e-09
341 30 5 3.228154965852166e-08
342 31 5 4.315220026453923e-09
343 32 5 1.6467255218050152e-10
344 33 5 4.084836140911897e-09
345 34 5 6.901748962788274e-10
346 35 5 8.194576807682017e-09
347 36 5 9.014916457361099e-10
348 37 5 4.1065726998738254e-10
349 38 5 2.256862685219462e-10
350 39 5 4.4749835423161054e-10
351 40 5 2.356458740212525e-11
352 41 5 6.873704325398351e-10
353 42 5 1.821685644698338e-05
nModesTot 62
nEigen 2
TOTAL TIME 204.68270134925842
WARNING: can not pickle object: f <class '_io.TextIOWrapper'>
WARNING: can not pickle object: freqFile <class '_io.TextIOWrapper'>
WARNING: can not pickle object: temp1 <class 'Utilitai.Table.Table'>
WARNING: can not pickle object: fileVect <class '_io.TextIOWrapper'>
WARNING: can not pickle object: fileModes <class '_io.TextIOWrapper'>
--- Fin de l'exécution
EXECUTION_CODE_ASTER_EXIT_92088=0
