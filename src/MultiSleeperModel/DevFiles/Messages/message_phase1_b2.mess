# ------------------------------------------------------------------------------------------
# Impression du contenu du fichier de commandes à exécuter :
# ------------------------------------------------------------------------------------------
######################################################
# CRAIG-BAMPTON MODELISATION with coupling modes : Phase 2 / Run simulation
######################################################
DEBUT(PAR_LOT='NON')


from Utilitai import partition
from Utilitai.Table import Table
from math import pi
import time
import numpy as np
import os
import json


with open('fort.2', 'r') as f:
    txt = f.read()
f.close()

parameters = json.loads(txt)
maxFreq = parameters['phase1FreqMax']
includeUSP = parameters['USPON']
freq1 = parameters['phase1Freqs'][0]
freq2 = parameters['phase1Freqs'][-1]
nuPadMat1 = parameters['nuMat1']
nuPadMat2 = parameters['nuMat2']
coefSlpBotArea = parameters['balAreaCoef']
nuBal = parameters['nuBal']
hBal = parameters['hBal']
nModesRails = parameters['phase1RailModes']
nModesSleeper = parameters['phase1SlpModes']
slpForce = 3

if includeUSP == True:
    nuUSP = parameters['nuUSP']

######################################################
# Define functions
######################################################


def GetAlphaBeta(freqList, dampingList):
# Computes optimized Rayleigh's coefs alpha & beta ( eta=1/2*(alpha*w+beta/w) )
# freqList in Hz ; both lists = np.array()
    print(freqList)
    print(dampingList)
    if len(freqList) == 1: # only 1 freq: set beta to 0 and alpha s.t. damping is exact
        return [dampingList[0]/(pi*freqList[0]), 0] 
    elif len(freqList) == 2: # only 2 freqs: return alpha, beta s.t. damping is exact at both freqs
        f0 = freqList[0]
        f1 = freqList[1]
        eta0 = dampingList[0]
        eta1 = dampingList[1]
        alpha = eta0/(pi*f0)*(1 - f1/eta0 * (eta0*f1-eta1*f0)/(f1**2-f0**2))
        beta = 4*pi*f0*f1 * (eta0*f1-eta1*f0)/(f1**2-f0**2)
        return [alpha, beta]

    # more than 2 freqs: use least squares method to optimize damping
    A = np.trapz(dampingList*2*pi*freqList, 2*pi*freqList)
    B = np.trapz(dampingList/(2*pi*freqList), 2*pi*freqList)
    vect = np.array([[A], [B]])
    w1 = 2*pi*freqList[0]
    w2 = 2*pi*freqList[-1]
    M = 12/((w2**3-w1**3)*(1/w1-1/w2) - 3*(w2-w1)**2) * np.array([[1/2*(1/w1-1/w2), -1/2*(w2-w1)], [-1/2*(w2-w1), 1/6*(w2**3-w1**3)]])
    alphaBeta = np.dot(M, vect)
    alpha = float(alphaBeta[0])
    beta = float(alphaBeta[1])
    return [alpha, beta]

    

######################################################
# Trim eigenmodes and define min number of interface modes to compute
######################################################
t0=time.time()
freqBands1 = list(range(0, int(maxFreq) + 1, min(1000, int(maxFreq))))
if freqBands1[-1] != int(maxFreq):
    freqBands1.append(int(maxFreq))


######################################################
# Get list of frequencies from freq files
######################################################
with open('fort.40') as freqFile:
    freqlines = freqFile.read().splitlines()
freqFile.close()

allFreqs = []
for freqline in freqlines:
    try:
        frequency=float(freqline.split(' ')[0])
    except:
        continue
    allFreqs.append(frequency)


######################################################
# MESHES AND MODEL
######################################################
meshSlp = LIRE_MAILLAGE(FORMAT="MED",UNITE=21);
meshRaiR = LIRE_MAILLAGE(FORMAT="MED",UNITE=25);

meshPadR = LIRE_MAILLAGE(FORMAT="MED",UNITE=23);
offsetPadDroit = 757.54
offsetPadBas = 214.0
rotpadX=-1.43261

meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                       MAILLAGE=meshPadR,
                       ROTATION=_F(
                         ANGLE=rotpadX, 
                         POIN_1=(0.0, 0.0, 0.0), 
                         POIN_2=(1000.0, 0.0, 0.0)))

meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                       MAILLAGE=meshPadR,
                       TRANSLATION=(0.0, offsetPadBas, offsetPadDroit),)


if includeUSP == True:
    USPthk = 8.5
    
    meshUSP = LIRE_MAILLAGE(FORMAT="MED",UNITE=26);
    
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_MA = _F(TYPE_MAILLE='2D', NOM='USPbot', OPTION='FACE_NORMALE', VECT_NORMALE=(0,-1,0)))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPbot', GROUP_MA='USPbot'))
                         
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPtop', OPTION='PLAN', POINT=(0,USPthk,0), VECT_NORMALE=(0,1,0), PRECISION=1e-3))
    ###                     
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='tmp', OPTION='PLAN', POINT=(0,0,0), VECT_NORMALE=(0,0,1), PRECISION=1e-3))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPsym', DIFFE=('tmp', 'USPtop')))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         DETR_GROUP_NO = _F(NOM='tmp'))
    
    # Translate components above USPs of USP's thickness
    meshSlp = MODI_MAILLAGE(reuse=meshSlp, MAILLAGE=meshSlp, TRANSLATION=(0, USPthk, 0));
    meshPadR = MODI_MAILLAGE(reuse=meshPadR, MAILLAGE=meshPadR, TRANSLATION=(0, USPthk, 0));
    meshRaiR = MODI_MAILLAGE(reuse=meshRaiR, MAILLAGE=meshRaiR, TRANSLATION=(0, USPthk, 0));
    
    tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshUSP, MAILLAGE_2=meshSlp, OPERATION='SUPERPOSE')
    tmp3 = ASSE_MAILLAGE(MAILLAGE_1=tmp2, MAILLAGE_2=meshPadR, OPERATION='SUPERPOSE')
    mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp3, MAILLAGE_2=meshRaiR, OPERATION='SUPERPOSE')
    
    mesh0 = DEFI_GROUP(reuse=mesh0, MAILLAGE=mesh0, 
                       CREA_GROUP_NO = _F(NOM='slpSym2', UNION=('slpSym', 'USPsym')))
    
    discreteBalNodes = 'USPbot'
    slpSym = 'slpSym2'
else:
    tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshSlp, MAILLAGE_2=meshPadR, OPERATION='SUPERPOSE')
    mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp2, MAILLAGE_2=meshRaiR, OPERATION='SUPERPOSE')
    discreteBalNodes = 'slpBot'
    slpSym = 'slpSym'

mesh = CREA_MAILLAGE(CREA_POI1=_F(GROUP_NO=discreteBalNodes, 
                                  NOM_GROUP_MA=discreteBalNodes + '0D'), 
                     MAILLAGE=mesh0) 

model = AFFE_MODELE(MAILLAGE=mesh,
                    AFFE=(_F(TOUT='OUI',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),
                          _F(GROUP_MA=discreteBalNodes + '0D',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='DIS_T',),));
                          
# Compute area of a half-sleeper bottom face
CH_id = CREA_CHAMP(OPERATION = 'AFFE',
                      TYPE_CHAM ='NOEU_NEUT_R',
                      MAILLAGE = mesh ,
                      AFFE = _F(GROUP_MA=discreteBalNodes, NOM_CMP=('X1'), VALE=1.0,))

intCH_id = POST_ELEM(CHAM_GD=CH_id,
                     INTEGRALE=_F(GROUP_MA=discreteBalNodes,
                                  NOM_CMP=('X1'),
                                  TYPE_MAILLE='2D'),
                     MODELE=model)
                     
A_slpBot = intCH_id['INTE_X1',1]

# Get number of nodes in discreteBalNodes
pyMesh = partition.MAIL_PY()
pyMesh.FromAster('mesh')
nodeGrps = mesh.LIST_GROUP_NO()
for gp in nodeGrps:
    gpName = gp[0]
    if gpName == discreteBalNodes:
        gpNodes = pyMesh.gno.get(gpName)
        nNodesBal = len(gpNodes)
        break
                    
######################################################
# Import materials properties / functions
######################################################
f_EPad1=LIRE_FONCTION(UNITE = 30,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')
                 
f_TDPad1=LIRE_FONCTION(UNITE = 31,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')


f_EPad2=LIRE_FONCTION(UNITE = 32,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')
                 
f_TDPad2=LIRE_FONCTION(UNITE = 33,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')

if includeUSP:
    f_EUSP=LIRE_FONCTION(UNITE = 34,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')
                     
    f_TDUSP=LIRE_FONCTION(UNITE = 35,
                             NOM_PARA = 'FREQ',
                             PROL_GAUCHE = 'CONSTANT',
                             PROL_DROITE = 'CONSTANT')

f_EBal=LIRE_FONCTION(UNITE = 36,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')

f_TDBal=LIRE_FONCTION(UNITE = 37,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')

# Materials frequency-independent hysteretic damping
eta_concrete = 0.016
eta_steel = 0.001

######################################################
# BOUNDARY CONDITIONS AND INTERACTIONS
######################################################

nForce10 = 'nForce10'
force10 = (0, -100000.0, 10000.0)
nForce45 = 'nForce45'
force45 = (0, -173205, -173205)

if includeUSP == True:
    tie1 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('USPtop', ),
                                           GROUP_MA_MAIT=('slpBotV', ),
                                           TYPE_RACCORD='MASSIF')),
                          MODELE=model)
                          
tie2 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('botn', ),
                                       GROUP_MA_MAIT=('slpUpad', ),
                                       TYPE_RACCORD='MASSIF')),
                      MODELE=model)
                      
tie3 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('topn', ),
                                       GROUP_MA_MAIT=('railBotV', ),
                                       TYPE_RACCORD='MASSIF')),
                      MODELE=model)
                                    
BCinterf=AFFE_CHAR_MECA(MODELE=model,
                        DDL_IMPO=_F(GROUP_NO=('railFt', 'railBk', slpSym), #SANS_GROUP_NO='nope','USPsym'
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0),);

if includeUSP == True:
    BCs = (BCinterf, tie1, tie2, tie3)
else:
    BCs = (BCinterf, tie2, tie3)
                              
load10 = AFFE_CHAR_MECA(FORCE_NODALE=_F(FX = force10[0],
                                      FY = force10[1],
                                      FZ = force10[2],
                                      GROUP_NO=(nForce10, )),
                      MODELE=model)
                      
load45 = AFFE_CHAR_MECA(FORCE_NODALE=_F(FX = force45[0],
                                      FY = force45[1],
                                      FZ = force45[2],
                                      GROUP_NO=(nForce45, )),
                      MODELE=model)

t_macroEl = 0
t_modeGe = 0
t_harmo = 0

# Loop over N bands within this frequency band => N macroelem with optimized Rayleigh damping
normMode='TRAN'

# meanFreq is the frequency at which E' is gonna be taken. Since modes are damping independent, 
# we decide to compute them (interface and eigen) only once per job. So we evaluate them with 
# E' at the middle of the whole frequency range (among all jobs). It must be so, otherwise each job
# provides a different list of modes and analyzing their contributions to the response is much harder. 
# However, the frequency range of each job can be divided in nBands bands to better model Rayleigh damping. 
# So the damping matrices are recomputed for each band, as well as the macroelement.


meanFreqGlob = (freq1+freq2)/2.0 # (allFreqs[0] + allFreqs[-1])/2
meanFreqJob = (allFreqs[0] + allFreqs[-1])/2

# to be used for damping (not stiffness, see comments above !), when Rayleigh damping is not possible 
# and viscous damping is used. Properties are taken at the middle of the band


# Materials
allFreqsNP = np.array(allFreqs)
AB_concrete = GetAlphaBeta(allFreqsNP, eta_concrete*np.ones(len(allFreqs)))
AB_steel = GetAlphaBeta(allFreqsNP, eta_steel*np.ones(len(allFreqs)))

eta_padMat1 = np.array([f_TDPad1(f) for f in allFreqs])
AB_padMat1 = GetAlphaBeta(allFreqsNP, eta_padMat1)
eta_padMat2 = np.array([f_TDPad2(f) for f in allFreqs])
AB_padMat2 = GetAlphaBeta(allFreqsNP, eta_padMat2)

if includeUSP:
    eta_USP = np.array([f_TDUSP(f) for f in allFreqs])
    AB_USP = GetAlphaBeta(allFreqsNP, eta_USP)


                        
concrRe = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_concrete[0],
                                AMOR_BETA=AB_concrete[1],
                                E=46300.0,
                                NU=0.2,
                                RHO=2.4356e-09))
                            
steel = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_steel[0],
                              AMOR_BETA=AB_steel[1],
                              E=210000.0,
                              NU=0.3,
                              RHO=7.85e-09))
                            
padMat1 = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_padMat1[0],
                                AMOR_BETA=AB_padMat1[1],
                                E=f_EPad1(meanFreqGlob),
                                NU=nuPadMat1,
                                RHO=1.0e-09))
                                
padMat2 = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_padMat2[0],
                                AMOR_BETA=AB_padMat2[1],
                                E=f_EPad2(meanFreqGlob),
                                NU=nuPadMat2,
                                RHO=1.0e-09))   
    

if includeUSP == True:
    USPmat = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_USP[0],
                                   AMOR_BETA=AB_USP[1],
                                   E=f_EUSP(meanFreqGlob), 
                                   NU=nuUSP,
                                   RHO=0.375e-09)) 

    fieldmat = AFFE_MATERIAU(AFFE=(_F(GROUP_MA=('sleeper'),
                                      MATER=(concrRe, )),
                                   _F(GROUP_MA=('hard'),
                                      MATER=(padMat1, )),
                                   _F(GROUP_MA=('soft'),
                                      MATER=(padMat2, )),
                                   _F(GROUP_MA=('USP'),
                                      MATER=(USPmat, )),
                                   _F(GROUP_MA=('rail'),
                                      MATER=(steel, ))),
                             MAILLAGE=mesh,
                             MODELE=model,)
else:
    fieldmat = AFFE_MATERIAU(AFFE=(_F(GROUP_MA=('sleeper'),
                                      MATER=(concrRe, )),
                                   _F(GROUP_MA=('hard'),
                                      MATER=(padMat1, )),
                                   _F(GROUP_MA=('soft'),
                                      MATER=(padMat2, )),
                                   _F(GROUP_MA=('rail'),
                                      MATER=(steel, ))),
                             MAILLAGE=mesh,
                             MODELE=model,)
                    
######################################################
# Compute elementary matrices & assemble (K, M and vect are independent of damping)
######################################################  
nodeStiff_Y = f_EBal(meanFreqGlob)*(coefSlpBotArea*A_slpBot)/hBal/nNodesBal
nodeStiff_XZ = f_EBal(meanFreqGlob)/2/(1+nuBal)*(coefSlpBotArea*A_slpBot)/hBal/nNodesBal
nodeAmo_Y = nodeStiff_Y*f_TDBal(meanFreqJob)/(2*pi*meanFreqJob)
nodeAmo_XZ = nodeStiff_XZ*f_TDBal(meanFreqJob)/(2*pi*meanFreqJob)

elemprop = AFFE_CARA_ELEM(DISCRET=(_F(CARA='K_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=(nodeStiff_XZ, nodeStiff_Y, nodeStiff_XZ),),
                                   _F(CARA='M_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=0),
                                   _F(CARA='A_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=(nodeAmo_XZ, nodeAmo_Y, nodeAmo_XZ)),
                                      ),
                          MODELE=model)
                              
matEl_K1=CALC_MATR_ELEM(MODELE=model,
                        CHAM_MATER=fieldmat,
                        OPTION='RIGI_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
num1 = NUME_DDL(MATR_RIGI=matEl_K1)
matAs_K1 = ASSE_MATRICE(MATR_ELEM=matEl_K1, NUME_DDL=num1)

matEl_M1=CALC_MATR_ELEM(MODELE=model,
                        CHAM_MATER=fieldmat,
                        OPTION='MASS_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
matAs_M1 = ASSE_MATRICE(MATR_ELEM=matEl_M1, NUME_DDL=num1)

vectEl10=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=load10, CARA_ELEM=elemprop)
                      
vectEl45=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=load45, CARA_ELEM=elemprop)

vectAs10 = ASSE_VECTEUR(VECT_ELEM=vectEl10, NUME_DDL=num1)
vectAs45 = ASSE_VECTEUR(VECT_ELEM=vectEl45, NUME_DDL=num1)

matEl_A1=CALC_MATR_ELEM(MODELE=model,
                        RIGI_MECA=matEl_K1,
                        MASS_MECA=matEl_M1,
                        CHAM_MATER=fieldmat,
                        OPTION='AMOR_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
matAs_A1 = ASSE_MATRICE(MATR_ELEM=matEl_A1, NUME_DDL=num1)  

######################################################
# Compute eigen modes (once since damping-independent)
######################################################
t_modes0 = time.time()

tabModes = INFO_MODE( MATR_RIGI = matAs_K1,
                      MATR_MASS = matAs_M1,
                      FREQ = freqBands1)                              

# Build a list of frequency bands which contain roughly the same desired number of modes
temp1 = tabModes.EXTR_TABLE()
temp2 = temp1.values()
fMin = temp2['FREQ_MIN']
fMax = temp2['FREQ_MAX']
nModes = temp2['NB_MODE']

nEigen = sum(nModes)

table = []
for i in range(len(fMin)):
    table.append([fMin[i], fMax[i], nModes[i]])

nModesPerBand = 40
nTot = 0
freqBandsOpt = [table[0][0]]
# nModesList = []
cursor = 0

i = 0
while i < len(table):
    f1 = table[i][0]
    f2 = table[i][1]
    nInBand = table[i][2]
    nRemaining = table[i][2]*(1-cursor)
    
    if nTot + nRemaining < nModesPerBand:
        nTot += nRemaining
        i += 1
        cursor = 0
        continue
    else:
        cursor += (nModesPerBand - nTot)/nInBand
        fSup = f1 + (f2 - f1)*cursor
        freqBandsOpt.append(fSup)
        # nModesList.append(nModesPerBand) # supposition.. works if modal density const in the band
        nTot = 0

if freqBandsOpt[-1] < table[-1][1]:
    freqBandsOpt.append(table[-1][1])
    # nModesList.append(nTot)

print('Optimized frequency bands : ')
print(freqBandsOpt)

# Modes computed with (E, tanD) of the middle of the frequency band
modes_1=CALC_MODES(MATR_RIGI=matAs_K1,
                   CALC_FREQ=_F(FREQ=freqBandsOpt,),
                   STOP_BANDE_VIDE='NON',
                   OPTION='BANDE',
                   NORM_MODE=_F(NORME=normMode),
                   MATR_MASS=matAs_M1,
                   VERI_MODE=_F(STOP_ERREUR='NON',),)
                   

print('TIME FOR INFO_MODE + CALC_MODES     ' + str(time.time() - t_modes0))

######################################################
# Compute static interface modes (once as well (iBand==0) cause damping indep)
######################################################
t_modesSta0 = time.time()

modStaR1=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = 'railBk',
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesRails,
                                      SHIFT=10.,),);

modStaR2=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = 'railFt',
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesRails,
                                      SHIFT=10.,),);

modStaS=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = slpSym,
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesSleeper,
                                      SHIFT=10.,),);

                                      
print('TIME FOR INTF MODES     ' + str(time.time() - t_modesSta0))
# Normalize static modes
modStaR1 = NORM_MODE(reuse=modStaR1, MODE=modStaR1, NORME=normMode)
modStaR2 = NORM_MODE(reuse=modStaR2, MODE=modStaR2, NORME=normMode)
modStaS = NORM_MODE(reuse=modStaS, MODE=modStaS, NORME=normMode)

t_bamo0 = time.time()

# Define dynamic interfaces   
Lint=DEFI_INTERF_DYNA(NUME_DDL=num1,
                      INTERFACE=(_F(NOM = 'I_slpSym',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = slpSym),
                                 _F(NOM = 'I_raiRBk',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = 'railBk'),
                                 _F(NOM = 'I_raiRFt',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = 'railFt'),))

######################################################
# Create modal basis
######################################################
bamo1=DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA = modes_1, ),
                             _F(MODE_INTF = modStaR1, )),
                       INTERF_DYNA=Lint,
                       NUME_REF=num1)

bamo1=DEFI_BASE_MODALE(reuse=bamo1,
                       RITZ=(_F(BASE_MODALE=bamo1),
                             _F(MODE_INTF = modStaR2, )),
                       NUME_REF=num1)

bamo1=DEFI_BASE_MODALE(reuse=bamo1,
                       RITZ=(_F(BASE_MODALE=bamo1),
                             _F(MODE_INTF = modStaS, )),
                       NUME_REF=num1)

print('TIME FOR BAMO     ' + str(time.time() - t_bamo0))
    
######################################################
# Create macro element
######################################################
t_macroEl0 = time.time()

macroEl1 = MACR_ELEM_DYNA(BASE_MODALE=bamo1,
                          MATR_MASS=matAs_M1,
                          MATR_RIGI=matAs_K1,
                          MATR_AMOR=matAs_A1)
                          
print('TIME FOR MACROEL     ' + str(time.time() - t_macroEl0))
######################################################
# Macroelements coupling and generalized model creation
######################################################
t_modeGe0 = time.time()

substructs = []
liaisons = []
nSlp = 3
for i in range(nSlp):
    substR = _F(NOM = 'elem'+str(i)+'R', MACR_ELEM_DYNA = macroEl1, ANGL_NAUT = (0., 0., 0.), TRANS=(i*600,0.,0.))
    substL = _F(NOM = 'elem'+str(i)+'L', MACR_ELEM_DYNA = macroEl1, ANGL_NAUT = (0., 180., 0.), TRANS=(i*600,0.,0.))
    substructs.append(substR)
    substructs.append(substL)
    
    liais2 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'R', SOUS_STRUC_2 = 'elem'+str(i)+'L', INTERFACE_1  = 'I_slpSym', INTERFACE_2  = 'I_slpSym', OPTION='REDUIT')
    liaisons.append(liais2)
    
    if i != nSlp-1:
        liais4 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'R', SOUS_STRUC_2 = 'elem'+str(i+1)+'R', INTERFACE_1  = 'I_raiRFt', INTERFACE_2  = 'I_raiRBk', OPTION='REDUIT')
        liais6 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'L', SOUS_STRUC_2 = 'elem'+str(i+1)+'L', INTERFACE_1  = 'I_raiRBk', INTERFACE_2  = 'I_raiRFt', OPTION='REDUIT')
        liaisons.append(liais4)
        liaisons.append(liais6)

modeGene=DEFI_MODELE_GENE(SOUS_STRUC=substructs, LIAISON=liaisons, VERIF=_F( STOP_ERREUR = 'OUI', PRECISION = 1.E-6, CRITERE = 'RELATIF'))
numGene=NUME_DDL_GENE(MODELE_GENE=modeGene);

######################################################
# ASSEMBLAGE DES MATRICES RAIDEUR ET MASSE GENERALISEES STATIQUES
######################################################
masGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='MASS_GENE');

rigGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='RIGI_GENE');
                                  
amoGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='AMOR_GENE');

vectGe10 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,CHAR_SOUS_STRUC=(_F(SOUS_STRUC = 'elem'+str(slpForce-1)+'R',VECT_ASSE = vectAs10),))        
vectGe45 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,CHAR_SOUS_STRUC=(_F(SOUS_STRUC = 'elem'+str(slpForce-1)+'R',VECT_ASSE = vectAs45),)) 

print('TIME FOR MODEGENE     ' + str(time.time() - t_modeGe0))
    
######################################################
# HARMONIC SIMULATION
######################################################
t_harmo0 = time.time()

harmGe10 = DYNA_VIBRA(BASE_CALCUL='GENE',
                      TYPE_CALCUL='HARM',
                      MATR_MASS=masGene,
                      MATR_RIGI=rigGene,
                      MATR_AMOR=amoGene,
                      FREQ=allFreqs,
                      TOUT_CHAM='OUI',
                      EXCIT=_F(VECT_ASSE_GENE=vectGe10, COEF_MULT=1.0,),
                      SOLVEUR=_F(METHODE='LDLT',
                                 RENUM='RCMK',
                                 NPREC=8,
                                 ELIM_LAGR='NON',
                                 STOP_SINGULIER='OUI',),)
                                 
harmGe45 = DYNA_VIBRA(BASE_CALCUL='GENE',
                      TYPE_CALCUL='HARM',
                      MATR_MASS=masGene,
                      MATR_RIGI=rigGene,
                      MATR_AMOR=amoGene,
                      FREQ=allFreqs,
                      TOUT_CHAM='OUI',
                      EXCIT=_F(VECT_ASSE_GENE=vectGe45, COEF_MULT=1.0,),
                      SOLVEUR=_F(METHODE='LDLT',
                                 RENUM='RCMK',
                                 NPREC=8,
                                 ELIM_LAGR='NON',
                                 STOP_SINGULIER='OUI',),)
 
print('TIME FOR HARMO     ' + str(time.time() - t_harmo0))
######################################################
# POST-PROCESSING : vect_mag (envelope of max modal vector components)
######################################################
nModesTot = nEigen + 2*nModesRails + nModesSleeper

vect_mag = [0]*nModesTot
for i in range(len(vect_mag)):
    vect_mag[i] = [0.0]*(nSlp*2)
    
for freq in allFreqs:
    dispGene = RECU_GENE(RESU_GENE=harmGe10,
                         NOM_CHAM='DEPL',
                         FREQ=freq)

    IMPR_GENE(UNITE=8, GENE=_F(RESU_GENE=dispGene))

    DETRUIRE(CONCEPT=_F(NOM=(dispGene)))

# if only 1 concept is printed to fort.8, nothing appears in it while still in the calculation (content=''). It's a bug..
if len(allFreqs) == 1:
    dispGen2 = RECU_GENE(RESU_GENE=harmGe10,
                         NOM_CHAM='DEPL',
                         FREQ=allFreqs[0])

    IMPR_GENE(UNITE=8, GENE=_F(RESU_GENE=dispGen2))
    DETRUIRE(CONCEPT=_F(NOM=(dispGen2)))

    
with open('fort.8','r') as f:
    content = f.read()
f.close()
lines = content.split('\n')

for line in lines:
    listLine = line.split(' ')
    listLine = [x.replace('D','e') for x in listLine if x]
    try:
        lineNo = int(listLine[0])
    except:
        continue
      
    # if lineNo > nModesTot:
        # continue

    modeNo = lineNo % nModesTot 
    macroElNo = (lineNo // nModesTot) % (3*nSlp) # 0 => 5
    if modeNo == 0: # True when lineNo == nModesTot
        modeNo = nModesTot
        macroElNo = macroElNo - 1
        
    modeNo = modeNo - 1 # 0 => 1409 p.ex
        
    real = float(listLine[1])
    imag = float(listLine[2])
    magn = (real**2+imag**2)**(1/2)

    print(str(lineNo) + ' ' + str(modeNo) + ' ' + str(macroElNo) + ' ' + str(magn))
        
    vect_mag[modeNo][macroElNo] = max(vect_mag[modeNo][macroElNo], magn)

vect_mag_str = []
for i in vect_mag:
    myStrList = []
    for j in i:
        myStrList.append(str(j))
    vect_mag_str.append('\t'.join(myStrList))
    
fileVectContent = '\n'.join(vect_mag_str)
fileVect=open('fort.91','w')
fileVect.write(fileVectContent)
fileVect.close()

#=====================================================

vect_mag = [0]*nModesTot
for i in range(len(vect_mag)):
    vect_mag[i] = [0.0]*(nSlp*2)
    
for freq in allFreqs:
    dispGene = RECU_GENE(RESU_GENE=harmGe45,
                         NOM_CHAM='DEPL',
                         FREQ=freq)

    IMPR_GENE(UNITE=9, GENE=_F(RESU_GENE=dispGene))
    DETRUIRE(CONCEPT=_F(NOM=(dispGene)))

# if only 1 concept is printed to fort.9, nothing appears in it while still in the calculation (content=''). It's a bug..
if len(allFreqs) == 1:
    dispGen2 = RECU_GENE(RESU_GENE=harmGe45,
                         NOM_CHAM='DEPL',
                         FREQ=allFreqs[0])

    IMPR_GENE(UNITE=9, GENE=_F(RESU_GENE=dispGen2))
    DETRUIRE(CONCEPT=_F(NOM=(dispGen2)))
    
    
with open('fort.9','r') as f:
    content = f.read()
f.close()
lines = content.split('\n')


for line in lines:
    listLine = line.split(' ')
    listLine = [x.replace('D','e') for x in listLine if x]
    try:
        lineNo = int(listLine[0])
    except:
        continue
      
    # if lineNo > nModesTot:
        # continue

    modeNo = lineNo % nModesTot 
    macroElNo = (lineNo // nModesTot) % (3*nSlp) # 0 => 5
    if modeNo == 0: # True when lineNo == nModesTot
        modeNo = nModesTot
        macroElNo = macroElNo - 1
        
    modeNo = modeNo - 1 # 0 => 1409 p.ex
        
    real = float(listLine[1])
    imag = float(listLine[2])
    magn = (real**2+imag**2)**(1/2)
        
    vect_mag[modeNo][macroElNo] = max(vect_mag[modeNo][macroElNo], magn)

vect_mag_str = []
for i in vect_mag:
    myStrList = []
    for j in i:
        myStrList.append(str(j))
    vect_mag_str.append('\t'.join(myStrList))
    
fileVectContent = '\n'.join(vect_mag_str)
fileVect=open('fort.92','w')
fileVect.write(fileVectContent)
fileVect.close()

try:
    IMPR_RESU(FORMAT='MED',
              RESU=_F(RESULTAT=modes_1),
              UNITE=82)
except:
    pass
          


 
t_fin = time.time()
print('nModesTot ' + str(nModesTot))
print('nEigen ' + str(nEigen))
print('TOTAL TIME ' + str(t_fin-t0))

fileModesContent = 'nEigen = ' + str(nEigen) + '\nnModesRails = ' + str(nModesRails) + '\nnModesSleeper = ' + str(nModesSleeper)
fileModes=open('fort.10','w')
fileModes.write(fileModesContent)
fileModes.close()

DETRUIRE(CONCEPT=_F(NOM=(matEl_A1, matAs_A1, masGene, rigGene, amoGene, vectGe10, vectGe45, elemprop)))
DETRUIRE(CONCEPT=_F(NOM=(meshSlp, meshRaiR, meshPadR, tmp2, mesh, mesh0, model, f_EBal, f_TDBal,  f_EPad1, )))
DETRUIRE(CONCEPT=_F(NOM=(f_EPad2, f_TDPad1, f_TDPad2, tie2, tie3, BCinterf, load10, load45, )))
DETRUIRE(CONCEPT=_F(NOM=(matEl_K1, concrRe, steel, padMat1, padMat2, fieldmat, tabModes, macroEl1, )))
DETRUIRE(CONCEPT=_F(NOM=(matAs_K1, matEl_M1, matAs_M1, vectEl10, vectEl45, vectAs10, vectAs45, modeGene, numGene, )))
DETRUIRE(CONCEPT=_F(NOM=(modStaR1, modStaR2, modStaS, Lint, bamo1, )))
DETRUIRE(CONCEPT=_F(NOM=(harmGe10, harmGe45, CH_id, intCH_id)))
if includeUSP == True:
    DETRUIRE(CONCEPT=_F(NOM=(meshUSP, tmp3, tie1, f_EUSP, f_TDUSP, USPmat)))

# saves only modes_1 & num1 to the base
FIN(RETASSAGE='OUI')

# ------------------------------------------------------------------------------------------

  Ouverture en écriture du fichier ./vola.1

 <INFO> Démarrage de l'exécution.
                                                                                
                                                                                
              -- CODE_ASTER -- VERSION : EXPLOITATION (stable) --               
                                                                                
                     Version 14.4.0 modifiée le 21/08/2019                      
                 révision 2708712c2a40 - branche 'v14.4_smeca'                  
                         Copyright EDF R&D 1991 - 2022                          
                                                                                
                    Exécution du : Thu Aug 25 18:58:22 2022                     
                         Nom de la machine : caelinuxVM                         
                              Architecture : 64bit                              
                          Type de processeur : x86_64                           
Système d'exploitation : Linux-4.15.0-112-generic-x86_64-with-debian-buster-sid 
                        Langue des messages : en (UTF-8)                        
                                                                                
                           Version de Python : 3.6.5                            
                           Version de NumPy : 1.15.1                            
   
   !------------------------------------------------------------------------------------!
   ! <A> <SUPERVIS2_2>                                                                  !
   !                                                                                    !
   !     Vous utilisez une vieille version de Code_Aster.                               !
   !                                                                                    !
   !     En mettant à jour votre version, vous bénéficierez des dernières améliorations !
   !     apportées au code depuis 15 mois.                                              !
   !     Si vous avez des développements privés, vous risquez d'avoir un travail        !
   !     important de portage si vous ne suivez pas les mises à jour.                   !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
                           Parallélisme MPI : inactif                           
                          Parallélisme OpenMP : actif                           
                        Nombre de processus utilisés : 1                        
                     Version de la librairie HDF5 : 1.10.3                      
                      Version de la librairie MED : 4.0.0                       
                     Version de la librairie MFront : 3.2.1                     
                     Version de la librairie MUMPS : 5.1.2                      
                        Librairie PETSc : non disponible                        
                     Version de la librairie SCOTCH : 6.0.4                     

                  Mémoire limite pour l'exécution : 8000.00 Mo                  
                   consommée par l'initialisation : 280.75 Mo                   
                  par les objets du jeu de commandes : 0.00 Mo                  
                 reste pour l'allocation dynamique : 7717.06 Mo                 
                Taille limite des fichiers d'échange : 48.00 Go                 
                                                                                

.. __stg1_txt4
  # ------------------------------------------------------------------------------------------
  # Commande No :  0001            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DEBUT(PAR_LOT='NON',
        IMPR_MACRO='NON',
        DEBUG=_F(JXVERI='NON',
                 SDVERI='NON',
                 JEVEUX='NON',
                 HIST_ETAPE='NON',),
        MESURE_TEMPS=_F(NIVE_DETAIL=1,
                        MOYENNE='NON',),
        MEMOIRE=_F(TAILLE_BLOC=800.0,
                   TAILLE_GROUP_ELEM=1000,),
        RESERVE_CPU=_F(BORNE=900,),
        INFO=1,)

   
   !---------------------------------------------------!
   ! <I> <SUPERVIS_41>                                 !
   !                                                   !
   ! La version 14.4.0 a été modifiée par 1 révisions. !
   !---------------------------------------------------!
   
   
   !------------------------------------------------------------------------------------!
   ! <A> <SUPERVIS_1>                                                                   !
   !                                                                                    !
   !  L'utilisation du mot-clé PAR_LOT='NON' permet d'accéder en lecture et en écriture !
   !  au contenu des concepts Aster. De ce fait, votre étude est exclue du périmètre    !
   !  qualifié de Code_Aster puisque toutes ses étapes ne peuvent être certifiées.      !
   !                                                                                    !
   !  Conseils :                                                                        !
   !    - Il n'y a pas particulièrement de risque de résultat faux... sauf si votre     !
   !      programmation l'introduit.                                                    !
   !    - Distinguez le calcul lui-même (qui doit sans doute passer en PAR_LOT='OUI')   !
   !      des post-traitements (qui nécessiteraient le mode PAR_LOT='NON') qui peuvent  !
   !      être réalisés en POURSUITE.                                                   !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   

  Valeur initiale du temps CPU maximum =   3600900 secondes
  Valeur du temps CPU maximum passé aux commandes =   3600000 secondes
  Réserve CPU prévue = 900 secondes

  Ouverture en écriture du fichier ./glob.1

  Ouverture en écriture du fichier ./vola.1

  Ouverture en lecture du fichier /opt/SalomeMeca/V2019_univ/tools/Code_aster_stable-v144_smeca/lib/aster/elem.1

     Nom de la base                          :  ELEMBASE
     Créée avec la version                   :  14.04.00
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %

  Ouverture en lecture du fichier /opt/SalomeMeca/V2019_univ/tools/Code_aster_stable-v144_smeca/lib/aster/elem.1


     Nom de la base                          :  ELEMBASE
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  60
     Volume des accès en lecture             :         46.88 Mo.
     Nombre total d'accès en écriture        :  0
     Volume des accès en écriture            :          0.00 Mo.
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %

  Relecture des catalogues des éléments faite.

  Fin de lecture (durée  0.035089  s.) 
  # Mémoire (Mo) :   326.53 /   318.73 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0001   user+syst:        0.03s (syst:        0.02s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt100
  # ------------------------------------------------------------------------------------------
  # Commande No :  0002            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshSlp = LIRE_MAILLAGE(FORMAT='MED',
                          UNITE=21,
                          INFO_MED=1,
                          VERI_MAIL=_F(VERIF='OUI',
                                       APLAT=1.E-3,),
                          INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshSlp  - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                        5774

NOMBRE DE MAILLES                       6879
                              QUAD4                2347
                              HEXA8                4532

NOMBRE DE GROUPES DE NOEUDS                4
                              slpBot                             540
                              Sc_Y                                13
                              slpSym                              72
                              Ss_Y                                 9

NOMBRE DE GROUPES DE MAILLES               8
                              sleeper                           4532
                              slpBotV                            480
                              slpUpad                             64
                              slpAcY                             480
                              slpAcZ                              96
                              slpSym                              56
                              slpBot                             480
                              slpAcX                            1133

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.53 /   321.39 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0002   user+syst:        0.02s (syst:        0.01s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt101
  # ------------------------------------------------------------------------------------------
  # Commande No :  0004            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshRaiR = LIRE_MAILLAGE(FORMAT='MED',
                           UNITE=25,
                           INFO_MED=1,
                           VERI_MAIL=_F(VERIF='OUI',
                                        APLAT=1.E-3,),
                           INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshRaiR - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                       14357

NOMBRE DE MAILLES                       5220
                              QUAD8                2668
                              HEXA20               2552

NOMBRE DE GROUPES DE NOEUDS               10
                              railBk                             233
                              nForce45                             1
                              railFt                             233
                              nForce10                             1
                              Rb_Y                                11
                              Ra_Y                                17
                              Ra_Z                                13
                              Rb_Z                                 7
                              Rf_Y                                11
                              nMunich                              1

NOMBRE DE GROUPES DE MAILLES               6
                              rail                              2552
                              railBotV                           168
                              railBk                              58
                              railFt                              58
                              railAcZ                            572
                              railAcY                            704

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.53 /   323.14 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0004   user+syst:        0.01s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt103
  # ------------------------------------------------------------------------------------------
  # Commande No :  0006            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = LIRE_MAILLAGE(FORMAT='MED',
                           UNITE=23,
                           INFO_MED=1,
                           VERI_MAIL=_F(VERIF='OUI',
                                        APLAT=1.E-3,),
                           INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshPadR - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                        9828

NOMBRE DE MAILLES                      12032
                              SEG2                  336
                              QUAD4                3906
                              HEXA8                7790

NOMBRE DE GROUPES DE NOEUDS                2
                              botn                              1638
                              topn                              1638

NOMBRE DE GROUPES DE MAILLES               4
                              hard                              1558
                              top                               1558
                              bot                               1558
                              soft                              6232

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.53 /   325.19 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0006   user+syst:        0.02s (syst:        0.01s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt113
  # ------------------------------------------------------------------------------------------
  # Commande No :  0008            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                           MAILLAGE=meshPadR,
                           ROTATION=_F(POIN_1=(0.0, 0.0, 0.0),
                                       ANGLE=-1.43261,
                                       POIN_2=(1000.0, 0.0, 0.0),),
                           INFO=1,)

  # Mémoire (Mo) :   326.53 /   325.19 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0008   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt117
  # ------------------------------------------------------------------------------------------
  # Commande No :  0009            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                           MAILLAGE=meshPadR,
                           TRANSLATION=(0.0, 214.0, 757.54),
                           INFO=1,)

  # Mémoire (Mo) :   326.53 /   325.19 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0009   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt158
  # ------------------------------------------------------------------------------------------
  # Commande No :  0010            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshSlp,
                       MAILLAGE_2=meshPadR,
                       OPERATION='SUPERPOSE',)

  # Mémoire (Mo) :   327.60 /   327.60 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0010   user+syst:        0.04s (syst:        0.00s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt159
  # ------------------------------------------------------------------------------------------
  # Commande No :  0011            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp2,
                        MAILLAGE_2=meshRaiR,
                        OPERATION='SUPERPOSE',)

  # Mémoire (Mo) :   331.77 /   331.77 /    47.56 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0011   user+syst:        0.05s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt165
  # ------------------------------------------------------------------------------------------
  # Commande No :  0012            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  mesh = CREA_MAILLAGE(MAILLAGE=mesh0,
                       CREA_POI1=_F(NOM_GROUP_MA=('slpBot0D', ),
                                    GROUP_NO=('slpBot', ),),
                       INFO=1,)

MOT CLE FACTEUR "CREA_POI1", OCCURRENCE    1
  CREATION DU GROUP_MA slpBot0D DE    540 MAILLES POI1

------------ MAILLAGE mesh     - IMPRESSIONS NIVEAU  1 ------------

ASTER 14.04.00 CONCEPT mesh CALCULE LE 25/08/2022 A 18:58:23 DE TYPE            
MAILLAGE_SDASTER                                                                

NOMBRE DE NOEUDS                       29959

NOMBRE DE MAILLES                      24671
                              POI1                  540
                              SEG2                  336
                              QUAD4                6253
                              QUAD8                2668
                              HEXA8               12322
                              HEXA20               2552

NOMBRE DE GROUPES DE NOEUDS               16
                              slpBot                             540
                              Sc_Y                                13
                              slpSym                              72
                              Ss_Y                                 9
                              botn                              1638
                              topn                              1638
                              railBk                             233
                              nForce45                             1
                              railFt                             233
                              nForce10                             1
                              Rb_Y                                11
                              Ra_Y                                17
                              Ra_Z                                13
                              Rb_Z                                 7
                              Rf_Y                                11
                              nMunich                              1

NOMBRE DE GROUPES DE MAILLES              19
                              sleeper                           4532
                              slpBotV                            480
                              slpUpad                             64
                              slpAcY                             480
                              slpAcZ                              96
                              slpSym                              56
                              slpBot                             480
                              slpAcX                            1133
                              hard                              1558
                              top                               1558
                              bot                               1558
                              soft                              6232
                              rail                              2552
                              railBotV                           168
                              railBk                              58
                              railFt                              58
                              railAcZ                            572
                              railAcY                            704
                              slpBot0D                           540

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   337.13 /   336.16 /    52.73 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0012   user+syst:        0.06s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt173
  # ------------------------------------------------------------------------------------------
  # Commande No :  0013            Concept de type : modele_sdaster
  # ------------------------------------------------------------------------------------------
  model = AFFE_MODELE(MAILLAGE=mesh,
                      AFFE=(_F(TOUT='OUI',
                               PHENOMENE='MECANIQUE',
                               MODELISATION=('3D', ),),
                            _F(GROUP_MA=('slpBot0D', ),
                               PHENOMENE='MECANIQUE',
                               MODELISATION=('DIS_T', ),),
                            ),
                      INFO=1,
                      DISTRIBUTION=_F(PARTITIONNEUR='METIS',
                                      METHODE='SOUS_DOMAINE',),
                      VERI_JACOBIEN='OUI',)


Sur les 24671 mailles du maillage mesh, on a demandé l'affectation de 24671, on a pu en affecter 24671
 Modélisation     Type maille  Élément fini     Nombre
                  SEG2         MECA_ARETE2      336
 DIS_T            POI1         MECA_DIS_T_N     540
                  QUAD4        MECA_FACE4       6253
                  QUAD8        MECA_FACE8       2668
 3D               HEXA20       MECA_HEXA20      2552
 3D               HEXA8        MECA_HEXA8       12322
#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.02      0.00      0.01
  # Mémoire (Mo) :   371.99 /   370.86 /    55.01 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0013   user+syst:        0.04s (syst:        0.01s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt179
  # ------------------------------------------------------------------------------------------
  # Commande No :  0014            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  CH_id = CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                     OPERATION='AFFE',
                     MAILLAGE=mesh,
                     AFFE=_F(GROUP_MA=('slpBot', ),
                             NOM_CMP=('X1', ),
                             VALE=(1.0, ),),
                     INFO=1,)

  # Mémoire (Mo) :   371.99 /   371.70 /    55.01 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0014   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt185
  # ------------------------------------------------------------------------------------------
  # Commande No :  0015            Concept de type : table_sdaster
  # ------------------------------------------------------------------------------------------
  intCH_id = POST_ELEM(INTEGRALE=_F(GROUP_MA=('slpBot', ),
                                    NOM_CMP=('X1', ),
                                    TYPE_MAILLE='2D',),
                       MODELE=model,
                       CHAM_GD=CH_id,
                       PRECISION=1.E-06,
                       CRITERE='RELATIF',
                       INFO=1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   378.97 /   371.84 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0015   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt206
  # ------------------------------------------------------------------------------------------
  # Commande No :  0016            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EPad1 = LIRE_FONCTION(UNITE=30,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.56 /   391.09 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0016   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt211
  # ------------------------------------------------------------------------------------------
  # Commande No :  0020            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDPad1 = LIRE_FONCTION(UNITE=31,
                           NOM_PARA='FREQ',
                           PROL_DROITE='CONSTANT',
                           PROL_GAUCHE='CONSTANT',
                           INDIC_RESU=(1, 2),
                           FORMAT='LIBRE',
                           TYPE='FONCTION',
                           SEPAR='None',
                           INDIC_PARA=(1, 1),
                           NOM_RESU='TOUTRESU',
                           INTERPOL=('LIN', ),
                           VERIF='CROISSANT',
                           INFO=1,)

  # Mémoire (Mo) :   392.56 /   391.09 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0020   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt217
  # ------------------------------------------------------------------------------------------
  # Commande No :  0024            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EPad2 = LIRE_FONCTION(UNITE=32,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.56 /   391.09 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0024   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt222
  # ------------------------------------------------------------------------------------------
  # Commande No :  0028            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDPad2 = LIRE_FONCTION(UNITE=33,
                           NOM_PARA='FREQ',
                           PROL_DROITE='CONSTANT',
                           PROL_GAUCHE='CONSTANT',
                           INDIC_RESU=(1, 2),
                           FORMAT='LIBRE',
                           TYPE='FONCTION',
                           SEPAR='None',
                           INDIC_PARA=(1, 1),
                           NOM_RESU='TOUTRESU',
                           INTERPOL=('LIN', ),
                           VERIF='CROISSANT',
                           INFO=1,)

  # Mémoire (Mo) :   392.56 /   391.09 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0028   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt238
  # ------------------------------------------------------------------------------------------
  # Commande No :  0032            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EBal = LIRE_FONCTION(UNITE=36,
                         NOM_PARA='FREQ',
                         PROL_DROITE='CONSTANT',
                         PROL_GAUCHE='CONSTANT',
                         INDIC_RESU=(1, 2),
                         FORMAT='LIBRE',
                         TYPE='FONCTION',
                         SEPAR='None',
                         INDIC_PARA=(1, 1),
                         NOM_RESU='TOUTRESU',
                         INTERPOL=('LIN', ),
                         VERIF='CROISSANT',
                         INFO=1,)

  # Mémoire (Mo) :   392.56 /   391.09 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0032   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt243
  # ------------------------------------------------------------------------------------------
  # Commande No :  0036            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDBal = LIRE_FONCTION(UNITE=37,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.56 /   391.09 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0036   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt267
  # ------------------------------------------------------------------------------------------
  # Commande No :  0040            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  tie2 = AFFE_CHAR_MECA(MODELE=model,
                        LIAISON_MAIL=_F(GROUP_MA_MAIT=('slpUpad', ),
                                        GROUP_NO_ESCL=('botn', ),
                                        TYPE_RACCORD='MASSIF',
                                        ELIM_MULT='NON',),
                        VERI_NORM='OUI',
                        DOUBLE_LAGRANGE='OUI',
                        INFO=1,)

  # Mémoire (Mo) :   400.96 /   400.64 /    70.33 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0040   user+syst:        0.13s (syst:        0.01s, elaps:        0.12s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt272
  # ------------------------------------------------------------------------------------------
  # Commande No :  0041            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  tie3 = AFFE_CHAR_MECA(MODELE=model,
                        LIAISON_MAIL=_F(GROUP_MA_MAIT=('railBotV', ),
                                        GROUP_NO_ESCL=('topn', ),
                                        TYPE_RACCORD='MASSIF',
                                        ELIM_MULT='NON',),
                        VERI_NORM='OUI',
                        DOUBLE_LAGRANGE='OUI',
                        INFO=1,)

  # Mémoire (Mo) :   436.62 /   430.88 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0041   user+syst:        0.29s (syst:        0.02s, elaps:        0.30s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt278
  # ------------------------------------------------------------------------------------------
  # Commande No :  0042            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  BCinterf = AFFE_CHAR_MECA(MODELE=model,
                            DDL_IMPO=_F(GROUP_NO=('railFt', 'railBk', 'slpSym'),
                                        DX=0.0,
                                        DY=0.0,
                                        DZ=0.0,),
                            VERI_NORM='OUI',
                            DOUBLE_LAGRANGE='OUI',
                            INFO=1,)

  # Mémoire (Mo) :   436.62 /   432.03 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0042   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt289
  # ------------------------------------------------------------------------------------------
  # Commande No :  0043            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  load10 = AFFE_CHAR_MECA(MODELE=model,
                          FORCE_NODALE=_F(GROUP_NO=('nForce10', ),
                                          FX=0,
                                          FY=-1.E5,
                                          FZ=1.E4,),
                          VERI_NORM='OUI',
                          DOUBLE_LAGRANGE='OUI',
                          INFO=1,)

  # Mémoire (Mo) :   436.62 /   433.17 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0043   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt295
  # ------------------------------------------------------------------------------------------
  # Commande No :  0044            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  load45 = AFFE_CHAR_MECA(MODELE=model,
                          FORCE_NODALE=_F(GROUP_NO=('nForce45', ),
                                          FX=0,
                                          FY=-173205,
                                          FZ=-173205,),
                          VERI_NORM='OUI',
                          DOUBLE_LAGRANGE='OUI',
                          INFO=1,)

  # Mémoire (Mo) :   436.62 /   434.32 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0044   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt339
  # ------------------------------------------------------------------------------------------
  # Commande No :  0045            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  concrRe = DEFI_MATERIAU(ELAS=_F(E=4.6300E4,
                                  NU=0.2,
                                  RHO=2.4356E-09,
                                  AMOR_ALPHA=3.9176601376466515E-06,
                                  AMOR_BETA=64.95846963730285,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.62 /   434.32 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0045   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt345
  # ------------------------------------------------------------------------------------------
  # Commande No :  0046            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  steel = DEFI_MATERIAU(ELAS=_F(E=2.10000E5,
                                NU=0.3,
                                RHO=7.85E-09,
                                AMOR_ALPHA=2.448537586029157E-07,
                                AMOR_BETA=4.059904352331428,
                                COEF_AMOR=1.0,),
                        INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.62 /   434.32 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0046   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt351
  # ------------------------------------------------------------------------------------------
  # Commande No :  0047            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  padMat1 = DEFI_MATERIAU(ELAS=_F(E=151.3306,
                                  NU=0.48,
                                  RHO=1.E-09,
                                  AMOR_ALPHA=3.898811687075418E-05,
                                  AMOR_BETA=646.4594469610729,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.62 /   434.32 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0047   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt357
  # ------------------------------------------------------------------------------------------
  # Commande No :  0048            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  padMat2 = DEFI_MATERIAU(ELAS=_F(E=151.3306,
                                  NU=0.48,
                                  RHO=1.E-09,
                                  AMOR_ALPHA=3.898811687075418E-05,
                                  AMOR_BETA=646.4594469610729,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.62 /   434.32 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0048   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt389
  # ------------------------------------------------------------------------------------------
  # Commande No :  0049            Concept de type : cham_mater
  # ------------------------------------------------------------------------------------------
  fieldmat = AFFE_MATERIAU(MAILLAGE=mesh,
                           MODELE=model,
                           AFFE=(_F(GROUP_MA=('sleeper', ),
                                    MATER=(concrRe, ),),
                                 _F(GROUP_MA=('hard', ),
                                    MATER=(padMat1, ),),
                                 _F(GROUP_MA=('soft', ),
                                    MATER=(padMat2, ),),
                                 _F(GROUP_MA=('rail', ),
                                    MATER=(steel, ),),
                                 ),
                           INFO=1,)

  # Mémoire (Mo) :   436.62 /   434.32 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0049   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt412
  # ------------------------------------------------------------------------------------------
  # Commande No :  0050            Concept de type : cara_elem
  # ------------------------------------------------------------------------------------------
  elemprop = AFFE_CARA_ELEM(MODELE=model,
                            DISCRET=(_F(REPERE='GLOBAL',
                                        CARA='K_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=(2.6203704283304667E5, 5.764814942327027E5, 2.6203704283304667E5),
                                        SYME='OUI',),
                                     _F(REPERE='GLOBAL',
                                        CARA='M_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=0,
                                        SYME='OUI',),
                                     _F(REPERE='GLOBAL',
                                        CARA='A_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=(78.59692466780932, 172.9132342691805, 78.59692466780932),
                                        SYME='OUI',),
                                     ),
                            INFO=1,)


     LE MODELE model    CONTIENT : 
                                      540 ELEMENT(S) DISCRET         
                                    14874 ELEMENT(S) MASSIF          
#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   440.66 /   438.59 /   110.49 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0050   user+syst:        0.12s (syst:        0.00s, elaps:        0.12s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt418
  # ------------------------------------------------------------------------------------------
  # Commande No :  0052            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_K1 = CALC_MATR_ELEM(OPTION='RIGI_MECA',
                            MODELE=model,
                            CHAM_MATER=fieldmat,
                            CARA_ELEM=elemprop,
                            CHARGE=(BCinterf, tie2, tie3),
                            MODE_FOURIER=0,
                            CALC_ELEM_MODELE='OUI',
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.36      0.03      0.36
  # Mémoire (Mo) :   515.83 /   509.29 /   185.71 /    65.52 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0052   user+syst:        0.36s (syst:        0.03s, elaps:        0.36s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt420
  # ------------------------------------------------------------------------------------------
  # Commande No :  0053            Concept de type : nume_ddl_sdaster
  # ------------------------------------------------------------------------------------------
  num1 = NUME_DDL(MATR_RIGI=(matEl_K1, ),)

  Le système linéaire à résoudre a 112761 degrés de liberté:
   - 89877 sont des degrés de liberté physiques
     (ils sont portés par 29959 noeuds du maillage)
   - 22884 sont les couples de paramètres de Lagrange associés
     aux 11442 relations linéaires dualisées.
  La matrice est de taille 112761 équations.
  Elle contient 5537580 termes non nuls si elle est symétrique et 10962399 termes non nuls si elle n'est pas symétrique.
  Soit un taux de remplissage de   0.086 %.
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.86      0.18      0.89
  # Mémoire (Mo) :   667.72 /   537.55 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0053   user+syst:        0.86s (syst:        0.18s, elaps:        0.89s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt421
  # ------------------------------------------------------------------------------------------
  # Commande No :  0054            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_K1 = ASSE_MATRICE(MATR_ELEM=matEl_K1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.27      0.01      0.28
  # Mémoire (Mo) :   667.72 /   584.53 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0054   user+syst:        0.27s (syst:        0.01s, elaps:        0.28s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt427
  # ------------------------------------------------------------------------------------------
  # Commande No :  0055            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_M1 = CALC_MATR_ELEM(OPTION='MASS_MECA',
                            MODELE=model,
                            CHAM_MATER=fieldmat,
                            CARA_ELEM=elemprop,
                            CHARGE=(BCinterf, tie2, tie3),
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.12      0.02      0.12
  # Mémoire (Mo) :   667.72 /   648.42 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0055   user+syst:        0.12s (syst:        0.02s, elaps:        0.13s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt429
  # ------------------------------------------------------------------------------------------
  # Commande No :  0056            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_M1 = ASSE_MATRICE(MATR_ELEM=matEl_M1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.17      0.00      0.19
  # Mémoire (Mo) :   690.67 /   690.67 /   356.09 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0056   user+syst:        0.17s (syst:        0.00s, elaps:        0.19s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt432
  # ------------------------------------------------------------------------------------------
  # Commande No :  0057            Concept de type : vect_elem_depl_r
  # ------------------------------------------------------------------------------------------
  vectEl10 = CALC_VECT_ELEM(OPTION='CHAR_MECA',
                            CHARGE=(load10, ),
                            CARA_ELEM=elemprop,
                            INST=0.0,
                            MODE_FOURIER=0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   690.67 /   690.67 /   356.20 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0057   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt435
  # ------------------------------------------------------------------------------------------
  # Commande No :  0058            Concept de type : vect_elem_depl_r
  # ------------------------------------------------------------------------------------------
  vectEl45 = CALC_VECT_ELEM(OPTION='CHAR_MECA',
                            CHARGE=(load45, ),
                            CARA_ELEM=elemprop,
                            INST=0.0,
                            MODE_FOURIER=0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   690.67 /   690.67 /   356.20 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0058   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt437
  # ------------------------------------------------------------------------------------------
  # Commande No :  0059            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  vectAs10 = ASSE_VECTEUR(VECT_ELEM=(vectEl10, ),
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   691.53 /   691.53 /   356.84 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0059   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt438
  # ------------------------------------------------------------------------------------------
  # Commande No :  0060            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  vectAs45 = ASSE_VECTEUR(VECT_ELEM=(vectEl45, ),
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   692.39 /   692.39 /   357.70 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0060   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt446
  # ------------------------------------------------------------------------------------------
  # Commande No :  0061            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_A1 = CALC_MATR_ELEM(OPTION='AMOR_MECA',
                            MODELE=model,
                            CARA_ELEM=elemprop,
                            CHAM_MATER=fieldmat,
                            RIGI_MECA=matEl_K1,
                            MASS_MECA=matEl_M1,
                            CHARGE=(BCinterf, tie2, tie3),
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.16      0.05      0.15
  # Mémoire (Mo) :   796.38 /   756.29 /   462.07 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0061   user+syst:        0.16s (syst:        0.05s, elaps:        0.16s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt448
  # ------------------------------------------------------------------------------------------
  # Commande No :  0062            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_A1 = ASSE_MATRICE(MATR_ELEM=matEl_A1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.18      0.01      0.19
  # Mémoire (Mo) :   798.54 /   798.54 /   463.93 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0062   user+syst:        0.18s (syst:        0.01s, elaps:        0.19s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt457
  # ------------------------------------------------------------------------------------------
  # Commande No :  0063            Concept de type : table_sdaster
  # ------------------------------------------------------------------------------------------
  tabModes = INFO_MODE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       FREQ=(0, 1000, 2000),
                       COMPTAGE=_F(METHODE='AUTO',
                                   SEUIL_FREQ=1.E-2,
                                   PREC_SHIFT=0.05,
                                   NMAX_ITER_SHIFT=3,),
                       TYPE_MODE='DYNAMIQUE',
                       INFO=1,
                       SOLVEUR=_F(RENUM='AUTO',
                                  NPREC=8,
                                  ELIM_LAGR='LAGR2',
                                  TYPE_RESOL='AUTO',
                                  ACCELERATION='AUTO',
                                  LOW_RANK_SEUIL=0.0,
                                  PRETRAITEMENTS='AUTO',
                                  PCENT_PIVOT=20,
                                  GESTION_MEMOIRE='AUTO',
                                  METHODE='MUMPS',),
                       NIVEAU_PARALLELISME='COMPLET',
                       )


 Opérateur INFO_MODE + COMPTAGE/METHODE='AUTO'.
 Compte-tenu des propriétés des matrices fournies (nombre, type, symétrie), on a choisi pour vous la
 méthode de comptage: STURM.
  Le nombre total de DDL est       :     112761
  Le nombre de DDL de Lagrange est :      22884
  Le nombre de DDL actifs est      :      78435
------------------------------------------------------------------------

  Vérification du spectre de fréquences (Méthode de Sturm)

  Il n'y a pas de fréquence dans la bande numéro 1 de bornes ( 0.000E+00 , 1.000E+03 )
------------------------------------------------------------------------

  Nombre de fréquences dans la bande numéro 2 de bornes ( 1.000E+03 , 2.000E+03 ) : 2
------------------------------------------------------------------------

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     48.37      0.72     49.20
  # Mémoire (Mo) :  1601.29 /   775.02 /   529.76 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0063   user+syst:       48.61s (syst:        0.79s, elaps:       49.44s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt511
  # ------------------------------------------------------------------------------------------
  # Commande No :  0064            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modes_1 = CALC_MODES(OPTION='BANDE',
                       STOP_BANDE_VIDE='NON',
                       SOLVEUR_MODAL=_F(PREC_SOREN=0.0,
                                        NMAX_ITER_SOREN=20,
                                        PARA_ORTHO_SOREN=0.717,
                                        METHODE='SORENSEN',
                                        APPROCHE='REEL',),
                       MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       CALC_FREQ=_F(FREQ=(0.0, 2000.0),
                                    NMAX_ITER_SHIFT=3,
                                    PREC_SHIFT=0.05,
                                    SEUIL_FREQ=1.E-2,),
                       NORM_MODE=_F(NORME='TRAN',
                                    INFO=1,),
                       SOLVEUR=_F(RENUM='AUTO',
                                  NPREC=8,
                                  ELIM_LAGR='LAGR2',
                                  TYPE_RESOL='AUTO',
                                  ACCELERATION='AUTO',
                                  LOW_RANK_SEUIL=0.0,
                                  PRETRAITEMENTS='AUTO',
                                  POSTTRAITEMENTS='AUTO',
                                  PCENT_PIVOT=20,
                                  RESI_RELA=-1.0,
                                  GESTION_MEMOIRE='AUTO',
                                  METHODE='MUMPS',),
                       VERI_MODE=_F(STOP_ERREUR='NON',
                                    SEUIL=1.E-06,
                                    PREC_SHIFT=5.E-3,
                                    STURM='GLOBAL',),
                       TYPE_RESU='DYNAMIQUE',
                       AMELIORATION='NON',
                       INFO=1,)

  Le nombre total de DDL est       :     112761
  Le nombre de DDL de Lagrange est :      22884
  Le nombre de DDL actifs est      :      78435
  L'option choisie est : BANDE
------------------------------------------------------------------------

  Vérification du spectre de fréquences (Méthode de Sturm)

  Nombre de fréquences propres inférieures à  2.000E+03 Hz : 2
------------------------------------------------------------------------

  La valeur minimale en fréquence est :  0.00000E+00
  La valeur maximale en fréquence est :  2.00000E+03
  La valeur de décalage en fréquence est :  1.41421E+03
------------------------------------------------------------------------

      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 2

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 5


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     5
     Nombre de produits OP*X                    =    18
     Nombre de produits B*X                     =    56
     Nombre de réorthogonalisations  (étape 1)  =    17
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure :  1.02200E+03
      Fréquence supérieure :  1.67293E+03

------------------------------------------------------------------------
     Calcul modal : Méthode d'itération simultanée
                    Méthode de Sorensen

numéro    fréquence (HZ)     norme d'erreur
    1       1.02200E+03        1.11493E-10
    2       1.67293E+03        1.34716E-10

  Norme d'erreur moyenne   :  1.23104E-10
------------------------------------------------------------------------

         Vérification à posteriori des modes

  Dans l'intervalle ( 1.01944E+03 , 1.67711E+03 ) il y a bien 2 fréquence(s).
------------------------------------------------------------------------

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     82.58      1.35     83.24
 Normalisation des modes : modes_1


 NUME_ORDRE             ancienne norme              nouvelle norme
     1                  SANS_CMP: LAGR                        TRAN
     2                  SANS_CMP: LAGR                        TRAN
  # Mémoire (Mo) :  3973.35 /   800.40 /   534.95 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0064   user+syst:       83.70s (syst:        1.51s, elaps:       84.37s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt526
  # ------------------------------------------------------------------------------------------
  # Commande No :  0070            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR1 = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                           MATR_MASS=matAs_M1,
                           MODE_INTERF=_F(GROUP_NO=('railBk', ),
                                          TOUT_CMP='OUI',
                                          NB_MODE=20,
                                          SHIFT=10.0,),
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='OUI',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=1.E-06,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :       1398
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :       1398
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     1
     Nombre de produits OP*X                    =    79
     Nombre de produits B*X                     =   234
     Nombre de réorthogonalisations  (étape 1)  =    77
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  1.56811E+04

------------------------------------------------------------------------
         1          279.33
         2          633.72
         3          822.81
         4         1684.83
         5         2090.81
         6         2409.19
         7         3423.56
         8         4266.01
         9         5327.89
        10         6024.71
        11        10440.57
        12        11344.57
        13        15026.66
        14        17105.29
        15        19103.10
        16        24346.77
        17        29701.36
        18        30921.17
        19        39854.58
        20        39956.51
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     18.05      0.37     18.06
  # Mémoire (Mo) :  4115.17 /   822.00 /   618.96 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0070   user+syst:       19.54s (syst:        0.48s, elaps:       19.58s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt533
  # ------------------------------------------------------------------------------------------
  # Commande No :  0071            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR2 = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                           MATR_MASS=matAs_M1,
                           MODE_INTERF=_F(GROUP_NO=('railFt', ),
                                          TOUT_CMP='OUI',
                                          NB_MODE=20,
                                          SHIFT=10.0,),
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='OUI',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=1.E-06,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :       1398
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :       1398
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     1
     Nombre de produits OP*X                    =    79
     Nombre de produits B*X                     =   235
     Nombre de réorthogonalisations  (étape 1)  =    78
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  1.56811E+04

------------------------------------------------------------------------
         1          279.33
         2          633.72
         3          822.81
         4         1684.83
         5         2090.81
         6         2409.19
         7         3423.56
         8         4266.00
         9         5327.89
        10         6024.71
        11        10440.57
        12        11344.57
        13        15026.66
        14        17105.29
        15        19103.10
        16        24346.77
        17        29701.36
        18        30921.17
        19        39854.58
        20        39956.51
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.92      0.43     17.96
  # Mémoire (Mo) :  4132.90 /   840.09 /   636.27 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0071   user+syst:       19.41s (syst:        0.53s, elaps:       19.49s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt540
  # ------------------------------------------------------------------------------------------
  # Commande No :  0072            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaS = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                          MATR_MASS=matAs_M1,
                          MODE_INTERF=_F(GROUP_NO=('slpSym', ),
                                         TOUT_CMP='OUI',
                                         NB_MODE=20,
                                         SHIFT=10.0,),
                          SOLVEUR=_F(RENUM='AUTO',
                                     NPREC=8,
                                     ELIM_LAGR='LAGR2',
                                     STOP_SINGULIER='OUI',
                                     TYPE_RESOL='AUTO',
                                     ACCELERATION='AUTO',
                                     LOW_RANK_SEUIL=0.0,
                                     PRETRAITEMENTS='AUTO',
                                     POSTTRAITEMENTS='AUTO',
                                     PCENT_PIVOT=20,
                                     RESI_RELA=1.E-06,
                                     GESTION_MEMOIRE='AUTO',
                                     METHODE='MUMPS',),
                          INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :        432
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :        432
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     2
     Nombre de produits OP*X                    =    99
     Nombre de produits B*X                     =   294
     Nombre de réorthogonalisations  (étape 1)  =    96
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  5.63415E+04

------------------------------------------------------------------------
         1         3207.99
         2         3878.80
         3         6221.83
         4         7214.71
         5         9853.90
         6        10728.75
         7        12423.84
         8        13314.49
         9        15766.15
        10        17899.83
        11        19297.67
        12        22093.40
        13        23082.11
        14        24417.19
        15        27129.31
        16        30004.28
        17        31009.97
        18        32149.03
        19        34108.18
        20        37830.07
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.78      0.38     17.87
  # Mémoire (Mo) :  4147.89 /   858.29 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0072   user+syst:       19.18s (syst:        0.47s, elaps:       19.29s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt545
  # ------------------------------------------------------------------------------------------
  # Commande No :  0073            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR1 = NORM_MODE(reuse=modStaR1,
                       MODE=modStaR1,
                       NORME='TRAN',
                       INFO=1,)

   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR1) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le       !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il   !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR1) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le          !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il      !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaR1


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.89 /   858.29 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0073   user+syst:        0.93s (syst:        0.02s, elaps:        0.95s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt546
  # ------------------------------------------------------------------------------------------
  # Commande No :  0074            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR2 = NORM_MODE(reuse=modStaR2,
                       MODE=modStaR2,
                       NORME='TRAN',
                       INFO=1,)

   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR2) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le       !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il   !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR2) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le          !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il      !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaR2


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.89 /   858.29 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0074   user+syst:        0.93s (syst:        0.01s, elaps:        0.93s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt547
  # ------------------------------------------------------------------------------------------
  # Commande No :  0075            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaS = NORM_MODE(reuse=modStaS,
                      MODE=modStaS,
                      NORME='TRAN',
                      INFO=1,)

   
   !------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                   !
   !                                                                                    !
   !  La base modale à normer (modStaS) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.             !
   !                                                                                    !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les        !
   !  matrices de rigidité et de masse sont nécessaires.                                !
   !                                                                                    !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le      !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.          !
   !                                                                                    !
   !  Conseil :                                                                         !
   !                                                                                    !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il  !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice. !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
   
   !------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                   !
   !                                                                                    !
   !  La base modale à normer (modStaS) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.             !
   !                                                                                    !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les        !
   !  matrices de rigidité et de masse sont nécessaires.                                !
   !                                                                                    !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le         !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.          !
   !                                                                                    !
   !  Conseil :                                                                         !
   !                                                                                    !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il     !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice. !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaS


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.89 /   858.29 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0075   user+syst:        0.93s (syst:        0.01s, elaps:        0.93s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt561
  # ------------------------------------------------------------------------------------------
  # Commande No :  0076            Concept de type : interf_dyna_clas
  # ------------------------------------------------------------------------------------------
  Lint = DEFI_INTERF_DYNA(NUME_DDL=num1,
                          INTERFACE=(_F(NOM='I_slpSym',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('slpSym', ),),
                                     _F(NOM='I_raiRBk',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('railBk', ),),
                                     _F(NOM='I_raiRFt',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('railFt', ),),
                                     ),
                          FREQ=1.0,
                          INFO=1,)

  # Mémoire (Mo) :  4147.89 /   858.29 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0076   user+syst:        0.07s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt569
  # ------------------------------------------------------------------------------------------
  # Commande No :  0077            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA=(modes_1, ),),
                                 _F(MODE_INTF=modStaR1,),
                                 ),
                           INTERF_DYNA=Lint,
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)


 MODE_MECA : modes_1
 Nombre de modes propres calculés insuffisant
 par rapport au nombre demandé sous NMAX_MODE (9999).
 Nombre de modes propres limité à : 2.
  # Mémoire (Mo) :  4147.89 /   880.97 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0077   user+syst:        0.04s (syst:        0.00s, elaps:        0.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt574
  # ------------------------------------------------------------------------------------------
  # Commande No :  0078            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(reuse=bamo1,
                           RITZ=(_F(BASE_MODALE=bamo1,),
                                 _F(MODE_INTF=modStaR2,),
                                 ),
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   898.23 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0078   user+syst:        0.05s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt579
  # ------------------------------------------------------------------------------------------
  # Commande No :  0079            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(reuse=bamo1,
                           RITZ=(_F(BASE_MODALE=bamo1,),
                                 _F(MODE_INTF=modStaS,),
                                 ),
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   915.50 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0079   user+syst:        0.06s (syst:        0.01s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt591
  # ------------------------------------------------------------------------------------------
  # Commande No :  0080            Concept de type : macr_elem_dyna
  # ------------------------------------------------------------------------------------------
  macroEl1 = MACR_ELEM_DYNA(BASE_MODALE=bamo1,
                            MATR_RIGI=matAs_K1,
                            MATR_MASS=matAs_M1,
                            MATR_AMOR=matAs_A1,)


  Le nombre de modes dynamiques est 3,
  ce n'est pas un multiple du nombre de composante.
  # Mémoire (Mo) :  4147.89 /   943.76 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0080   user+syst:        3.80s (syst:        0.09s, elaps:        3.82s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt617
  # ------------------------------------------------------------------------------------------
  # Commande No :  0081            Concept de type : modele_gene
  # ------------------------------------------------------------------------------------------
  modeGene = DEFI_MODELE_GENE(SOUS_STRUC=(_F(NOM='elem0R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(0, 0.0, 0.0),),
                                          _F(NOM='elem0L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(0, 0.0, 0.0),),
                                          _F(NOM='elem1R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(600, 0.0, 0.0),),
                                          _F(NOM='elem1L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(600, 0.0, 0.0),),
                                          _F(NOM='elem2R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(1200, 0.0, 0.0),),
                                          _F(NOM='elem2L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(1200, 0.0, 0.0),),
                                          ),
                              LIAISON=(_F(SOUS_STRUC_1='elem0R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem0L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem0R',
                                          INTERFACE_1='I_raiRFt',
                                          SOUS_STRUC_2='elem1R',
                                          INTERFACE_2='I_raiRBk',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem0L',
                                          INTERFACE_1='I_raiRBk',
                                          SOUS_STRUC_2='elem1L',
                                          INTERFACE_2='I_raiRFt',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem1L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1R',
                                          INTERFACE_1='I_raiRFt',
                                          SOUS_STRUC_2='elem2R',
                                          INTERFACE_2='I_raiRBk',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1L',
                                          INTERFACE_1='I_raiRBk',
                                          SOUS_STRUC_2='elem2L',
                                          INTERFACE_2='I_raiRFt',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem2R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem2L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       ),
                              VERIF=_F(STOP_ERREUR='OUI',
                                       PRECISION=1.E-06,
                                       CRITERE='RELATIF',),
                              INFO=1,)

  # Mémoire (Mo) :  4147.89 /   943.76 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0081   user+syst:        0.25s (syst:        0.00s, elaps:        0.26s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt618
  # ------------------------------------------------------------------------------------------
  # Commande No :  0082            Concept de type : nume_ddl_gene
  # ------------------------------------------------------------------------------------------
  numGene = NUME_DDL_GENE(MODELE_GENE=modeGene,
                          STOCKAGE='LIGN_CIEL',
                          METHODE='CLASSIQUE',)

 +++ NOMBRE DE SOUS-STRUCTURES:                     6
 +++ NOMBRE DE LIAISONS:                     7
 +++ NOMBRE TOTAL D'EQUATIONS:                   652
 +++ DONT NOMBRE D'EQUATIONS STRUCTURE:                   372
 +++ DONT NOMBRE D'EQUATIONS LIAISON:                   280
 +++ HAUTEUR MAXIMUM D'UNE COLONNE:                   326
 +++ HAUTEUR MOYENNE D'UNE COLONNE:                   119
 +++ NOMBRE DE BLOCS DU STOCKAGE:                     1
 +++ NOMBRE DE TERMES DU STOCKAGE:                 78098
  # Mémoire (Mo) :  4147.89 /   943.76 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0082   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt624
  # ------------------------------------------------------------------------------------------
  # Commande No :  0083            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  masGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='MASS_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  1.000000
  # Mémoire (Mo) :  4147.89 /   944.36 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0083   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt627
  # ------------------------------------------------------------------------------------------
  # Commande No :  0084            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  rigGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='RIGI_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  55432.422893
  # Mémoire (Mo) :  4147.89 /   944.96 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0084   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt630
  # ------------------------------------------------------------------------------------------
  # Commande No :  0085            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  amoGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='AMOR_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  1.000000
  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0085   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt632
  # ------------------------------------------------------------------------------------------
  # Commande No :  0086            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  vectGe10 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,
                            CHAR_SOUS_STRUC=_F(SOUS_STRUC='elem2R',
                                               VECT_ASSE=vectAs10,),
                            METHODE='CLASSIQUE',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0086   user+syst:        0.02s (syst:        0.01s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt633
  # ------------------------------------------------------------------------------------------
  # Commande No :  0087            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  vectGe45 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,
                            CHAR_SOUS_STRUC=_F(SOUS_STRUC='elem2R',
                                               VECT_ASSE=vectAs45,),
                            METHODE='CLASSIQUE',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0087   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt654
  # ------------------------------------------------------------------------------------------
  # Commande No :  0088            Concept de type : harm_gene
  # ------------------------------------------------------------------------------------------
  harmGe10 = DYNA_VIBRA(BASE_CALCUL='GENE',
                        TYPE_CALCUL='HARM',
                        MATR_MASS=masGene,
                        MATR_RIGI=rigGene,
                        MATR_AMOR=amoGene,
                        FREQ=(600.0, 700.0),
                        TOUT_CHAM='OUI',
                        EXCIT=_F(VECT_ASSE_GENE=vectGe10,
                                 COEF_MULT=1.0,
                                 PHAS_DEG=0.0,
                                 PUIS_PULS=0,),
                        SOLVEUR=_F(METHODE='LDLT',
                                   RENUM='RCMK',
                                   NPREC=8,
                                   ELIM_LAGR='NON',
                                   STOP_SINGULIER='OUI',),
                        )


--------------------------------------------------------------------------------------

D Y N A _ V I B R A
=====================================================================================
                     Calcul HARMonique sur base GENEralisee
=====================================================================================

Modèle de sous-structuration dynamique
--------------------------------------------------------------------------------------
    >> modèle généralisé : bamo1
    >> numérotation généralisée : numGene
    >> nombre de modes    : 652
    >> fréquence minimale : 0.00000e+00
    >> fréquence maximale : 1.67293e+03

Matrices dynamiques pour la résolution
--------------------------------------------------------------------------------------
    >> matrice de masse        : masGene
    >> matrice de rigidité     : rigGene
    >> matrice d'amortissement : amoGene

Résolution
--------------------------------------------------------------------------------------
    >> fréquence minimale : 6.00000e+02
    >> fréquence maximale : 7.00000e+02
    >> nombre de fréquences calculées : 2

Archivage
--------------------------------------------------------------------------------------
    >> fréquences archivées : toutes (2 fréquences)
    >> champs archivés      : DEPL  VITE  ACCE

======================================================================================

Avancement du calcul
--------------------------------------------------------------------------------------
[ 50%] Fréquence calculée : 6.00000e+02, archivée au numéro d'ordre :     1
[100%] Fréquence calculée : 7.00000e+02, archivée au numéro d'ordre :     2

======================================================================================
                                                                        Fin du calcul

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.02      0.00      0.02
  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0088   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt668
  # ------------------------------------------------------------------------------------------
  # Commande No :  0089            Concept de type : harm_gene
  # ------------------------------------------------------------------------------------------
  harmGe45 = DYNA_VIBRA(BASE_CALCUL='GENE',
                        TYPE_CALCUL='HARM',
                        MATR_MASS=masGene,
                        MATR_RIGI=rigGene,
                        MATR_AMOR=amoGene,
                        FREQ=(600.0, 700.0),
                        TOUT_CHAM='OUI',
                        EXCIT=_F(VECT_ASSE_GENE=vectGe45,
                                 COEF_MULT=1.0,
                                 PHAS_DEG=0.0,
                                 PUIS_PULS=0,),
                        SOLVEUR=_F(METHODE='LDLT',
                                   RENUM='RCMK',
                                   NPREC=8,
                                   ELIM_LAGR='NON',
                                   STOP_SINGULIER='OUI',),
                        )


--------------------------------------------------------------------------------------

D Y N A _ V I B R A
=====================================================================================
                     Calcul HARMonique sur base GENEralisee
=====================================================================================

Modèle de sous-structuration dynamique
--------------------------------------------------------------------------------------
    >> modèle généralisé : bamo1
    >> numérotation généralisée : numGene
    >> nombre de modes    : 652
    >> fréquence minimale : 0.00000e+00
    >> fréquence maximale : 1.67293e+03

Matrices dynamiques pour la résolution
--------------------------------------------------------------------------------------
    >> matrice de masse        : masGene
    >> matrice de rigidité     : rigGene
    >> matrice d'amortissement : amoGene

Résolution
--------------------------------------------------------------------------------------
    >> fréquence minimale : 6.00000e+02
    >> fréquence maximale : 7.00000e+02
    >> nombre de fréquences calculées : 2

Archivage
--------------------------------------------------------------------------------------
    >> fréquences archivées : toutes (2 fréquences)
    >> champs archivés      : DEPL  VITE  ACCE

======================================================================================

Avancement du calcul
--------------------------------------------------------------------------------------
[ 50%] Fréquence calculée : 6.00000e+02, archivée au numéro d'ordre :     1
[100%] Fréquence calculée : 7.00000e+02, archivée au numéro d'ordre :     2

======================================================================================
                                                                        Fin du calcul

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.02      0.01      0.02
  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0089   user+syst:        0.04s (syst:        0.01s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0090            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=600.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0090   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0091            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0091   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0092            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0092   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0093            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=700.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0093   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0094            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0094   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0095            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0095   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------
  Lecture des blocs du fichier 'fort.30'...
  Lecture des blocs du fichier 'fort.31'...
  Lecture des blocs du fichier 'fort.32'...
  Lecture des blocs du fichier 'fort.33'...
  Lecture des blocs du fichier 'fort.36'...
  Lecture des blocs du fichier 'fort.37'...
[600. 700.]
[0.016 0.016]
[600. 700.]
[0.001 0.001]
[600. 700.]
[0.15923022 0.15923022]
[600. 700.]
[0.15923022 0.15923022]
Optimized frequency bands : 
[0.0, 2000.0]
TIME FOR INFO_MODE + CALC_MODES     133.8063943386078
TIME FOR INTF MODES     58.36785435676575
TIME FOR BAMO     0.2344214916229248
TIME FOR MACROEL     3.8213932514190674
TIME FOR MODEGENE     0.2975304126739502
TIME FOR HARMO     0.06472134590148926
1 0 0 0.037550550686292795
2 1 0 0.05365359195617755
3 2 0 0.05860366891321737
4 3 0 0.900418684373553
5 4 0 0.09675365788439215
6 5 0 0.028439098304533145
7 6 0 0.06052672721082893
8 7 0 0.04167378141322911
9 8 0 0.020147069448443362
10 9 0 0.00521962025340005
11 10 0 0.003426505322920716
12 11 0 0.0026134402559270416
13 12 0 0.0001966760415233386
14 13 0 0.0008960738767294804
15 14 0 0.0005688571097204992
16 15 0 4.6407534995515545e-05
17 16 0 0.00012773188326964415
18 17 0 0.00014707515114449792
19 18 0 3.7187180301905115e-05
20 19 0 4.9194602868709087e-05
21 20 0 6.92127320430461e-06
22 21 0 2.4013191875508763e-05
23 22 0 0.15422486385239573
24 23 0 0.17431376665243628
25 24 0 0.0494061345431921
26 25 0 0.03393985884456357
27 26 0 0.09033292156506618
28 27 0 0.03867867799695977
29 28 0 0.05621313375795731
30 29 0 0.00419440306579959
31 30 0 0.054898402585139026
32 31 0 0.00040235861163679597
33 32 0 0.000375717969567986
34 33 0 0.014619769992858984
35 34 0 0.00037992033383065985
36 35 0 0.0017734834612705018
37 36 0 0.0010419399653127045
38 37 0 0.00046727595314569325
39 38 0 0.00025150236399247144
40 39 0 0.0029207576107065096
41 40 0 1.1489480592230486e-05
42 41 0 0.0007305641824138383
43 42 0 9.023933231274488e-06
44 43 0 0.00016151545121739902
45 44 0 1.1900886003945252e-05
46 45 0 8.615867197728851e-05
47 46 0 3.5170347106583977e-06
48 47 0 3.0002479557696557e-05
49 48 0 2.6840124189168725e-06
50 49 0 2.5562040791775604e-05
51 50 0 2.7889726973565016e-06
52 51 0 5.885016565839046e-07
53 52 0 6.636323399910526e-06
54 53 0 1.342720661533515e-05
55 54 0 3.6127068299087044e-06
56 55 0 8.926882137504672e-07
57 56 0 6.047902897699334e-07
58 57 0 2.095000715703935e-06
59 58 0 4.693433596952235e-07
60 59 0 5.3888800036463986e-06
61 60 0 8.526236338561113e-07
62 61 0 3.905626812599995e-07
63 0 1 9.451750892961579e-07
64 1 1 4.834701868626441e-06
65 2 1 1.6726065878218346e-05
66 3 1 1.5528467789595343e-05
67 4 1 3.490122463825589e-08
68 5 1 3.2630734965273218e-06
69 6 1 9.500138499121999e-06
70 7 1 3.1982783982949326e-08
71 8 1 5.136665355111232e-06
72 9 1 1.862700081548288e-08
73 10 1 2.4587698876674084e-06
74 11 1 7.301825794607812e-09
75 12 1 3.847099865223153e-10
76 13 1 7.942105136127323e-07
77 14 1 6.388627524079332e-10
78 15 1 1.2154920473310386e-07
79 16 1 1.7678072583652892e-09
80 17 1 3.222077466170545e-10
81 18 1 1.333313385098942e-09
82 19 1 1.848754311259341e-07
83 20 1 7.927895118813064e-10
84 21 1 5.2418982271406226e-08
85 22 1 5.035554419441915e-06
86 23 1 6.609048156497273e-05
87 24 1 1.9674972806120978e-07
88 25 1 2.9897348947784653e-06
89 26 1 6.0424011847691805e-06
90 27 1 3.069901034968391e-08
91 28 1 2.078949255032455e-06
92 29 1 1.127032562790002e-08
93 30 1 1.6462986455045907e-07
94 31 1 2.8319057901349753e-09
95 32 1 5.23629882264181e-10
96 33 1 8.940879685601411e-08
97 34 1 7.97431039578972e-10
98 35 1 3.6857944921524045e-09
99 36 1 2.3083099104106448e-10
100 37 1 1.0284824989810229e-10
101 38 1 1.2404921909310838e-10
102 39 1 5.106499823088218e-09
103 40 1 3.934162798563374e-11
104 41 1 2.620936375507044e-09
105 42 1 5.110843041103884e-06
106 43 1 0.00014445981583277752
107 44 1 6.938382603928671e-06
108 45 1 0.00012255000982150103
109 46 1 9.383178819595202e-06
110 47 1 2.653902918113057e-05
111 48 1 3.9325228270157565e-06
112 49 1 2.426330903267112e-05
113 50 1 4.0517617203878114e-06
114 51 1 1.153952050041942e-06
115 52 1 5.4289767190972554e-06
116 53 1 1.2870353459777242e-05
117 54 1 4.377638550314542e-06
118 55 1 6.193113885744393e-07
119 56 1 3.392618552280966e-07
120 57 1 1.6868606672541156e-06
121 58 1 8.394236912370295e-08
122 59 1 3.5940135454530497e-06
123 60 1 3.925340497288866e-07
124 61 1 1.3806899687942256e-07
125 0 2 0.045516619631185265
126 1 2 0.05506989412416047
127 2 2 0.11148271758510375
128 3 2 0.2182114410222342
129 4 2 0.05863914009541749
130 5 2 0.01770500930160727
131 6 2 0.033260247779143194
132 7 2 0.03939091777955421
133 8 2 0.0613530937548098
134 9 2 0.028338788422838403
135 10 2 0.07113555246218307
136 11 2 0.009377632482695193
137 12 2 0.0002354080243894842
138 13 2 0.016484720956340147
139 14 2 0.0003935276013517222
140 15 2 0.001991349417656279
141 16 2 0.0016778462448034386
142 17 2 0.000389474479382719
143 18 2 0.0004881455728112773
144 19 2 0.0027979586597126484
145 20 2 6.603772599968899e-06
146 21 2 0.0006450163754704218
147 22 2 0.23996142745241367
148 23 2 0.7365897515360909
149 24 2 0.23629718556944346
150 25 2 0.027796683269771593
151 26 2 0.15015605582263405
152 27 2 0.03172168225303475
153 28 2 0.07730454306190548
154 29 2 0.10786876590097803
155 30 2 0.0485312641910233
156 31 2 0.04276794431584946
157 32 2 0.0011149346123468405
158 33 2 0.009660259287255182
159 34 2 0.002475364907099428
160 35 2 0.001694359624708993
161 36 2 0.018307050774138908
162 37 2 0.004811018616216736
163 38 2 0.005226200426315566
164 39 2 0.0009690823230025404
165 40 2 0.00033032544532477366
166 41 2 0.0002199651357033655
167 42 2 7.126424488626817e-06
168 43 2 0.00017029621636868508
169 44 2 1.1330691535135884e-05
170 45 2 8.822585306048335e-05
171 46 2 3.4112563730244605e-06
172 47 2 3.575871086826398e-05
173 48 2 2.551780081433351e-06
174 49 2 2.8548504755590964e-05
175 50 2 2.8301319601742954e-06
176 51 2 5.609998415864304e-07
177 52 2 7.229963337203032e-06
178 53 2 1.4547525905788929e-05
179 54 2 3.960095088176545e-06
180 55 2 8.377787051282934e-07
181 56 2 6.100240921726698e-07
182 57 2 2.379170148706477e-06
183 58 2 4.202853276144672e-07
184 59 2 6.157579898734567e-06
185 60 2 8.119633893033602e-07
186 61 2 3.865019287351617e-07
187 0 3 2.8622986438874614e-06
188 1 3 1.4451609566691871e-06
189 2 3 2.1468851744424992e-05
190 3 3 2.5715144185705046e-05
191 4 3 1.1007062940135302e-07
192 5 3 1.6278655788657735e-06
193 6 3 9.941456119561209e-06
194 7 3 3.235264192998773e-08
195 8 3 1.7141094767476202e-06
196 9 3 1.2947062877564162e-08
197 10 3 4.124911986145159e-06
198 11 3 5.341362185585246e-09
199 12 3 8.41896635104334e-10
200 13 3 7.951170191861321e-07
201 14 3 1.0561789803385598e-09
202 15 3 1.4565307667536584e-07
203 16 3 1.1950931154353623e-09
204 17 3 4.961828826935589e-10
205 18 3 3.8760103142277627e-10
206 19 3 7.406208931383182e-08
207 20 3 1.4571004952991403e-10
208 21 3 6.948984376698512e-09
209 22 3 1.2815593652749763e-05
210 23 3 1.0158871828721927e-05
211 24 3 4.086862817100667e-08
212 25 3 1.0038904068413046e-06
213 26 3 3.338973330022269e-06
214 27 3 3.1967500526785015e-08
215 28 3 6.604595086651792e-07
216 29 3 2.4682871503137553e-08
217 30 3 3.0613641944237866e-06
218 31 3 9.546089103732482e-09
219 32 3 4.710490874367978e-10
220 33 3 6.397877469161159e-07
221 34 3 5.737881840017272e-10
222 35 3 1.4205609103523157e-07
223 36 3 1.905916944425701e-09
224 37 3 2.493339255215784e-10
225 38 3 8.242002423446623e-10
226 39 3 9.119381540926994e-08
227 40 3 3.158572621960749e-10
228 41 3 1.859536164370029e-08
229 42 3 3.95213742034611e-06
230 43 3 0.00015068512920991906
231 44 3 6.7991055675287165e-06
232 45 3 0.00012998790727683095
233 46 3 9.078242233323586e-06
234 47 3 2.923502121932016e-05
235 48 3 3.855320226660815e-06
236 49 3 2.676472575387239e-05
237 50 3 4.179097579741349e-06
238 51 3 1.1471805692984867e-06
239 52 3 5.690853563051855e-06
240 53 3 1.354340655889795e-05
241 54 3 4.646109992778905e-06
242 55 3 6.141642393700565e-07
243 56 3 3.4029709232962894e-07
244 57 3 1.7968887253274754e-06
245 58 3 8.460578751664983e-08
246 59 3 3.8781960227184234e-06
247 60 3 4.044640655843236e-07
248 61 3 1.316126551523447e-07
249 0 4 0.03174934374343665
250 1 4 0.12493766008217859
251 2 4 0.265687944555262
252 3 4 0.7979934278952427
253 4 4 0.1923756284753607
254 5 4 0.029313456716431124
255 6 4 0.23209998509263202
256 7 4 0.034810726363190124
257 8 4 0.14525909772269
258 9 4 0.011797806354894965
259 10 4 0.0554363516909257
260 11 4 0.0018632867349004554
261 12 4 0.0012920987589137333
262 13 4 0.015804280849187665
263 14 4 0.004832083487817755
264 15 4 0.0014888005420955488
265 16 4 0.016256821427145594
266 17 4 0.005265279108396913
267 18 4 0.004404205827495917
268 19 4 0.0036296153021498022
269 20 4 0.0001860629023340268
270 21 4 0.0010266332978318012
271 22 4 0.030055862118728186
272 23 4 1.3968890466976966
273 24 4 1.5634258941635193
274 25 4 0.12198498943609784
275 26 4 0.10581010569449403
276 27 4 0.0372344490171736
277 28 4 0.07230630609628734
278 29 4 0.029676762917414022
279 30 4 0.08595747373913527
280 31 4 0.08508620652032914
281 32 4 0.028601553694099138
282 33 4 0.0275161664931695
283 34 4 0.0031009979497331175
284 35 4 0.005413697258972512
285 36 4 0.008673141991615493
286 37 4 0.00520213576051308
287 38 4 0.0028816924239821293
288 39 4 0.004015230461752471
289 40 4 0.0018115236788092705
290 41 4 0.0013702856287635217
291 42 4 1.4522384515347333e-05
292 43 4 0.0003924010712788925
293 44 4 7.557482073667129e-06
294 45 4 0.00021070936903584423
295 46 4 3.446764904745318e-06
296 47 4 5.9186979580478675e-05
297 48 4 1.101578770794445e-06
298 49 4 5.808305296831426e-05
299 50 4 6.532065700871356e-06
300 51 4 9.635936775186936e-07
301 52 4 1.555051230571963e-05
302 53 4 3.144309646399508e-05
303 54 4 8.638707453600915e-06
304 55 4 4.1753004110981046e-07
305 56 4 5.251488812565442e-07
306 57 4 4.734907490680256e-06
307 58 4 2.1668207148068342e-07
308 59 4 1.2301010239829897e-05
309 60 4 5.479246834246473e-07
310 61 4 2.3426587143799692e-07
311 0 5 1.7966953816660186e-06
312 1 5 7.657193429710393e-06
313 2 5 4.2756276471414115e-06
314 3 5 0.00010182272052719864
315 4 5 2.9140212381003677e-07
316 5 5 9.484205507394913e-07
317 6 5 8.384919484723749e-06
318 7 5 3.018521796807173e-08
319 8 5 3.289948526244902e-06
320 9 5 3.270131394439679e-08
321 10 5 5.4671482046858764e-08
322 11 5 6.412545847664561e-09
323 12 5 5.359725632567398e-10
324 13 5 8.010003151091765e-08
325 14 5 1.044236204465733e-09
326 15 5 4.947428405394059e-09
327 16 5 6.587865734249598e-10
328 17 5 1.3242317388750354e-10
329 18 5 1.888230693241692e-10
330 19 5 5.025360891289301e-09
331 20 5 4.7864160810464443e-11
332 21 5 3.3589067511921196e-09
333 22 5 2.07401191013938e-05
334 23 5 3.259518606995364e-05
335 24 5 1.2530014008946677e-07
336 25 5 1.0736933426262826e-06
337 26 5 1.2575974624358145e-05
338 27 5 3.074320929782706e-08
339 28 5 7.657658349090797e-06
340 29 5 4.2441161507668473e-08
341 30 5 3.5857868435254207e-06
342 31 5 1.5447338275897244e-08
343 32 5 4.465206912918594e-10
344 33 5 1.078277328716968e-06
345 34 5 2.6410150595746325e-10
346 35 5 1.270372144932736e-07
347 36 5 2.5213736061418982e-09
348 37 5 4.20527832430863e-10
349 38 5 1.7154652336902663e-09
350 39 5 2.664395082706204e-07
351 40 5 1.0556334200227842e-09
352 41 5 7.047187358010286e-08
353 42 5 1.2021646199256574e-05
354 43 5 0.0003514818668226854
355 44 5 4.106111218233135e-06
356 45 5 0.0002981687975521416
357 46 5 5.019747596782133e-06
358 47 5 5.7369503805020914e-05
359 48 5 2.875385165503919e-06
360 49 5 5.592969866412656e-05
361 50 5 9.938804823971543e-06
362 51 5 6.551920547830919e-07
363 52 5 1.3276259895407292e-05
364 53 5 3.163884845723687e-05
365 54 5 1.0755939066320523e-05
366 55 5 8.189523275166876e-07
367 56 5 3.616738922610395e-07
368 57 5 4.059747235647067e-06
369 58 5 1.5281456843511355e-07
370 59 5 8.468476487456288e-06
371 60 5 3.3105307396246905e-07
372 61 5 5.2960215248240824e-08
1 0 0 0.06330594116044717
2 1 0 0.00609924181793934
3 2 0 0.0838326332777994
4 3 0 0.2870650924628245
5 4 0 0.522970515100995
6 5 0 0.03855113646911074
7 6 0 0.0788622051778924
8 7 0 0.06249641805252013
9 8 0 0.025149072459335356
10 9 0 0.018316274124398225
11 10 0 0.00046341490578638057
12 11 0 0.011129018738415349
13 12 0 0.0008856832614817784
14 13 0 0.00079081232730971
15 14 0 0.0007365147940197808
16 15 0 3.0344678055467977e-05
17 16 0 0.0008609253159676511
18 17 0 0.00033942026247706547
19 18 0 0.00026191152723772964
20 19 0 6.378199297395778e-05
21 20 0 1.4806169260146257e-05
22 21 0 2.7522476796540314e-05
23 22 0 0.0957636673460243
24 23 0 0.2609511463361677
25 24 0 0.18365125004899913
26 25 0 0.07151456155448342
27 26 0 0.08865024921256567
28 27 0 0.055172206380096206
29 28 0 0.032300162148182786
30 29 0 0.0070308475267281964
31 30 0 0.014307304943716688
32 31 0 0.001389777500775214
33 32 0 0.0012103167984560902
34 33 0 0.0019249490655599178
35 34 0 0.0010351113764078723
36 35 0 0.000572952616819227
37 36 0 0.005488347306156927
38 37 0 0.002017068827755761
39 38 0 0.0014073291624364217
40 39 0 0.0007913891001857493
41 40 0 5.7348928124081584e-05
42 41 0 3.63918556872331e-05
43 42 0 8.830846434323268e-06
44 43 0 3.673954351921101e-05
45 44 0 4.447913200153528e-06
46 45 0 2.0091025491808525e-05
47 46 0 9.12117423389116e-07
48 47 0 1.0323173356879949e-05
49 48 0 1.114968407897282e-06
50 49 0 6.814675651041654e-06
51 50 0 8.238172489575586e-07
52 51 0 3.9717137176751545e-07
53 52 0 1.6383323250821246e-06
54 53 0 3.6860170016563947e-06
55 54 0 9.715336804413937e-07
56 55 0 3.775357863933034e-07
57 56 0 3.5997838653591414e-07
58 57 0 5.6717710561553e-07
59 58 0 3.3496813994915993e-07
60 59 0 1.4057474667482064e-06
61 60 0 3.2038939410816955e-07
62 61 0 1.6688220486921306e-07
63 0 1 1.337284593832218e-06
64 1 1 3.4466215997263175e-07
65 2 1 3.919797791787224e-06
66 3 1 1.039768187434103e-06
67 4 1 3.717143099270728e-08
68 5 1 1.6014870577875424e-06
69 6 1 2.405156825843171e-06
70 7 1 1.0640272377359518e-08
71 8 1 4.619453425991001e-07
72 9 1 6.941197763132448e-09
73 10 1 4.583427156004555e-07
74 11 1 2.6124354923253127e-09
75 12 1 7.82381581189767e-11
76 13 1 4.232502261606011e-08
77 14 1 1.0204315711560477e-10
78 15 1 2.2184607377639118e-08
79 16 1 3.731639675442419e-10
80 17 1 5.396827263976493e-11
81 18 1 8.643693247414556e-11
82 19 1 7.90114746413456e-09
83 20 1 9.092857898207801e-11
84 21 1 5.758298145780574e-09
85 22 1 2.6970280065538807e-06
86 23 1 4.042109490167232e-06
87 24 1 1.9350423980109583e-08
88 25 1 1.6394426858688899e-06
89 26 1 1.2691816342923498e-06
90 27 1 1.1148132393795834e-08
91 28 1 1.9794429166055786e-07
92 29 1 6.270469752308913e-09
93 30 1 3.1672771802968234e-08
94 31 1 1.9266320175985862e-09
95 32 1 4.122468817892987e-11
96 33 1 2.4729990261219274e-08
97 34 1 2.1522687302209292e-10
98 35 1 1.8167972358601276e-09
99 36 1 1.6579456572807204e-10
100 37 1 1.875803191693894e-11
101 38 1 4.9871588878900775e-11
102 39 1 1.4314463531774426e-09
103 40 1 4.7253512777426395e-12
104 41 1 3.181442202020964e-10
105 42 1 8.006782347616301e-06
106 43 1 3.317109248276276e-05
107 44 1 2.1777408799995007e-06
108 45 1 2.758301419098355e-05
109 46 1 3.6255408676873155e-06
110 47 1 8.530021915716278e-06
111 48 1 1.0660135370622645e-06
112 49 1 6.3616401255100874e-06
113 50 1 8.901956302796369e-07
114 51 1 5.004003730104525e-07
115 52 1 1.2323014008614126e-06
116 53 1 3.2148267305875134e-06
117 54 1 1.0685554334577125e-06
118 55 1 1.604170448631005e-07
119 56 1 2.585823794006274e-07
120 57 1 4.34813553627299e-07
121 58 1 7.134662675797924e-08
122 59 1 9.384283051157877e-07
123 60 1 1.0748087007481843e-07
124 61 1 7.855535563180973e-08
125 0 2 0.10628954977442515
126 1 2 0.03116764782750858
127 2 2 0.03230018343399307
128 3 2 0.3084448375013108
129 4 2 0.2185294729435826
130 5 2 0.0448727712549604
131 6 2 0.019764204601675727
132 7 2 0.05770732956047647
133 8 2 0.04536306719777775
134 9 2 0.09679118928213457
135 10 2 0.0531410274450203
136 11 2 0.036069601342127416
137 12 2 0.0002829810290814563
138 13 2 0.011527980249675135
139 14 2 0.00023430193405945244
140 15 2 0.0007645302375112445
141 16 2 0.0076510096513466765
142 17 2 0.0016798768331339057
143 18 2 0.002236713921114857
144 19 2 0.0008864585039317971
145 20 2 9.580535819968527e-05
146 21 2 0.00015244106339897396
147 22 2 0.03272129817611153
148 23 2 0.08187415013067312
.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0096            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=600.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0096   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0097            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0097   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0098            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0098   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0099            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=700.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0099   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0100            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0100   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0101            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   945.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0101   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt813
  # ------------------------------------------------------------------------------------------
  # Commande No :  0102            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_RESU(FORMAT='MED',
            UNITE=82,
            VERSION_MED='3.3.1',
            RESU=_F(RESULTAT=modes_1,
                    INFO_MAILLAGE='NON',
                    IMPR_NOM_VARI='OUI',),
            PROC0='OUI',
            INFO=1,)


Création du fichier au format MED 3.3.1.
  # Mémoire (Mo) :  4147.89 /   946.10 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0102   user+syst:        0.03s (syst:        0.00s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt830
  # ------------------------------------------------------------------------------------------
  # Commande No :  0103            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matEl_A1, matAs_A1, masGene, rigGene, amoGene, vectGe10, vectGe45, elemprop),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   833.89 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0103   user+syst:        0.03s (syst:        0.02s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt831
  # ------------------------------------------------------------------------------------------
  # Commande No :  0104            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(meshSlp, meshRaiR, meshPadR, tmp2, mesh, mesh0, model, f_EBal, f_TDBal, f_EPad1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   818.13 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0104   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt832
  # ------------------------------------------------------------------------------------------
  # Commande No :  0105            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(f_EPad2, f_TDPad1, f_TDPad2, tie2, tie3, BCinterf, load10, load45),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   774.91 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0105   user+syst:        0.02s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt833
  # ------------------------------------------------------------------------------------------
  # Commande No :  0106            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matEl_K1, concrRe, steel, padMat1, padMat2, fieldmat, tabModes, macroEl1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   675.95 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0106   user+syst:        0.02s (syst:        0.01s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt834
  # ------------------------------------------------------------------------------------------
  # Commande No :  0107            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matAs_K1, matEl_M1, matAs_M1, vectEl10, vectEl45, vectAs10, vectAs45, modeGene, numGene),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   524.97 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0107   user+syst:        0.03s (syst:        0.01s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt835
  # ------------------------------------------------------------------------------------------
  # Commande No :  0108            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(modStaR1, modStaR2, modStaS, Lint, bamo1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   415.96 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0108   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt836
  # ------------------------------------------------------------------------------------------
  # Commande No :  0109            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(harmGe10, harmGe45, CH_id, intCH_id),),
           INFO=1,)

  # Mémoire (Mo) :  4147.89 /   415.28 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0109   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt841
  # ------------------------------------------------------------------------------------------
  # Commande No :  0110            Concept de type : -
  # ------------------------------------------------------------------------------------------
  FIN(RETASSAGE='OUI',
      FORMAT_HDF='NON',
      INFO_RESU='OUI',
      PROC0='OUI',
      )

   
   !-------------------------------------------------------------------------!
   ! <I> <CATAMESS_89>                                                       !
   !                                                                         !
   !     Liste des alarmes émises lors de l'exécution du calcul.             !
   !                                                                         !
   !     Les alarmes que vous avez choisies d'ignorer sont précédées de (*). !
   !     Nombre d'occurrences pour chacune des alarmes :                     !
   !            ALGELINE_1           émise    6 fois                         !
   !            SUPERVIS2_2          émise    1 fois                         !
   !            SUPERVIS_1           émise    1 fois                         !
   !-------------------------------------------------------------------------!
   

 ======>

 STRUCTURE DU CONCEPT modes_1  CALCULE POUR          2 NUMEROS D'ORDRE

 LISTE DES NOMS SYMBOLIQUES:
 ! ---------- !----------------!
 ! NUME_ORDRE !      DEPL      !
 ! ---------- !----------------!
 !          1 !     DEPL_R     !
 !          2 !     DEPL_R     !
 ! ---------- !----------------!

 LISTE DES NOMS DE VARIABLES D'ACCES:
                                      FREQ             DE TYPE  R
                                      NUME_MODE        DE TYPE  I
                                      NOEUD_CMP        DE TYPE  K16

 LISTE DES NOMS DE PARAMETRES:
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 ! NUME_ORDRE !   AMOR_GENE    !  AMOR_REDUIT   !    CARAELEM    !    CHAMPMAT    !     EXCIT      !FACT_PARTICI_DX !FACT_PARTICI_DY !FACT_PARTICI_DZ !  MASS_EFFE_DX  !  MASS_EFFE_DY  !  MASS_EFFE_DZ  !MASS_EFFE_UN_DX !MASS_EFFE_UN_DY !MASS_EFFE_UN_DZ !   MASS_GENE    !     MODELE     !     NORME      !    NUME_DDL    !     OMEGA2     !   RIGI_GENE    !   TYPE_DEFO    !   TYPE_MODE    !
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 !          1 !       R        !       R        !       K8       !       K8       !      K24       !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       K8       !      K24       !       I        !       R        !       R        !      K16       !      K16       !
 !          2 !       R        !       R        !       K8       !       K8       !      K24       !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       K8       !      K24       !       I        !       R        !       R        !      K16       !      K16       !
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 ---------------------------------------------------------------------------
 Concepts de la base: G
    Nom       Type                 Taille (Mo)         Nombre      Nombre de
                                                     d'objets       segments
    TOTAL                                57.28             76            148
  
    num1       NUME_DDL_SDASTER          28.25             11             16
    modes_1    MODE_MECA                  1.74             20             26
    &FOZERO                               0.00              2              2
    &&_NUM_C                              0.00              1              1
    &CATA.AC                              0.00              2              4
    &CATA.CL                              0.60              1              3
    &CATA.GD                              0.14              4             11
    &CATA.ME                              0.20              2              4
    &CATA.OP                              0.30              4             19
    &CATA.PH                              0.00              1              1
    &CATA.PR                              0.00              2              4
    &CATA.TE                             26.03             17             42
    &CATA.TH                              0.01              2              4
    &CATA.TM                              0.01              7             11
 ---------------------------------------------------------------------------


     Nom de la base                          :  GLOBALE
     Nombre d'enregistrements utilisés       :  93
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  413
     Volume des accès en lecture             :        322.66 Mo.
     Nombre total d'accès en écriture        :  174
     Volume des accès en écriture            :        135.94 Mo.
     Nombre d'identificateurs utilisés       :  1835
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  91 %


     Nom de la base                          :  VOLATILE
     Nombre d'enregistrements utilisés       :  62
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  509
     Volume des accès en lecture             :        397.66 Mo.
     Nombre total d'accès en écriture        :  623
     Volume des accès en écriture            :        486.72 Mo.
     Nombre d'identificateurs utilisés       :  1030
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  51 %

  Ouverture en lecture du fichier ./glob.1

     Nom de la base                          :  GLOBALE
     Créée avec la version                   :  14.04.00
     Nombre d'enregistrements utilisés       :  93
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre d'identificateurs utilisés       :  1835
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  91 %

  Ouverture en lecture du fichier ./glob.1


Lancement de la commande : rm -f ./vola.?


  Ouverture en écriture du fichier ./vola.1


Lancement de la commande : rm -f ./glob.*



Lancement de la commande ->mv ./vola.1 ./glob.1<-

 <I> <FIN> RETASSAGE DE LA BASE "GLOBALE" EFFECTUEE,  1 FICHIER(S) UTILISE(S).

 <FIN> Arrêt normal dans "FIN".
 <I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".

 La mémoire demandée au lancement est surestimée, elle est de 8000.00 Mo.
 Le pic mémoire utilisée est de 4147.89 Mo.



     Nom de la base                          :  ELEMBASE
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  60
     Volume des accès en lecture             :         46.88 Mo.
     Nombre total d'accès en écriture        :  0
     Volume des accès en écriture            :          0.00 Mo.
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %
  
 <I> <FIN> MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :                     180.99 Mo
 <I> <FIN> MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :                     652.08 Mo
 <I> <FIN> MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS LORS DE L'EXECUTION :    4147.89 Mo
  
 <I>       FERMETURE DES BASES EFFECTUEE
  
   STATISTIQUES CONCERNANT L'ALLOCATION DYNAMIQUE :
     TAILLE CUMULEE MAXIMUM            :                  652  Mo.
     TAILLE CUMULEE LIBEREE            :                  497  Mo.
     NOMBRE TOTAL D'ALLOCATIONS        :               665913
     NOMBRE TOTAL DE LIBERATIONS       :               665853
     APPELS AU MECANISME DE LIBERATION :                    0
     TAILLE MEMOIRE CUMULEE RECUPEREE  :                  697  Mo.
     VOLUME DES LECTURES               :                    0  Mo.
     VOLUME DES ECRITURES              :                  505  Mo.
  
   MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :     180.99 Mo
     - IMPOSE DE NOMBREUX ACCES DISQUE
     - RALENTIT LA VITESSE D'EXECUTION
   MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :     652.08 Mo
     - LIMITE LES ACCES DISQUE
     - AMELIORE LA VITESSE D'EXECUTION
   MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS     :    4147.89 Mo
     - COMPREND LA MEMOIRE CONSOMMEE PAR  JEVEUX, 
       LE SUPERVISEUR PYTHON, LES LIBRAIRIES EXTERNES
  
 <I>       FIN D'EXECUTION LE : JE-25-AOUT-2022 19:01:46


  <I> Informations sur les temps d'exécution
      Temps cpu user total                  197.06 s
      Temps cpu systeme total                 4.52 s
      Temps elapsed total                   203.50 s
      Temps restant                     3599796.50 s


  La signature de la base sauvegardée est (à l'adresse 0) :
    1480d5d53ef6cde7f78ef0d53c9e0d0a0a9e4a15

 ********************************************************************************
 * COMMAND                  :       USER :     SYSTEM :   USER+SYS :    ELAPSED *
 ********************************************************************************
 * init (jdc)               :     197.06 :       4.52 :     201.58 :     203.51 *
 *  . compile               :       0.00 :       0.00 :       0.00 :       0.01 *
 *  . exec_compile          :     196.88 :       4.50 :     201.38 :     203.29 *
 * DEBUT                    :       0.01 :       0.02 :       0.03 :       0.06 *
 * LIRE_MAILLAGE            :       0.01 :       0.01 :       0.02 :       0.02 *
 * LIRE_MAILLAGE            :       0.01 :       0.00 :       0.01 :       0.02 *
 * LIRE_MAILLAGE            :       0.01 :       0.01 :       0.02 :       0.02 *
 * MODI_MAILLAGE            :       0.00 :       0.00 :       0.00 :       0.01 *
 * MODI_MAILLAGE            :       0.01 :       0.00 :       0.01 :       0.01 *
 * ASSE_MAILLAGE            :       0.04 :       0.00 :       0.04 :       0.04 *
 * ASSE_MAILLAGE            :       0.05 :       0.00 :       0.05 :       0.06 *
 * CREA_MAILLAGE            :       0.06 :       0.00 :       0.06 :       0.06 *
 * AFFE_MODELE              :       0.03 :       0.01 :       0.04 :       0.04 *
 * CREA_CHAMP               :       0.00 :       0.00 :       0.00 :       0.00 *
 * POST_ELEM                :       0.02 :       0.00 :       0.02 :       0.02 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.01 :       0.00 :       0.01 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.01 *
 * LIRE_FONCTION            :       0.01 :       0.00 :       0.01 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.01 *
 * AFFE_CHAR_MECA           :       0.12 :       0.01 :       0.13 :       0.12 *
 * AFFE_CHAR_MECA           :       0.27 :       0.02 :       0.29 :       0.30 *
 * AFFE_CHAR_MECA           :       0.03 :       0.00 :       0.03 :       0.03 *
 * AFFE_CHAR_MECA           :       0.00 :       0.00 :       0.00 :       0.01 *
 * AFFE_CHAR_MECA           :       0.01 :       0.00 :       0.01 :       0.01 *
 * DEFI_MATERIAU            :       0.01 :       0.00 :       0.01 :       0.01 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.01 *
 * AFFE_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * AFFE_CARA_ELEM           :       0.12 :       0.00 :       0.12 :       0.12 *
 * CALC_MATR_ELEM           :       0.33 :       0.03 :       0.36 :       0.36 *
 * NUME_DDL                 :       0.68 :       0.18 :       0.86 :       0.89 *
 * ASSE_MATRICE             :       0.26 :       0.01 :       0.27 :       0.28 *
 * CALC_MATR_ELEM           :       0.10 :       0.02 :       0.12 :       0.13 *
 * ASSE_MATRICE             :       0.17 :       0.00 :       0.17 :       0.19 *
 * CALC_VECT_ELEM           :       0.00 :       0.00 :       0.00 :       0.00 *
 * CALC_VECT_ELEM           :       0.00 :       0.00 :       0.00 :       0.01 *
 * ASSE_VECTEUR             :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_VECTEUR             :       0.00 :       0.00 :       0.00 :       0.00 *
 * CALC_MATR_ELEM           :       0.11 :       0.05 :       0.16 :       0.16 *
 * ASSE_MATRICE             :       0.17 :       0.01 :       0.18 :       0.19 *
 * INFO_MODE                :      47.82 :       0.79 :      48.61 :      49.44 *
 * CALC_MODES               :      82.19 :       1.51 :      83.70 :      84.37 *
 * MODE_STATIQUE            :      19.06 :       0.48 :      19.54 :      19.58 *
 * MODE_STATIQUE            :      18.88 :       0.53 :      19.41 :      19.49 *
 * MODE_STATIQUE            :      18.71 :       0.47 :      19.18 :      19.29 *
 * NORM_MODE                :       0.91 :       0.02 :       0.93 :       0.95 *
 * NORM_MODE                :       0.92 :       0.01 :       0.93 :       0.93 *
 * NORM_MODE                :       0.92 :       0.01 :       0.93 :       0.93 *
 * DEFI_INTERF_DYNA         :       0.07 :       0.00 :       0.07 :       0.06 *
 * DEFI_BASE_MODALE         :       0.04 :       0.00 :       0.04 :       0.05 *
 * DEFI_BASE_MODALE         :       0.05 :       0.00 :       0.05 :       0.06 *
 * DEFI_BASE_MODALE         :       0.05 :       0.01 :       0.06 :       0.06 *
 * MACR_ELEM_DYNA           :       3.71 :       0.09 :       3.80 :       3.82 *
 * DEFI_MODELE_GENE         :       0.25 :       0.00 :       0.25 :       0.26 *
 * NUME_DDL_GENE            :       0.00 :       0.00 :       0.00 :       0.01 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_VECT_GENE           :       0.01 :       0.01 :       0.02 :       0.01 *
 * ASSE_VECT_GENE           :       0.01 :       0.00 :       0.01 :       0.01 *
 * DYNA_VIBRA               :       0.03 :       0.00 :       0.03 :       0.03 *
 * DYNA_VIBRA               :       0.03 :       0.01 :       0.04 :       0.03 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * DETRUIRE                 :       0.01 :       0.00 :       0.01 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.00 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_RESU                :       0.03 :       0.00 :       0.03 :       0.04 *
 * DETRUIRE                 :       0.01 :       0.02 :       0.03 :       0.03 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.01 *
 * DETRUIRE                 :       0.02 :       0.00 :       0.02 :       0.01 *
 * DETRUIRE                 :       0.01 :       0.01 :       0.02 :       0.02 *
 * DETRUIRE                 :       0.02 :       0.01 :       0.03 :       0.04 *
 * DETRUIRE                 :       0.02 :       0.00 :       0.02 :       0.02 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * FIN                      :       0.02 :       0.12 :       0.14 :       0.15 *
 *  . part Superviseur      :       0.71 :       0.10 :       0.81 :       0.87 *
 *  . part Fortran          :     196.34 :       4.42 :     200.76 :     202.63 *
 ********************************************************************************
 * TOTAL_JOB                :     197.06 :       4.52 :     201.58 :     203.50 *
 ********************************************************************************


149 24 2 0.5929732825617019
150 25 2 0.04111111776150097
151 26 2 0.03313153869351678
152 27 2 0.037970892723070124
153 28 2 0.03332651404685014
154 29 2 0.26244741271769095
155 30 2 0.061601267140295096
156 31 2 0.10643701126718093
157 32 2 0.0025770797108890515
158 33 2 0.01407483771275534
159 34 2 0.004385160167793646
160 35 2 0.00019690245862987593
161 36 2 0.04023273983853946
162 37 2 0.010491650570315425
163 38 2 0.011510699672396114
164 39 2 0.0018231357447872608
165 40 2 0.0007824161932437238
166 41 2 0.00030294674516820607
167 42 2 8.439085409882993e-06
168 43 2 4.8045610791829886e-05
169 44 2 1.2347212972553766e-05
170 45 2 3.0404758667846718e-05
171 46 2 3.188234770590146e-06
172 47 2 5.016846830211184e-06
173 48 2 2.9442563787313086e-06
174 49 2 3.6428890256092075e-06
175 50 2 1.4667576244932223e-06
176 51 2 4.6758394373310126e-07
177 52 2 1.338700440809668e-06
178 53 2 3.2995276742285402e-06
179 54 2 1.2189645044879033e-06
180 55 2 9.97589281552784e-07
181 56 2 7.890564903287977e-07
182 57 2 3.955539719527665e-07
183 58 2 5.663651382976887e-07
184 59 2 1.3273695337772371e-06
185 60 2 8.961923819003018e-07
186 61 2 4.6444436313728683e-07
187 0 3 2.1213333322078358e-06
188 1 3 3.222325274720105e-07
189 2 3 1.8613083026151254e-06
190 3 3 1.4279983234289878e-06
191 4 3 2.5349431003673436e-08
192 5 3 1.3801318698620794e-06
193 6 3 1.6566398556961618e-06
194 7 3 1.1832190187319506e-08
195 8 3 1.5208484040906247e-07
196 9 3 1.857351001339273e-08
197 10 3 7.172294641856258e-07
198 11 3 7.762423672829254e-09
199 12 3 3.634447499634573e-10
200 13 3 1.3201080091647805e-07
201 14 3 2.459361797606037e-10
202 15 3 7.612599126238028e-09
203 16 3 2.1953400142346968e-09
204 17 3 4.868522575741023e-10
205 18 3 6.422596292037979e-10
206 19 3 6.753283575461644e-09
207 20 3 2.1108606922596793e-11
208 21 3 2.1124853015410095e-09
209 22 3 9.484561416876375e-07
210 23 3 1.2768091693358095e-06
211 24 3 3.7566205609302625e-08
212 25 3 1.2566904661148665e-06
213 26 3 7.955006625226405e-07
214 27 3 1.1190915001911148e-08
215 28 3 1.542769068460993e-07
216 29 3 1.0171870053952715e-08
217 30 3 2.1319203533199826e-07
218 31 3 3.463973796898585e-09
219 32 3 9.251822860631304e-11
220 33 3 4.9877309082387354e-08
221 34 3 3.9420452787253723e-10
222 35 3 2.568015441639711e-08
223 36 3 1.3752340392587728e-10
224 37 3 7.16193740179157e-11
225 38 3 9.169533689005129e-11
226 39 3 7.407554559083584e-09
227 40 3 1.6649006092010686e-11
228 41 3 1.3479858617715543e-09
229 42 3 8.0412236361838e-06
230 43 3 4.4622933367608185e-05
231 44 3 7.560742411912999e-06
232 45 3 3.705762278552282e-05
233 46 3 1.039626834302097e-05
234 47 3 6.3951957559658794e-06
235 48 3 4.107936813109471e-06
236 49 3 4.302267163554583e-06
237 50 3 1.3205808453286759e-06
238 51 3 1.471615007950449e-06
239 52 3 1.7754975780327047e-06
240 53 3 4.747701679781492e-06
241 54 3 1.6000251978640839e-06
242 55 3 6.388248701623944e-07
243 56 3 4.771721859134709e-07
244 57 3 5.230341745753236e-07
245 58 3 1.0923809392588284e-07
246 59 3 8.637189857615728e-07
247 60 3 4.735880439870078e-07
248 61 3 1.6495474846199487e-07
249 0 4 0.08185774695225859
250 1 4 0.05040203750183518
251 2 4 0.07241999126850265
252 3 4 0.04216844964247559
253 4 4 0.49149715035796493
254 5 4 0.059526935687972383
255 6 4 0.03535334030399391
256 7 4 0.04566460265518845
257 8 4 0.025452498664178338
258 9 4 0.02060406356231702
259 10 4 0.051273557447795645
260 11 4 0.007142588238817914
261 12 4 0.0026946993920266876
262 13 4 0.011038648848369078
263 14 4 0.010592146915993942
264 15 4 0.00015353919777880826
265 16 4 0.03523245944308174
266 17 4 0.01156512527645075
267 18 4 0.009485735416850924
268 19 4 0.002036961070739694
269 20 4 0.0003316612376680308
270 21 4 0.0003318085069998809
271 22 4 0.11470814024139699
272 23 4 0.7043402009576054
273 24 4 3.4071094275405946
274 25 4 0.08210037391224233
275 26 4 0.12463786724041775
276 27 4 0.047937760236794545
277 28 4 0.007348777718954357
278 29 4 0.05867038951149804
279 30 4 0.08525027271584297
280 31 4 0.104607214188889
281 32 4 0.02717018313534894
282 33 4 0.025843999291622982
283 34 4 0.003654020680417121
284 35 4 0.00536135041633731
285 36 4 0.0069005335012186555
286 37 4 0.004923221315763085
287 38 4 0.00227533641303874
288 39 4 0.004154667191280217
289 40 4 0.001825079047515349
290 41 4 0.0012907750633019874
291 42 4 2.6097508319042645e-05
292 43 4 8.848780112863016e-05
293 44 4 6.707300199223232e-06
294 45 4 6.106296599740305e-05
295 46 4 4.0690302767367065e-06
296 47 4 1.1987994953506613e-05
297 48 4 4.4554828775902617e-07
298 49 4 5.025757203297827e-06
299 50 4 3.1108661958046347e-06
300 51 4 1.5226983086353645e-06
301 52 4 2.235176156844243e-06
302 53 4 5.811567674302692e-06
303 54 4 1.9681910744206214e-06
304 55 4 2.254281169020404e-07
305 56 4 1.044954693667625e-06
306 57 4 4.941822629445538e-07
307 58 4 4.738146919630078e-07
308 59 4 1.8621042192586859e-06
309 60 4 5.204102791961357e-07
310 61 4 3.342508373602077e-07
311 0 5 1.5106842953526061e-06
312 1 5 3.6912848471094723e-07
313 2 5 3.5908071683258067e-06
314 3 5 6.657743974658383e-06
315 4 5 2.3344455109102462e-07
316 5 5 1.4182060307317834e-06
317 6 5 1.2340031406702334e-06
318 7 5 1.3452577118756837e-08
319 8 5 2.9125864367087887e-07
320 9 5 3.9593883115597545e-09
321 10 5 8.290121176738009e-08
322 11 5 1.7397809768473731e-09
323 12 5 3.869269420459113e-10
324 13 5 2.1703968658079564e-08
325 14 5 3.9649068746945367e-10
326 15 5 8.672649784569882e-11
327 16 5 1.5629587736085683e-10
328 17 5 7.755359634549516e-11
329 18 5 7.717743179304427e-11
330 19 5 1.5686129927184078e-09
331 20 5 1.1401721947973473e-11
332 21 5 5.176500632531594e-10
333 22 5 1.3199319158081602e-06
334 23 5 8.076595186698415e-07
335 24 5 1.3496217066437542e-08
336 25 5 1.5987235924011381e-06
337 26 5 1.3882551792001353e-06
338 27 5 1.2104187288327127e-08
339 28 5 1.8919870266048337e-07
340 29 5 1.0028153141655745e-08
341 30 5 4.1617883495680076e-07
342 31 5 3.7941880036351654e-09
343 32 5 1.6938592083986317e-10
344 33 5 7.064229875789717e-08
345 34 5 6.728050086020466e-10
346 35 5 6.5145558975574074e-09
347 36 5 2.0612078745796114e-09
348 37 5 5.426021931470605e-10
349 38 5 5.677506648565019e-10
350 39 5 1.3174892461504192e-08
351 40 5 1.4485007093543309e-11
352 41 5 1.2777802049730617e-09
353 42 5 2.5577971984698084e-05
nModesTot 62
nEigen 2
TOTAL TIME 202.86995363235474
WARNING: can not pickle object: f <class '_io.TextIOWrapper'>
WARNING: can not pickle object: freqFile <class '_io.TextIOWrapper'>
WARNING: can not pickle object: temp1 <class 'Utilitai.Table.Table'>
WARNING: can not pickle object: fileVect <class '_io.TextIOWrapper'>
WARNING: can not pickle object: fileModes <class '_io.TextIOWrapper'>
--- Fin de l'exécution
EXECUTION_CODE_ASTER_EXIT_92085=0
