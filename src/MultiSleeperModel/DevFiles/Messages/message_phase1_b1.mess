# ------------------------------------------------------------------------------------------
# Impression du contenu du fichier de commandes à exécuter :
# ------------------------------------------------------------------------------------------
######################################################
# CRAIG-BAMPTON MODELISATION with coupling modes : Phase 2 / Run simulation
######################################################
DEBUT(PAR_LOT='NON')


from Utilitai import partition
from Utilitai.Table import Table
from math import pi
import time
import numpy as np
import os
import json


with open('fort.2', 'r') as f:
    txt = f.read()
f.close()

parameters = json.loads(txt)
maxFreq = parameters['phase1FreqMax']
includeUSP = parameters['USPON']
freq1 = parameters['phase1Freqs'][0]
freq2 = parameters['phase1Freqs'][-1]
nuPadMat1 = parameters['nuMat1']
nuPadMat2 = parameters['nuMat2']
coefSlpBotArea = parameters['balAreaCoef']
nuBal = parameters['nuBal']
hBal = parameters['hBal']
nModesRails = parameters['phase1RailModes']
nModesSleeper = parameters['phase1SlpModes']
slpForce = 3

if includeUSP == True:
    nuUSP = parameters['nuUSP']

######################################################
# Define functions
######################################################


def GetAlphaBeta(freqList, dampingList):
# Computes optimized Rayleigh's coefs alpha & beta ( eta=1/2*(alpha*w+beta/w) )
# freqList in Hz ; both lists = np.array()
    print(freqList)
    print(dampingList)
    if len(freqList) == 1: # only 1 freq: set beta to 0 and alpha s.t. damping is exact
        return [dampingList[0]/(pi*freqList[0]), 0] 
    elif len(freqList) == 2: # only 2 freqs: return alpha, beta s.t. damping is exact at both freqs
        f0 = freqList[0]
        f1 = freqList[1]
        eta0 = dampingList[0]
        eta1 = dampingList[1]
        alpha = eta0/(pi*f0)*(1 - f1/eta0 * (eta0*f1-eta1*f0)/(f1**2-f0**2))
        beta = 4*pi*f0*f1 * (eta0*f1-eta1*f0)/(f1**2-f0**2)
        return [alpha, beta]

    # more than 2 freqs: use least squares method to optimize damping
    A = np.trapz(dampingList*2*pi*freqList, 2*pi*freqList)
    B = np.trapz(dampingList/(2*pi*freqList), 2*pi*freqList)
    vect = np.array([[A], [B]])
    w1 = 2*pi*freqList[0]
    w2 = 2*pi*freqList[-1]
    M = 12/((w2**3-w1**3)*(1/w1-1/w2) - 3*(w2-w1)**2) * np.array([[1/2*(1/w1-1/w2), -1/2*(w2-w1)], [-1/2*(w2-w1), 1/6*(w2**3-w1**3)]])
    alphaBeta = np.dot(M, vect)
    alpha = float(alphaBeta[0])
    beta = float(alphaBeta[1])
    return [alpha, beta]

    

######################################################
# Trim eigenmodes and define min number of interface modes to compute
######################################################
t0=time.time()
freqBands1 = list(range(0, int(maxFreq) + 1, min(1000, int(maxFreq))))
if freqBands1[-1] != int(maxFreq):
    freqBands1.append(int(maxFreq))


######################################################
# Get list of frequencies from freq files
######################################################
with open('fort.40') as freqFile:
    freqlines = freqFile.read().splitlines()
freqFile.close()

allFreqs = []
for freqline in freqlines:
    try:
        frequency=float(freqline.split(' ')[0])
    except:
        continue
    allFreqs.append(frequency)


######################################################
# MESHES AND MODEL
######################################################
meshSlp = LIRE_MAILLAGE(FORMAT="MED",UNITE=21);
meshRaiR = LIRE_MAILLAGE(FORMAT="MED",UNITE=25);

meshPadR = LIRE_MAILLAGE(FORMAT="MED",UNITE=23);
offsetPadDroit = 757.54
offsetPadBas = 214.0
rotpadX=-1.43261

meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                       MAILLAGE=meshPadR,
                       ROTATION=_F(
                         ANGLE=rotpadX, 
                         POIN_1=(0.0, 0.0, 0.0), 
                         POIN_2=(1000.0, 0.0, 0.0)))

meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                       MAILLAGE=meshPadR,
                       TRANSLATION=(0.0, offsetPadBas, offsetPadDroit),)


if includeUSP == True:
    USPthk = 8.5
    
    meshUSP = LIRE_MAILLAGE(FORMAT="MED",UNITE=26);
    
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_MA = _F(TYPE_MAILLE='2D', NOM='USPbot', OPTION='FACE_NORMALE', VECT_NORMALE=(0,-1,0)))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPbot', GROUP_MA='USPbot'))
                         
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPtop', OPTION='PLAN', POINT=(0,USPthk,0), VECT_NORMALE=(0,1,0), PRECISION=1e-3))
    ###                     
    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='tmp', OPTION='PLAN', POINT=(0,0,0), VECT_NORMALE=(0,0,1), PRECISION=1e-3))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         CREA_GROUP_NO = _F(NOM='USPsym', DIFFE=('tmp', 'USPtop')))

    meshUSP = DEFI_GROUP(reuse=meshUSP, MAILLAGE=meshUSP, 
                         DETR_GROUP_NO = _F(NOM='tmp'))
    
    # Translate components above USPs of USP's thickness
    meshSlp = MODI_MAILLAGE(reuse=meshSlp, MAILLAGE=meshSlp, TRANSLATION=(0, USPthk, 0));
    meshPadR = MODI_MAILLAGE(reuse=meshPadR, MAILLAGE=meshPadR, TRANSLATION=(0, USPthk, 0));
    meshRaiR = MODI_MAILLAGE(reuse=meshRaiR, MAILLAGE=meshRaiR, TRANSLATION=(0, USPthk, 0));
    
    tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshUSP, MAILLAGE_2=meshSlp, OPERATION='SUPERPOSE')
    tmp3 = ASSE_MAILLAGE(MAILLAGE_1=tmp2, MAILLAGE_2=meshPadR, OPERATION='SUPERPOSE')
    mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp3, MAILLAGE_2=meshRaiR, OPERATION='SUPERPOSE')
    
    mesh0 = DEFI_GROUP(reuse=mesh0, MAILLAGE=mesh0, 
                       CREA_GROUP_NO = _F(NOM='slpSym2', UNION=('slpSym', 'USPsym')))
    
    discreteBalNodes = 'USPbot'
    slpSym = 'slpSym2'
else:
    tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshSlp, MAILLAGE_2=meshPadR, OPERATION='SUPERPOSE')
    mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp2, MAILLAGE_2=meshRaiR, OPERATION='SUPERPOSE')
    discreteBalNodes = 'slpBot'
    slpSym = 'slpSym'

mesh = CREA_MAILLAGE(CREA_POI1=_F(GROUP_NO=discreteBalNodes, 
                                  NOM_GROUP_MA=discreteBalNodes + '0D'), 
                     MAILLAGE=mesh0) 

model = AFFE_MODELE(MAILLAGE=mesh,
                    AFFE=(_F(TOUT='OUI',
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),
                          _F(GROUP_MA=discreteBalNodes + '0D',
                             PHENOMENE='MECANIQUE',
                             MODELISATION='DIS_T',),));
                          
# Compute area of a half-sleeper bottom face
CH_id = CREA_CHAMP(OPERATION = 'AFFE',
                      TYPE_CHAM ='NOEU_NEUT_R',
                      MAILLAGE = mesh ,
                      AFFE = _F(GROUP_MA=discreteBalNodes, NOM_CMP=('X1'), VALE=1.0,))

intCH_id = POST_ELEM(CHAM_GD=CH_id,
                     INTEGRALE=_F(GROUP_MA=discreteBalNodes,
                                  NOM_CMP=('X1'),
                                  TYPE_MAILLE='2D'),
                     MODELE=model)
                     
A_slpBot = intCH_id['INTE_X1',1]

# Get number of nodes in discreteBalNodes
pyMesh = partition.MAIL_PY()
pyMesh.FromAster('mesh')
nodeGrps = mesh.LIST_GROUP_NO()
for gp in nodeGrps:
    gpName = gp[0]
    if gpName == discreteBalNodes:
        gpNodes = pyMesh.gno.get(gpName)
        nNodesBal = len(gpNodes)
        break
                    
######################################################
# Import materials properties / functions
######################################################
f_EPad1=LIRE_FONCTION(UNITE = 30,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')
                 
f_TDPad1=LIRE_FONCTION(UNITE = 31,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')


f_EPad2=LIRE_FONCTION(UNITE = 32,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')
                 
f_TDPad2=LIRE_FONCTION(UNITE = 33,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')

if includeUSP:
    f_EUSP=LIRE_FONCTION(UNITE = 34,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')
                     
    f_TDUSP=LIRE_FONCTION(UNITE = 35,
                             NOM_PARA = 'FREQ',
                             PROL_GAUCHE = 'CONSTANT',
                             PROL_DROITE = 'CONSTANT')

f_EBal=LIRE_FONCTION(UNITE = 36,
                     NOM_PARA = 'FREQ',
                     PROL_GAUCHE = 'CONSTANT',
                     PROL_DROITE = 'CONSTANT')

f_TDBal=LIRE_FONCTION(UNITE = 37,
                         NOM_PARA = 'FREQ',
                         PROL_GAUCHE = 'CONSTANT',
                         PROL_DROITE = 'CONSTANT')

# Materials frequency-independent hysteretic damping
eta_concrete = 0.016
eta_steel = 0.001

######################################################
# BOUNDARY CONDITIONS AND INTERACTIONS
######################################################

nForce10 = 'nForce10'
force10 = (0, -100000.0, 10000.0)
nForce45 = 'nForce45'
force45 = (0, -173205, -173205)

if includeUSP == True:
    tie1 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('USPtop', ),
                                           GROUP_MA_MAIT=('slpBotV', ),
                                           TYPE_RACCORD='MASSIF')),
                          MODELE=model)
                          
tie2 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('botn', ),
                                       GROUP_MA_MAIT=('slpUpad', ),
                                       TYPE_RACCORD='MASSIF')),
                      MODELE=model)
                      
tie3 = AFFE_CHAR_MECA(LIAISON_MAIL=(_F(GROUP_NO_ESCL=('topn', ),
                                       GROUP_MA_MAIT=('railBotV', ),
                                       TYPE_RACCORD='MASSIF')),
                      MODELE=model)
                                    
BCinterf=AFFE_CHAR_MECA(MODELE=model,
                        DDL_IMPO=_F(GROUP_NO=('railFt', 'railBk', slpSym), #SANS_GROUP_NO='nope','USPsym'
                                    DX=0.0,
                                    DY=0.0,
                                    DZ=0.0),);

if includeUSP == True:
    BCs = (BCinterf, tie1, tie2, tie3)
else:
    BCs = (BCinterf, tie2, tie3)
                              
load10 = AFFE_CHAR_MECA(FORCE_NODALE=_F(FX = force10[0],
                                      FY = force10[1],
                                      FZ = force10[2],
                                      GROUP_NO=(nForce10, )),
                      MODELE=model)
                      
load45 = AFFE_CHAR_MECA(FORCE_NODALE=_F(FX = force45[0],
                                      FY = force45[1],
                                      FZ = force45[2],
                                      GROUP_NO=(nForce45, )),
                      MODELE=model)

t_macroEl = 0
t_modeGe = 0
t_harmo = 0

# Loop over N bands within this frequency band => N macroelem with optimized Rayleigh damping
normMode='TRAN'

# meanFreq is the frequency at which E' is gonna be taken. Since modes are damping independent, 
# we decide to compute them (interface and eigen) only once per job. So we evaluate them with 
# E' at the middle of the whole frequency range (among all jobs). It must be so, otherwise each job
# provides a different list of modes and analyzing their contributions to the response is much harder. 
# However, the frequency range of each job can be divided in nBands bands to better model Rayleigh damping. 
# So the damping matrices are recomputed for each band, as well as the macroelement.


meanFreqGlob = (freq1+freq2)/2.0 # (allFreqs[0] + allFreqs[-1])/2
meanFreqJob = (allFreqs[0] + allFreqs[-1])/2

# to be used for damping (not stiffness, see comments above !), when Rayleigh damping is not possible 
# and viscous damping is used. Properties are taken at the middle of the band


# Materials
allFreqsNP = np.array(allFreqs)
AB_concrete = GetAlphaBeta(allFreqsNP, eta_concrete*np.ones(len(allFreqs)))
AB_steel = GetAlphaBeta(allFreqsNP, eta_steel*np.ones(len(allFreqs)))

eta_padMat1 = np.array([f_TDPad1(f) for f in allFreqs])
AB_padMat1 = GetAlphaBeta(allFreqsNP, eta_padMat1)
eta_padMat2 = np.array([f_TDPad2(f) for f in allFreqs])
AB_padMat2 = GetAlphaBeta(allFreqsNP, eta_padMat2)

if includeUSP:
    eta_USP = np.array([f_TDUSP(f) for f in allFreqs])
    AB_USP = GetAlphaBeta(allFreqsNP, eta_USP)


                        
concrRe = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_concrete[0],
                                AMOR_BETA=AB_concrete[1],
                                E=46300.0,
                                NU=0.2,
                                RHO=2.4356e-09))
                            
steel = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_steel[0],
                              AMOR_BETA=AB_steel[1],
                              E=210000.0,
                              NU=0.3,
                              RHO=7.85e-09))
                            
padMat1 = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_padMat1[0],
                                AMOR_BETA=AB_padMat1[1],
                                E=f_EPad1(meanFreqGlob),
                                NU=nuPadMat1,
                                RHO=1.0e-09))
                                
padMat2 = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_padMat2[0],
                                AMOR_BETA=AB_padMat2[1],
                                E=f_EPad2(meanFreqGlob),
                                NU=nuPadMat2,
                                RHO=1.0e-09))   
    

if includeUSP == True:
    USPmat = DEFI_MATERIAU(ELAS=_F(AMOR_ALPHA=AB_USP[0],
                                   AMOR_BETA=AB_USP[1],
                                   E=f_EUSP(meanFreqGlob), 
                                   NU=nuUSP,
                                   RHO=0.375e-09)) 

    fieldmat = AFFE_MATERIAU(AFFE=(_F(GROUP_MA=('sleeper'),
                                      MATER=(concrRe, )),
                                   _F(GROUP_MA=('hard'),
                                      MATER=(padMat1, )),
                                   _F(GROUP_MA=('soft'),
                                      MATER=(padMat2, )),
                                   _F(GROUP_MA=('USP'),
                                      MATER=(USPmat, )),
                                   _F(GROUP_MA=('rail'),
                                      MATER=(steel, ))),
                             MAILLAGE=mesh,
                             MODELE=model,)
else:
    fieldmat = AFFE_MATERIAU(AFFE=(_F(GROUP_MA=('sleeper'),
                                      MATER=(concrRe, )),
                                   _F(GROUP_MA=('hard'),
                                      MATER=(padMat1, )),
                                   _F(GROUP_MA=('soft'),
                                      MATER=(padMat2, )),
                                   _F(GROUP_MA=('rail'),
                                      MATER=(steel, ))),
                             MAILLAGE=mesh,
                             MODELE=model,)
                    
######################################################
# Compute elementary matrices & assemble (K, M and vect are independent of damping)
######################################################  
nodeStiff_Y = f_EBal(meanFreqGlob)*(coefSlpBotArea*A_slpBot)/hBal/nNodesBal
nodeStiff_XZ = f_EBal(meanFreqGlob)/2/(1+nuBal)*(coefSlpBotArea*A_slpBot)/hBal/nNodesBal
nodeAmo_Y = nodeStiff_Y*f_TDBal(meanFreqJob)/(2*pi*meanFreqJob)
nodeAmo_XZ = nodeStiff_XZ*f_TDBal(meanFreqJob)/(2*pi*meanFreqJob)

elemprop = AFFE_CARA_ELEM(DISCRET=(_F(CARA='K_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=(nodeStiff_XZ, nodeStiff_Y, nodeStiff_XZ),),
                                   _F(CARA='M_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=0),
                                   _F(CARA='A_T_D_N',
                                      GROUP_MA=(discreteBalNodes+'0D'),
                                      REPERE='GLOBAL',
                                      VALE=(nodeAmo_XZ, nodeAmo_Y, nodeAmo_XZ)),
                                      ),
                          MODELE=model)
                              
matEl_K1=CALC_MATR_ELEM(MODELE=model,
                        CHAM_MATER=fieldmat,
                        OPTION='RIGI_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
num1 = NUME_DDL(MATR_RIGI=matEl_K1)
matAs_K1 = ASSE_MATRICE(MATR_ELEM=matEl_K1, NUME_DDL=num1)

matEl_M1=CALC_MATR_ELEM(MODELE=model,
                        CHAM_MATER=fieldmat,
                        OPTION='MASS_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
matAs_M1 = ASSE_MATRICE(MATR_ELEM=matEl_M1, NUME_DDL=num1)

vectEl10=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=load10, CARA_ELEM=elemprop)
                      
vectEl45=CALC_VECT_ELEM(OPTION='CHAR_MECA',
                      CHARGE=load45, CARA_ELEM=elemprop)

vectAs10 = ASSE_VECTEUR(VECT_ELEM=vectEl10, NUME_DDL=num1)
vectAs45 = ASSE_VECTEUR(VECT_ELEM=vectEl45, NUME_DDL=num1)

matEl_A1=CALC_MATR_ELEM(MODELE=model,
                        RIGI_MECA=matEl_K1,
                        MASS_MECA=matEl_M1,
                        CHAM_MATER=fieldmat,
                        OPTION='AMOR_MECA',
                        CHARGE=BCs,
                        CARA_ELEM=elemprop)
                        
matAs_A1 = ASSE_MATRICE(MATR_ELEM=matEl_A1, NUME_DDL=num1)  

######################################################
# Compute eigen modes (once since damping-independent)
######################################################
t_modes0 = time.time()

tabModes = INFO_MODE( MATR_RIGI = matAs_K1,
                      MATR_MASS = matAs_M1,
                      FREQ = freqBands1)                              

# Build a list of frequency bands which contain roughly the same desired number of modes
temp1 = tabModes.EXTR_TABLE()
temp2 = temp1.values()
fMin = temp2['FREQ_MIN']
fMax = temp2['FREQ_MAX']
nModes = temp2['NB_MODE']

nEigen = sum(nModes)

table = []
for i in range(len(fMin)):
    table.append([fMin[i], fMax[i], nModes[i]])

nModesPerBand = 40
nTot = 0
freqBandsOpt = [table[0][0]]
# nModesList = []
cursor = 0

i = 0
while i < len(table):
    f1 = table[i][0]
    f2 = table[i][1]
    nInBand = table[i][2]
    nRemaining = table[i][2]*(1-cursor)
    
    if nTot + nRemaining < nModesPerBand:
        nTot += nRemaining
        i += 1
        cursor = 0
        continue
    else:
        cursor += (nModesPerBand - nTot)/nInBand
        fSup = f1 + (f2 - f1)*cursor
        freqBandsOpt.append(fSup)
        # nModesList.append(nModesPerBand) # supposition.. works if modal density const in the band
        nTot = 0

if freqBandsOpt[-1] < table[-1][1]:
    freqBandsOpt.append(table[-1][1])
    # nModesList.append(nTot)

print('Optimized frequency bands : ')
print(freqBandsOpt)

# Modes computed with (E, tanD) of the middle of the frequency band
modes_1=CALC_MODES(MATR_RIGI=matAs_K1,
                   CALC_FREQ=_F(FREQ=freqBandsOpt,),
                   STOP_BANDE_VIDE='NON',
                   OPTION='BANDE',
                   NORM_MODE=_F(NORME=normMode),
                   MATR_MASS=matAs_M1,
                   VERI_MODE=_F(STOP_ERREUR='NON',),)
                   

print('TIME FOR INFO_MODE + CALC_MODES     ' + str(time.time() - t_modes0))

######################################################
# Compute static interface modes (once as well (iBand==0) cause damping indep)
######################################################
t_modesSta0 = time.time()

modStaR1=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = 'railBk',
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesRails,
                                      SHIFT=10.,),);

modStaR2=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = 'railFt',
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesRails,
                                      SHIFT=10.,),);

modStaS=MODE_STATIQUE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       MODE_INTERF=_F(GROUP_NO = slpSym,
                                      TOUT_CMP='OUI',
                                      NB_MODE=nModesSleeper,
                                      SHIFT=10.,),);

                                      
print('TIME FOR INTF MODES     ' + str(time.time() - t_modesSta0))
# Normalize static modes
modStaR1 = NORM_MODE(reuse=modStaR1, MODE=modStaR1, NORME=normMode)
modStaR2 = NORM_MODE(reuse=modStaR2, MODE=modStaR2, NORME=normMode)
modStaS = NORM_MODE(reuse=modStaS, MODE=modStaS, NORME=normMode)

t_bamo0 = time.time()

# Define dynamic interfaces   
Lint=DEFI_INTERF_DYNA(NUME_DDL=num1,
                      INTERFACE=(_F(NOM = 'I_slpSym',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = slpSym),
                                 _F(NOM = 'I_raiRBk',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = 'railBk'),
                                 _F(NOM = 'I_raiRFt',
                                    TYPE = 'CRAIGB',
                                    GROUP_NO = 'railFt'),))

######################################################
# Create modal basis
######################################################
bamo1=DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA = modes_1, ),
                             _F(MODE_INTF = modStaR1, )),
                       INTERF_DYNA=Lint,
                       NUME_REF=num1)

bamo1=DEFI_BASE_MODALE(reuse=bamo1,
                       RITZ=(_F(BASE_MODALE=bamo1),
                             _F(MODE_INTF = modStaR2, )),
                       NUME_REF=num1)

bamo1=DEFI_BASE_MODALE(reuse=bamo1,
                       RITZ=(_F(BASE_MODALE=bamo1),
                             _F(MODE_INTF = modStaS, )),
                       NUME_REF=num1)

print('TIME FOR BAMO     ' + str(time.time() - t_bamo0))
    
######################################################
# Create macro element
######################################################
t_macroEl0 = time.time()

macroEl1 = MACR_ELEM_DYNA(BASE_MODALE=bamo1,
                          MATR_MASS=matAs_M1,
                          MATR_RIGI=matAs_K1,
                          MATR_AMOR=matAs_A1)
                          
print('TIME FOR MACROEL     ' + str(time.time() - t_macroEl0))
######################################################
# Macroelements coupling and generalized model creation
######################################################
t_modeGe0 = time.time()

substructs = []
liaisons = []
nSlp = 3
for i in range(nSlp):
    substR = _F(NOM = 'elem'+str(i)+'R', MACR_ELEM_DYNA = macroEl1, ANGL_NAUT = (0., 0., 0.), TRANS=(i*600,0.,0.))
    substL = _F(NOM = 'elem'+str(i)+'L', MACR_ELEM_DYNA = macroEl1, ANGL_NAUT = (0., 180., 0.), TRANS=(i*600,0.,0.))
    substructs.append(substR)
    substructs.append(substL)
    
    liais2 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'R', SOUS_STRUC_2 = 'elem'+str(i)+'L', INTERFACE_1  = 'I_slpSym', INTERFACE_2  = 'I_slpSym', OPTION='REDUIT')
    liaisons.append(liais2)
    
    if i != nSlp-1:
        liais4 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'R', SOUS_STRUC_2 = 'elem'+str(i+1)+'R', INTERFACE_1  = 'I_raiRFt', INTERFACE_2  = 'I_raiRBk', OPTION='REDUIT')
        liais6 = _F(SOUS_STRUC_1 = 'elem'+str(i)+'L', SOUS_STRUC_2 = 'elem'+str(i+1)+'L', INTERFACE_1  = 'I_raiRBk', INTERFACE_2  = 'I_raiRFt', OPTION='REDUIT')
        liaisons.append(liais4)
        liaisons.append(liais6)

modeGene=DEFI_MODELE_GENE(SOUS_STRUC=substructs, LIAISON=liaisons, VERIF=_F( STOP_ERREUR = 'OUI', PRECISION = 1.E-6, CRITERE = 'RELATIF'))
numGene=NUME_DDL_GENE(MODELE_GENE=modeGene);

######################################################
# ASSEMBLAGE DES MATRICES RAIDEUR ET MASSE GENERALISEES STATIQUES
######################################################
masGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='MASS_GENE');

rigGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='RIGI_GENE');
                                  
amoGene=ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                                  OPTION='AMOR_GENE');

vectGe10 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,CHAR_SOUS_STRUC=(_F(SOUS_STRUC = 'elem'+str(slpForce-1)+'R',VECT_ASSE = vectAs10),))        
vectGe45 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,CHAR_SOUS_STRUC=(_F(SOUS_STRUC = 'elem'+str(slpForce-1)+'R',VECT_ASSE = vectAs45),)) 

print('TIME FOR MODEGENE     ' + str(time.time() - t_modeGe0))
    
######################################################
# HARMONIC SIMULATION
######################################################
t_harmo0 = time.time()

harmGe10 = DYNA_VIBRA(BASE_CALCUL='GENE',
                      TYPE_CALCUL='HARM',
                      MATR_MASS=masGene,
                      MATR_RIGI=rigGene,
                      MATR_AMOR=amoGene,
                      FREQ=allFreqs,
                      TOUT_CHAM='OUI',
                      EXCIT=_F(VECT_ASSE_GENE=vectGe10, COEF_MULT=1.0,),
                      SOLVEUR=_F(METHODE='LDLT',
                                 RENUM='RCMK',
                                 NPREC=8,
                                 ELIM_LAGR='NON',
                                 STOP_SINGULIER='OUI',),)
                                 
harmGe45 = DYNA_VIBRA(BASE_CALCUL='GENE',
                      TYPE_CALCUL='HARM',
                      MATR_MASS=masGene,
                      MATR_RIGI=rigGene,
                      MATR_AMOR=amoGene,
                      FREQ=allFreqs,
                      TOUT_CHAM='OUI',
                      EXCIT=_F(VECT_ASSE_GENE=vectGe45, COEF_MULT=1.0,),
                      SOLVEUR=_F(METHODE='LDLT',
                                 RENUM='RCMK',
                                 NPREC=8,
                                 ELIM_LAGR='NON',
                                 STOP_SINGULIER='OUI',),)
 
print('TIME FOR HARMO     ' + str(time.time() - t_harmo0))
######################################################
# POST-PROCESSING : vect_mag (envelope of max modal vector components)
######################################################
nModesTot = nEigen + 2*nModesRails + nModesSleeper

vect_mag = [0]*nModesTot
for i in range(len(vect_mag)):
    vect_mag[i] = [0.0]*(nSlp*2)
    
for freq in allFreqs:
    dispGene = RECU_GENE(RESU_GENE=harmGe10,
                         NOM_CHAM='DEPL',
                         FREQ=freq)

    IMPR_GENE(UNITE=8, GENE=_F(RESU_GENE=dispGene))

    DETRUIRE(CONCEPT=_F(NOM=(dispGene)))

# if only 1 concept is printed to fort.8, nothing appears in it while still in the calculation (content=''). It's a bug..
if len(allFreqs) == 1:
    dispGen2 = RECU_GENE(RESU_GENE=harmGe10,
                         NOM_CHAM='DEPL',
                         FREQ=allFreqs[0])

    IMPR_GENE(UNITE=8, GENE=_F(RESU_GENE=dispGen2))
    DETRUIRE(CONCEPT=_F(NOM=(dispGen2)))

    
with open('fort.8','r') as f:
    content = f.read()
f.close()
lines = content.split('\n')

for line in lines:
    listLine = line.split(' ')
    listLine = [x.replace('D','e') for x in listLine if x]
    try:
        lineNo = int(listLine[0])
    except:
        continue
      
    # if lineNo > nModesTot:
        # continue

    modeNo = lineNo % nModesTot 
    macroElNo = (lineNo // nModesTot) % (3*nSlp) # 0 => 5
    if modeNo == 0: # True when lineNo == nModesTot
        modeNo = nModesTot
        macroElNo = macroElNo - 1
        
    modeNo = modeNo - 1 # 0 => 1409 p.ex
        
    real = float(listLine[1])
    imag = float(listLine[2])
    magn = (real**2+imag**2)**(1/2)

    print(str(lineNo) + ' ' + str(modeNo) + ' ' + str(macroElNo) + ' ' + str(magn))
        
    vect_mag[modeNo][macroElNo] = max(vect_mag[modeNo][macroElNo], magn)

vect_mag_str = []
for i in vect_mag:
    myStrList = []
    for j in i:
        myStrList.append(str(j))
    vect_mag_str.append('\t'.join(myStrList))
    
fileVectContent = '\n'.join(vect_mag_str)
fileVect=open('fort.91','w')
fileVect.write(fileVectContent)
fileVect.close()

#=====================================================

vect_mag = [0]*nModesTot
for i in range(len(vect_mag)):
    vect_mag[i] = [0.0]*(nSlp*2)
    
for freq in allFreqs:
    dispGene = RECU_GENE(RESU_GENE=harmGe45,
                         NOM_CHAM='DEPL',
                         FREQ=freq)

    IMPR_GENE(UNITE=9, GENE=_F(RESU_GENE=dispGene))
    DETRUIRE(CONCEPT=_F(NOM=(dispGene)))

# if only 1 concept is printed to fort.9, nothing appears in it while still in the calculation (content=''). It's a bug..
if len(allFreqs) == 1:
    dispGen2 = RECU_GENE(RESU_GENE=harmGe45,
                         NOM_CHAM='DEPL',
                         FREQ=allFreqs[0])

    IMPR_GENE(UNITE=9, GENE=_F(RESU_GENE=dispGen2))
    DETRUIRE(CONCEPT=_F(NOM=(dispGen2)))
    
    
with open('fort.9','r') as f:
    content = f.read()
f.close()
lines = content.split('\n')


for line in lines:
    listLine = line.split(' ')
    listLine = [x.replace('D','e') for x in listLine if x]
    try:
        lineNo = int(listLine[0])
    except:
        continue
      
    # if lineNo > nModesTot:
        # continue

    modeNo = lineNo % nModesTot 
    macroElNo = (lineNo // nModesTot) % (3*nSlp) # 0 => 5
    if modeNo == 0: # True when lineNo == nModesTot
        modeNo = nModesTot
        macroElNo = macroElNo - 1
        
    modeNo = modeNo - 1 # 0 => 1409 p.ex
        
    real = float(listLine[1])
    imag = float(listLine[2])
    magn = (real**2+imag**2)**(1/2)
        
    vect_mag[modeNo][macroElNo] = max(vect_mag[modeNo][macroElNo], magn)

vect_mag_str = []
for i in vect_mag:
    myStrList = []
    for j in i:
        myStrList.append(str(j))
    vect_mag_str.append('\t'.join(myStrList))
    
fileVectContent = '\n'.join(vect_mag_str)
fileVect=open('fort.92','w')
fileVect.write(fileVectContent)
fileVect.close()

try:
    IMPR_RESU(FORMAT='MED',
              RESU=_F(RESULTAT=modes_1),
              UNITE=82)
except:
    pass
          


 
t_fin = time.time()
print('nModesTot ' + str(nModesTot))
print('nEigen ' + str(nEigen))
print('TOTAL TIME ' + str(t_fin-t0))

fileModesContent = 'nEigen = ' + str(nEigen) + '\nnModesRails = ' + str(nModesRails) + '\nnModesSleeper = ' + str(nModesSleeper)
fileModes=open('fort.10','w')
fileModes.write(fileModesContent)
fileModes.close()

DETRUIRE(CONCEPT=_F(NOM=(matEl_A1, matAs_A1, masGene, rigGene, amoGene, vectGe10, vectGe45, elemprop)))
DETRUIRE(CONCEPT=_F(NOM=(meshSlp, meshRaiR, meshPadR, tmp2, mesh, mesh0, model, f_EBal, f_TDBal,  f_EPad1, )))
DETRUIRE(CONCEPT=_F(NOM=(f_EPad2, f_TDPad1, f_TDPad2, tie2, tie3, BCinterf, load10, load45, )))
DETRUIRE(CONCEPT=_F(NOM=(matEl_K1, concrRe, steel, padMat1, padMat2, fieldmat, tabModes, macroEl1, )))
DETRUIRE(CONCEPT=_F(NOM=(matAs_K1, matEl_M1, matAs_M1, vectEl10, vectEl45, vectAs10, vectAs45, modeGene, numGene, )))
DETRUIRE(CONCEPT=_F(NOM=(modStaR1, modStaR2, modStaS, Lint, bamo1, )))
DETRUIRE(CONCEPT=_F(NOM=(harmGe10, harmGe45, CH_id, intCH_id)))
if includeUSP == True:
    DETRUIRE(CONCEPT=_F(NOM=(meshUSP, tmp3, tie1, f_EUSP, f_TDUSP, USPmat)))

# saves only modes_1 & num1 to the base
FIN(RETASSAGE='OUI')

# ------------------------------------------------------------------------------------------

  Ouverture en écriture du fichier ./vola.1

 <INFO> Démarrage de l'exécution.
                                                                                
                                                                                
              -- CODE_ASTER -- VERSION : EXPLOITATION (stable) --               
                                                                                
                     Version 14.4.0 modifiée le 21/08/2019                      
                 révision 2708712c2a40 - branche 'v14.4_smeca'                  
                         Copyright EDF R&D 1991 - 2022                          
                                                                                
                    Exécution du : Thu Aug 25 18:58:23 2022                     
                         Nom de la machine : caelinuxVM                         
                              Architecture : 64bit                              
                          Type de processeur : x86_64                           
Système d'exploitation : Linux-4.15.0-112-generic-x86_64-with-debian-buster-sid 
                        Langue des messages : en (UTF-8)                        
                                                                                
                           Version de Python : 3.6.5                            
                           Version de NumPy : 1.15.1                            
   
   !------------------------------------------------------------------------------------!
   ! <A> <SUPERVIS2_2>                                                                  !
   !                                                                                    !
   !     Vous utilisez une vieille version de Code_Aster.                               !
   !                                                                                    !
   !     En mettant à jour votre version, vous bénéficierez des dernières améliorations !
   !     apportées au code depuis 15 mois.                                              !
   !     Si vous avez des développements privés, vous risquez d'avoir un travail        !
   !     important de portage si vous ne suivez pas les mises à jour.                   !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
                           Parallélisme MPI : inactif                           
                          Parallélisme OpenMP : actif                           
                        Nombre de processus utilisés : 1                        
                     Version de la librairie HDF5 : 1.10.3                      
                      Version de la librairie MED : 4.0.0                       
                     Version de la librairie MFront : 3.2.1                     
                     Version de la librairie MUMPS : 5.1.2                      
                        Librairie PETSc : non disponible                        
                     Version de la librairie SCOTCH : 6.0.4                     

                  Mémoire limite pour l'exécution : 8000.00 Mo                  
                   consommée par l'initialisation : 280.75 Mo                   
                  par les objets du jeu de commandes : 0.00 Mo                  
                 reste pour l'allocation dynamique : 7717.06 Mo                 
                Taille limite des fichiers d'échange : 48.00 Go                 
                                                                                

.. __stg1_txt4
  # ------------------------------------------------------------------------------------------
  # Commande No :  0001            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DEBUT(PAR_LOT='NON',
        IMPR_MACRO='NON',
        DEBUG=_F(JXVERI='NON',
                 SDVERI='NON',
                 JEVEUX='NON',
                 HIST_ETAPE='NON',),
        MESURE_TEMPS=_F(NIVE_DETAIL=1,
                        MOYENNE='NON',),
        MEMOIRE=_F(TAILLE_BLOC=800.0,
                   TAILLE_GROUP_ELEM=1000,),
        RESERVE_CPU=_F(BORNE=900,),
        INFO=1,)

   
   !---------------------------------------------------!
   ! <I> <SUPERVIS_41>                                 !
   !                                                   !
   ! La version 14.4.0 a été modifiée par 1 révisions. !
   !---------------------------------------------------!
   
   
   !------------------------------------------------------------------------------------!
   ! <A> <SUPERVIS_1>                                                                   !
   !                                                                                    !
   !  L'utilisation du mot-clé PAR_LOT='NON' permet d'accéder en lecture et en écriture !
   !  au contenu des concepts Aster. De ce fait, votre étude est exclue du périmètre    !
   !  qualifié de Code_Aster puisque toutes ses étapes ne peuvent être certifiées.      !
   !                                                                                    !
   !  Conseils :                                                                        !
   !    - Il n'y a pas particulièrement de risque de résultat faux... sauf si votre     !
   !      programmation l'introduit.                                                    !
   !    - Distinguez le calcul lui-même (qui doit sans doute passer en PAR_LOT='OUI')   !
   !      des post-traitements (qui nécessiteraient le mode PAR_LOT='NON') qui peuvent  !
   !      être réalisés en POURSUITE.                                                   !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   

  Valeur initiale du temps CPU maximum =   3600900 secondes
  Valeur du temps CPU maximum passé aux commandes =   3600000 secondes
  Réserve CPU prévue = 900 secondes

  Ouverture en écriture du fichier ./glob.1

  Ouverture en écriture du fichier ./vola.1

  Ouverture en lecture du fichier /opt/SalomeMeca/V2019_univ/tools/Code_aster_stable-v144_smeca/lib/aster/elem.1

     Nom de la base                          :  ELEMBASE
     Créée avec la version                   :  14.04.00
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %

  Ouverture en lecture du fichier /opt/SalomeMeca/V2019_univ/tools/Code_aster_stable-v144_smeca/lib/aster/elem.1


     Nom de la base                          :  ELEMBASE
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  60
     Volume des accès en lecture             :         46.88 Mo.
     Nombre total d'accès en écriture        :  0
     Volume des accès en écriture            :          0.00 Mo.
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %

  Relecture des catalogues des éléments faite.

  Fin de lecture (durée  0.030029  s.) 
  # Mémoire (Mo) :   326.59 /   318.77 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0001   user+syst:        0.03s (syst:        0.02s, elaps:        0.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt100
  # ------------------------------------------------------------------------------------------
  # Commande No :  0002            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshSlp = LIRE_MAILLAGE(FORMAT='MED',
                          UNITE=21,
                          INFO_MED=1,
                          VERI_MAIL=_F(VERIF='OUI',
                                       APLAT=1.E-3,),
                          INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshSlp  - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                        5774

NOMBRE DE MAILLES                       6879
                              QUAD4                2347
                              HEXA8                4532

NOMBRE DE GROUPES DE NOEUDS                4
                              slpBot                             540
                              Sc_Y                                13
                              slpSym                              72
                              Ss_Y                                 9

NOMBRE DE GROUPES DE MAILLES               8
                              sleeper                           4532
                              slpBotV                            480
                              slpUpad                             64
                              slpAcY                             480
                              slpAcZ                              96
                              slpSym                              56
                              slpBot                             480
                              slpAcX                            1133

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.59 /   321.41 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0002   user+syst:        0.01s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt101
  # ------------------------------------------------------------------------------------------
  # Commande No :  0004            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshRaiR = LIRE_MAILLAGE(FORMAT='MED',
                           UNITE=25,
                           INFO_MED=1,
                           VERI_MAIL=_F(VERIF='OUI',
                                        APLAT=1.E-3,),
                           INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshRaiR - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                       14357

NOMBRE DE MAILLES                       5220
                              QUAD8                2668
                              HEXA20               2552

NOMBRE DE GROUPES DE NOEUDS               10
                              railBk                             233
                              nForce45                             1
                              railFt                             233
                              nForce10                             1
                              Rb_Y                                11
                              Ra_Y                                17
                              Ra_Z                                13
                              Rb_Z                                 7
                              Rf_Y                                11
                              nMunich                              1

NOMBRE DE GROUPES DE MAILLES               6
                              rail                              2552
                              railBotV                           168
                              railBk                              58
                              railFt                              58
                              railAcZ                            572
                              railAcY                            704

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.59 /   323.06 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0004   user+syst:        0.03s (syst:        0.01s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt103
  # ------------------------------------------------------------------------------------------
  # Commande No :  0006            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = LIRE_MAILLAGE(FORMAT='MED',
                           UNITE=23,
                           INFO_MED=1,
                           VERI_MAIL=_F(VERIF='OUI',
                                        APLAT=1.E-3,),
                           INFO=1,)

Vérification du maillage.

------------ MAILLAGE meshPadR - IMPRESSIONS NIVEAU  1 ------------

JE-25-AOUT-2022 18:58:23                                                        

NOMBRE DE NOEUDS                        9828

NOMBRE DE MAILLES                      12032
                              SEG2                  336
                              QUAD4                3906
                              HEXA8                7790

NOMBRE DE GROUPES DE NOEUDS                2
                              botn                              1638
                              topn                              1638

NOMBRE DE GROUPES DE MAILLES               4
                              hard                              1558
                              top                               1558
                              bot                               1558
                              soft                              6232

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   326.59 /   325.19 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0006   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt113
  # ------------------------------------------------------------------------------------------
  # Commande No :  0008            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                           MAILLAGE=meshPadR,
                           ROTATION=_F(POIN_1=(0.0, 0.0, 0.0),
                                       ANGLE=-1.43261,
                                       POIN_2=(1000.0, 0.0, 0.0),),
                           INFO=1,)

  # Mémoire (Mo) :   326.59 /   325.19 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0008   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt117
  # ------------------------------------------------------------------------------------------
  # Commande No :  0009            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  meshPadR = MODI_MAILLAGE(reuse=meshPadR,
                           MAILLAGE=meshPadR,
                           TRANSLATION=(0.0, 214.0, 757.54),
                           INFO=1,)

  # Mémoire (Mo) :   326.59 /   325.19 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0009   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt158
  # ------------------------------------------------------------------------------------------
  # Commande No :  0010            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  tmp2 = ASSE_MAILLAGE(MAILLAGE_1=meshSlp,
                       MAILLAGE_2=meshPadR,
                       OPERATION='SUPERPOSE',)

  # Mémoire (Mo) :   327.60 /   327.60 /    44.30 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0010   user+syst:        0.04s (syst:        0.00s, elaps:        0.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt159
  # ------------------------------------------------------------------------------------------
  # Commande No :  0011            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  mesh0 = ASSE_MAILLAGE(MAILLAGE_1=tmp2,
                        MAILLAGE_2=meshRaiR,
                        OPERATION='SUPERPOSE',)

  # Mémoire (Mo) :   331.81 /   331.81 /    47.56 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0011   user+syst:        0.05s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt165
  # ------------------------------------------------------------------------------------------
  # Commande No :  0012            Concept de type : maillage_sdaster
  # ------------------------------------------------------------------------------------------
  mesh = CREA_MAILLAGE(MAILLAGE=mesh0,
                       CREA_POI1=_F(NOM_GROUP_MA=('slpBot0D', ),
                                    GROUP_NO=('slpBot', ),),
                       INFO=1,)

MOT CLE FACTEUR "CREA_POI1", OCCURRENCE    1
  CREATION DU GROUP_MA slpBot0D DE    540 MAILLES POI1

------------ MAILLAGE mesh     - IMPRESSIONS NIVEAU  1 ------------

ASTER 14.04.00 CONCEPT mesh CALCULE LE 25/08/2022 A 18:58:23 DE TYPE            
MAILLAGE_SDASTER                                                                

NOMBRE DE NOEUDS                       29959

NOMBRE DE MAILLES                      24671
                              POI1                  540
                              SEG2                  336
                              QUAD4                6253
                              QUAD8                2668
                              HEXA8               12322
                              HEXA20               2552

NOMBRE DE GROUPES DE NOEUDS               16
                              slpBot                             540
                              Sc_Y                                13
                              slpSym                              72
                              Ss_Y                                 9
                              botn                              1638
                              topn                              1638
                              railBk                             233
                              nForce45                             1
                              railFt                             233
                              nForce10                             1
                              Rb_Y                                11
                              Ra_Y                                17
                              Ra_Z                                13
                              Rb_Z                                 7
                              Rf_Y                                11
                              nMunich                              1

NOMBRE DE GROUPES DE MAILLES              19
                              sleeper                           4532
                              slpBotV                            480
                              slpUpad                             64
                              slpAcY                             480
                              slpAcZ                              96
                              slpSym                              56
                              slpBot                             480
                              slpAcX                            1133
                              hard                              1558
                              top                               1558
                              bot                               1558
                              soft                              6232
                              rail                              2552
                              railBotV                           168
                              railBk                              58
                              railFt                              58
                              railAcZ                            572
                              railAcY                            704
                              slpBot0D                           540

--------------------------------------------------------------------------------

  # Mémoire (Mo) :   337.17 /   336.20 /    52.73 /    22.92 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0012   user+syst:        0.07s (syst:        0.01s, elaps:        0.07s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt173
  # ------------------------------------------------------------------------------------------
  # Commande No :  0013            Concept de type : modele_sdaster
  # ------------------------------------------------------------------------------------------
  model = AFFE_MODELE(MAILLAGE=mesh,
                      AFFE=(_F(TOUT='OUI',
                               PHENOMENE='MECANIQUE',
                               MODELISATION=('3D', ),),
                            _F(GROUP_MA=('slpBot0D', ),
                               PHENOMENE='MECANIQUE',
                               MODELISATION=('DIS_T', ),),
                            ),
                      INFO=1,
                      DISTRIBUTION=_F(PARTITIONNEUR='METIS',
                                      METHODE='SOUS_DOMAINE',),
                      VERI_JACOBIEN='OUI',)


Sur les 24671 mailles du maillage mesh, on a demandé l'affectation de 24671, on a pu en affecter 24671
 Modélisation     Type maille  Élément fini     Nombre
                  SEG2         MECA_ARETE2      336
 DIS_T            POI1         MECA_DIS_T_N     540
                  QUAD4        MECA_FACE4       6253
                  QUAD8        MECA_FACE8       2668
 3D               HEXA20       MECA_HEXA20      2552
 3D               HEXA8        MECA_HEXA8       12322
#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.02      0.00      0.02
  # Mémoire (Mo) :   372.03 /   370.90 /    55.01 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0013   user+syst:        0.04s (syst:        0.01s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt179
  # ------------------------------------------------------------------------------------------
  # Commande No :  0014            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  CH_id = CREA_CHAMP(TYPE_CHAM='NOEU_NEUT_R',
                     OPERATION='AFFE',
                     MAILLAGE=mesh,
                     AFFE=_F(GROUP_MA=('slpBot', ),
                             NOM_CMP=('X1', ),
                             VALE=(1.0, ),),
                     INFO=1,)

  # Mémoire (Mo) :   372.03 /   371.59 /    55.01 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0014   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt185
  # ------------------------------------------------------------------------------------------
  # Commande No :  0015            Concept de type : table_sdaster
  # ------------------------------------------------------------------------------------------
  intCH_id = POST_ELEM(INTEGRALE=_F(GROUP_MA=('slpBot', ),
                                    NOM_CMP=('X1', ),
                                    TYPE_MAILLE='2D',),
                       MODELE=model,
                       CHAM_GD=CH_id,
                       PRECISION=1.E-06,
                       CRITERE='RELATIF',
                       INFO=1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.01      0.00      0.00
  # Mémoire (Mo) :   378.98 /   371.80 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0015   user+syst:        0.01s (syst:        0.00s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt206
  # ------------------------------------------------------------------------------------------
  # Commande No :  0016            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EPad1 = LIRE_FONCTION(UNITE=30,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.64 /   391.18 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0016   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt211
  # ------------------------------------------------------------------------------------------
  # Commande No :  0020            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDPad1 = LIRE_FONCTION(UNITE=31,
                           NOM_PARA='FREQ',
                           PROL_DROITE='CONSTANT',
                           PROL_GAUCHE='CONSTANT',
                           INDIC_RESU=(1, 2),
                           FORMAT='LIBRE',
                           TYPE='FONCTION',
                           SEPAR='None',
                           INDIC_PARA=(1, 1),
                           NOM_RESU='TOUTRESU',
                           INTERPOL=('LIN', ),
                           VERIF='CROISSANT',
                           INFO=1,)

  # Mémoire (Mo) :   392.64 /   391.18 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0020   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt217
  # ------------------------------------------------------------------------------------------
  # Commande No :  0024            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EPad2 = LIRE_FONCTION(UNITE=32,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.64 /   391.18 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0024   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt222
  # ------------------------------------------------------------------------------------------
  # Commande No :  0028            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDPad2 = LIRE_FONCTION(UNITE=33,
                           NOM_PARA='FREQ',
                           PROL_DROITE='CONSTANT',
                           PROL_GAUCHE='CONSTANT',
                           INDIC_RESU=(1, 2),
                           FORMAT='LIBRE',
                           TYPE='FONCTION',
                           SEPAR='None',
                           INDIC_PARA=(1, 1),
                           NOM_RESU='TOUTRESU',
                           INTERPOL=('LIN', ),
                           VERIF='CROISSANT',
                           INFO=1,)

  # Mémoire (Mo) :   392.64 /   391.18 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0028   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt238
  # ------------------------------------------------------------------------------------------
  # Commande No :  0032            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_EBal = LIRE_FONCTION(UNITE=36,
                         NOM_PARA='FREQ',
                         PROL_DROITE='CONSTANT',
                         PROL_GAUCHE='CONSTANT',
                         INDIC_RESU=(1, 2),
                         FORMAT='LIBRE',
                         TYPE='FONCTION',
                         SEPAR='None',
                         INDIC_PARA=(1, 1),
                         NOM_RESU='TOUTRESU',
                         INTERPOL=('LIN', ),
                         VERIF='CROISSANT',
                         INFO=1,)

  # Mémoire (Mo) :   392.64 /   391.18 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0032   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt243
  # ------------------------------------------------------------------------------------------
  # Commande No :  0036            Concept de type : fonction_sdaster
  # ------------------------------------------------------------------------------------------
  f_TDBal = LIRE_FONCTION(UNITE=37,
                          NOM_PARA='FREQ',
                          PROL_DROITE='CONSTANT',
                          PROL_GAUCHE='CONSTANT',
                          INDIC_RESU=(1, 2),
                          FORMAT='LIBRE',
                          TYPE='FONCTION',
                          SEPAR='None',
                          INDIC_PARA=(1, 1),
                          NOM_RESU='TOUTRESU',
                          INTERPOL=('LIN', ),
                          VERIF='CROISSANT',
                          INFO=1,)

  # Mémoire (Mo) :   392.64 /   391.18 /    61.94 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0036   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt267
  # ------------------------------------------------------------------------------------------
  # Commande No :  0040            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  tie2 = AFFE_CHAR_MECA(MODELE=model,
                        LIAISON_MAIL=_F(GROUP_MA_MAIT=('slpUpad', ),
                                        GROUP_NO_ESCL=('botn', ),
                                        TYPE_RACCORD='MASSIF',
                                        ELIM_MULT='NON',),
                        VERI_NORM='OUI',
                        DOUBLE_LAGRANGE='OUI',
                        INFO=1,)

  # Mémoire (Mo) :   400.72 /   400.72 /    70.33 /    38.58 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0040   user+syst:        0.12s (syst:        0.00s, elaps:        0.12s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt272
  # ------------------------------------------------------------------------------------------
  # Commande No :  0041            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  tie3 = AFFE_CHAR_MECA(MODELE=model,
                        LIAISON_MAIL=_F(GROUP_MA_MAIT=('railBotV', ),
                                        GROUP_NO_ESCL=('topn', ),
                                        TYPE_RACCORD='MASSIF',
                                        ELIM_MULT='NON',),
                        VERI_NORM='OUI',
                        DOUBLE_LAGRANGE='OUI',
                        INFO=1,)

  # Mémoire (Mo) :   436.71 /   430.96 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0041   user+syst:        0.30s (syst:        0.02s, elaps:        0.31s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt278
  # ------------------------------------------------------------------------------------------
  # Commande No :  0042            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  BCinterf = AFFE_CHAR_MECA(MODELE=model,
                            DDL_IMPO=_F(GROUP_NO=('railFt', 'railBk', 'slpSym'),
                                        DX=0.0,
                                        DY=0.0,
                                        DZ=0.0,),
                            VERI_NORM='OUI',
                            DOUBLE_LAGRANGE='OUI',
                            INFO=1,)

  # Mémoire (Mo) :   436.71 /   432.11 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0042   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt289
  # ------------------------------------------------------------------------------------------
  # Commande No :  0043            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  load10 = AFFE_CHAR_MECA(MODELE=model,
                          FORCE_NODALE=_F(GROUP_NO=('nForce10', ),
                                          FX=0,
                                          FY=-1.E5,
                                          FZ=1.E4,),
                          VERI_NORM='OUI',
                          DOUBLE_LAGRANGE='OUI',
                          INFO=1,)

  # Mémoire (Mo) :   436.71 /   433.25 /   105.33 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0043   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt295
  # ------------------------------------------------------------------------------------------
  # Commande No :  0044            Concept de type : char_meca
  # ------------------------------------------------------------------------------------------
  load45 = AFFE_CHAR_MECA(MODELE=model,
                          FORCE_NODALE=_F(GROUP_NO=('nForce45', ),
                                          FX=0,
                                          FY=-173205,
                                          FZ=-173205,),
                          VERI_NORM='OUI',
                          DOUBLE_LAGRANGE='OUI',
                          INFO=1,)

  # Mémoire (Mo) :   436.71 /   434.40 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0044   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt339
  # ------------------------------------------------------------------------------------------
  # Commande No :  0045            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  concrRe = DEFI_MATERIAU(ELAS=_F(E=4.6300E4,
                                  NU=0.2,
                                  RHO=2.4356E-09,
                                  AMOR_ALPHA=4.774648292756885E-06,
                                  AMOR_BETA=49.63716392671847,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.71 /   434.40 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0045   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt345
  # ------------------------------------------------------------------------------------------
  # Commande No :  0046            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  steel = DEFI_MATERIAU(ELAS=_F(E=2.10000E5,
                                NU=0.3,
                                RHO=7.85E-09,
                                AMOR_ALPHA=2.984155182973053E-07,
                                AMOR_BETA=3.1023227454199045,
                                COEF_AMOR=1.0,),
                        INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.71 /   434.40 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0046   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt351
  # ------------------------------------------------------------------------------------------
  # Commande No :  0047            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  padMat1 = DEFI_MATERIAU(ELAS=_F(E=151.3306,
                                  NU=0.48,
                                  RHO=1.E-09,
                                  AMOR_ALPHA=4.75167674362318E-05,
                                  AMOR_BETA=493.983520854923,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.71 /   434.40 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0047   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt357
  # ------------------------------------------------------------------------------------------
  # Commande No :  0048            Concept de type : mater_sdaster
  # ------------------------------------------------------------------------------------------
  padMat2 = DEFI_MATERIAU(ELAS=_F(E=151.3306,
                                  NU=0.48,
                                  RHO=1.E-09,
                                  AMOR_ALPHA=4.75167674362318E-05,
                                  AMOR_BETA=493.983520854923,
                                  COEF_AMOR=1.0,),
                          INFO=1,)

Propriétés définies dans le matériau: ELAS.
  # Mémoire (Mo) :   436.71 /   434.40 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0048   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt389
  # ------------------------------------------------------------------------------------------
  # Commande No :  0049            Concept de type : cham_mater
  # ------------------------------------------------------------------------------------------
  fieldmat = AFFE_MATERIAU(MAILLAGE=mesh,
                           MODELE=model,
                           AFFE=(_F(GROUP_MA=('sleeper', ),
                                    MATER=(concrRe, ),),
                                 _F(GROUP_MA=('hard', ),
                                    MATER=(padMat1, ),),
                                 _F(GROUP_MA=('soft', ),
                                    MATER=(padMat2, ),),
                                 _F(GROUP_MA=('rail', ),
                                    MATER=(steel, ),),
                                 ),
                           INFO=1,)

  # Mémoire (Mo) :   436.71 /   434.40 /   105.44 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0049   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt412
  # ------------------------------------------------------------------------------------------
  # Commande No :  0050            Concept de type : cara_elem
  # ------------------------------------------------------------------------------------------
  elemprop = AFFE_CARA_ELEM(MODELE=model,
                            DISCRET=(_F(REPERE='GLOBAL',
                                        CARA='K_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=(2.6203704283304667E5, 5.764814942327027E5, 2.6203704283304667E5),
                                        SYME='OUI',),
                                     _F(REPERE='GLOBAL',
                                        CARA='M_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=0,
                                        SYME='OUI',),
                                     _F(REPERE='GLOBAL',
                                        CARA='A_T_D_N',
                                        GROUP_MA=('slpBot0D', ),
                                        VALE=(142.83788044221265, 314.24333697286784, 142.83788044221265),
                                        SYME='OUI',),
                                     ),
                            INFO=1,)


     LE MODELE model    CONTIENT : 
                                      540 ELEMENT(S) DISCRET         
                                    14874 ELEMENT(S) MASSIF          
#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   440.87 /   438.68 /   110.49 /    47.37 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0050   user+syst:        0.12s (syst:        0.01s, elaps:        0.12s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt418
  # ------------------------------------------------------------------------------------------
  # Commande No :  0052            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_K1 = CALC_MATR_ELEM(OPTION='RIGI_MECA',
                            MODELE=model,
                            CHAM_MATER=fieldmat,
                            CARA_ELEM=elemprop,
                            CHARGE=(BCinterf, tie2, tie3),
                            MODE_FOURIER=0,
                            CALC_ELEM_MODELE='OUI',
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.37      0.03      0.39
  # Mémoire (Mo) :   515.88 /   509.32 /   185.71 /    65.52 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0052   user+syst:        0.38s (syst:        0.03s, elaps:        0.38s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt420
  # ------------------------------------------------------------------------------------------
  # Commande No :  0053            Concept de type : nume_ddl_sdaster
  # ------------------------------------------------------------------------------------------
  num1 = NUME_DDL(MATR_RIGI=(matEl_K1, ),)

  Le système linéaire à résoudre a 112761 degrés de liberté:
   - 89877 sont des degrés de liberté physiques
     (ils sont portés par 29959 noeuds du maillage)
   - 22884 sont les couples de paramètres de Lagrange associés
     aux 11442 relations linéaires dualisées.
  La matrice est de taille 112761 équations.
  Elle contient 5537580 termes non nuls si elle est symétrique et 10962399 termes non nuls si elle n'est pas symétrique.
  Soit un taux de remplissage de   0.086 %.
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.89      0.20      0.93
  # Mémoire (Mo) :   667.75 /   537.58 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0053   user+syst:        0.89s (syst:        0.20s, elaps:        0.93s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt421
  # ------------------------------------------------------------------------------------------
  # Commande No :  0054            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_K1 = ASSE_MATRICE(MATR_ELEM=matEl_K1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.27      0.01      0.28
  # Mémoire (Mo) :   667.75 /   584.55 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0054   user+syst:        0.27s (syst:        0.01s, elaps:        0.28s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt427
  # ------------------------------------------------------------------------------------------
  # Commande No :  0055            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_M1 = CALC_MATR_ELEM(OPTION='MASS_MECA',
                            MODELE=model,
                            CHAM_MATER=fieldmat,
                            CARA_ELEM=elemprop,
                            CHARGE=(BCinterf, tie2, tie3),
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.13      0.02      0.13
  # Mémoire (Mo) :   667.75 /   648.45 /   336.91 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0055   user+syst:        0.13s (syst:        0.02s, elaps:        0.13s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt429
  # ------------------------------------------------------------------------------------------
  # Commande No :  0056            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_M1 = ASSE_MATRICE(MATR_ELEM=matEl_M1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.21      0.01      0.22
  # Mémoire (Mo) :   690.70 /   690.70 /   356.09 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0056   user+syst:        0.21s (syst:        0.01s, elaps:        0.22s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt432
  # ------------------------------------------------------------------------------------------
  # Commande No :  0057            Concept de type : vect_elem_depl_r
  # ------------------------------------------------------------------------------------------
  vectEl10 = CALC_VECT_ELEM(OPTION='CHAR_MECA',
                            CHARGE=(load10, ),
                            CARA_ELEM=elemprop,
                            INST=0.0,
                            MODE_FOURIER=0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   690.70 /   690.70 /   356.20 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0057   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt435
  # ------------------------------------------------------------------------------------------
  # Commande No :  0058            Concept de type : vect_elem_depl_r
  # ------------------------------------------------------------------------------------------
  vectEl45 = CALC_VECT_ELEM(OPTION='CHAR_MECA',
                            CHARGE=(load45, ),
                            CARA_ELEM=elemprop,
                            INST=0.0,
                            MODE_FOURIER=0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   690.70 /   690.70 /   356.20 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0058   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt437
  # ------------------------------------------------------------------------------------------
  # Commande No :  0059            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  vectAs10 = ASSE_VECTEUR(VECT_ELEM=(vectEl10, ),
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   691.56 /   691.56 /   356.84 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0059   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt438
  # ------------------------------------------------------------------------------------------
  # Commande No :  0060            Concept de type : cham_no_sdaster
  # ------------------------------------------------------------------------------------------
  vectAs45 = ASSE_VECTEUR(VECT_ELEM=(vectEl45, ),
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
  # Mémoire (Mo) :   692.42 /   692.42 /   357.70 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0060   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt446
  # ------------------------------------------------------------------------------------------
  # Commande No :  0061            Concept de type : matr_elem_depl_r
  # ------------------------------------------------------------------------------------------
  matEl_A1 = CALC_MATR_ELEM(OPTION='AMOR_MECA',
                            MODELE=model,
                            CARA_ELEM=elemprop,
                            CHAM_MATER=fieldmat,
                            RIGI_MECA=matEl_K1,
                            MASS_MECA=matEl_M1,
                            CHARGE=(BCinterf, tie2, tie3),
                            INST=0.0,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.13      0.03      0.13
  # Mémoire (Mo) :   796.43 /   756.31 /   462.07 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0061   user+syst:        0.14s (syst:        0.04s, elaps:        0.13s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt448
  # ------------------------------------------------------------------------------------------
  # Commande No :  0062            Concept de type : matr_asse_depl_r
  # ------------------------------------------------------------------------------------------
  matAs_A1 = ASSE_MATRICE(MATR_ELEM=matEl_A1,
                          NUME_DDL=num1,)

#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.20      0.01      0.21
  # Mémoire (Mo) :   798.56 /   798.56 /   463.93 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0062   user+syst:        0.21s (syst:        0.01s, elaps:        0.21s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt457
  # ------------------------------------------------------------------------------------------
  # Commande No :  0063            Concept de type : table_sdaster
  # ------------------------------------------------------------------------------------------
  tabModes = INFO_MODE(MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       FREQ=(0, 1000, 2000),
                       COMPTAGE=_F(METHODE='AUTO',
                                   SEUIL_FREQ=1.E-2,
                                   PREC_SHIFT=0.05,
                                   NMAX_ITER_SHIFT=3,),
                       TYPE_MODE='DYNAMIQUE',
                       INFO=1,
                       SOLVEUR=_F(RENUM='AUTO',
                                  NPREC=8,
                                  ELIM_LAGR='LAGR2',
                                  TYPE_RESOL='AUTO',
                                  ACCELERATION='AUTO',
                                  LOW_RANK_SEUIL=0.0,
                                  PRETRAITEMENTS='AUTO',
                                  PCENT_PIVOT=20,
                                  GESTION_MEMOIRE='AUTO',
                                  METHODE='MUMPS',),
                       NIVEAU_PARALLELISME='COMPLET',
                       )


 Opérateur INFO_MODE + COMPTAGE/METHODE='AUTO'.
 Compte-tenu des propriétés des matrices fournies (nombre, type, symétrie), on a choisi pour vous la
 méthode de comptage: STURM.
  Le nombre total de DDL est       :     112761
  Le nombre de DDL de Lagrange est :      22884
  Le nombre de DDL actifs est      :      78435
------------------------------------------------------------------------

  Vérification du spectre de fréquences (Méthode de Sturm)

  Il n'y a pas de fréquence dans la bande numéro 1 de bornes ( 0.000E+00 , 1.000E+03 )
------------------------------------------------------------------------

  Nombre de fréquences dans la bande numéro 2 de bornes ( 1.000E+03 , 2.000E+03 ) : 2
------------------------------------------------------------------------

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     47.70      1.18     48.08
  # Mémoire (Mo) :  1601.39 /   773.22 /   529.76 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0063   user+syst:       47.93s (syst:        1.26s, elaps:       48.31s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt511
  # ------------------------------------------------------------------------------------------
  # Commande No :  0064            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modes_1 = CALC_MODES(OPTION='BANDE',
                       STOP_BANDE_VIDE='NON',
                       SOLVEUR_MODAL=_F(PREC_SOREN=0.0,
                                        NMAX_ITER_SOREN=20,
                                        PARA_ORTHO_SOREN=0.717,
                                        METHODE='SORENSEN',
                                        APPROCHE='REEL',),
                       MATR_RIGI=matAs_K1,
                       MATR_MASS=matAs_M1,
                       CALC_FREQ=_F(FREQ=(0.0, 2000.0),
                                    NMAX_ITER_SHIFT=3,
                                    PREC_SHIFT=0.05,
                                    SEUIL_FREQ=1.E-2,),
                       NORM_MODE=_F(NORME='TRAN',
                                    INFO=1,),
                       SOLVEUR=_F(RENUM='AUTO',
                                  NPREC=8,
                                  ELIM_LAGR='LAGR2',
                                  TYPE_RESOL='AUTO',
                                  ACCELERATION='AUTO',
                                  LOW_RANK_SEUIL=0.0,
                                  PRETRAITEMENTS='AUTO',
                                  POSTTRAITEMENTS='AUTO',
                                  PCENT_PIVOT=20,
                                  RESI_RELA=-1.0,
                                  GESTION_MEMOIRE='AUTO',
                                  METHODE='MUMPS',),
                       VERI_MODE=_F(STOP_ERREUR='NON',
                                    SEUIL=1.E-06,
                                    PREC_SHIFT=5.E-3,
                                    STURM='GLOBAL',),
                       TYPE_RESU='DYNAMIQUE',
                       AMELIORATION='NON',
                       INFO=1,)

  Le nombre total de DDL est       :     112761
  Le nombre de DDL de Lagrange est :      22884
  Le nombre de DDL actifs est      :      78435
  L'option choisie est : BANDE
------------------------------------------------------------------------

  Vérification du spectre de fréquences (Méthode de Sturm)

  Nombre de fréquences propres inférieures à  2.000E+03 Hz : 2
------------------------------------------------------------------------

  La valeur minimale en fréquence est :  0.00000E+00
  La valeur maximale en fréquence est :  2.00000E+03
  La valeur de décalage en fréquence est :  1.41421E+03
------------------------------------------------------------------------

      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 2

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 5


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     5
     Nombre de produits OP*X                    =    18
     Nombre de produits B*X                     =    56
     Nombre de réorthogonalisations  (étape 1)  =    17
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure :  1.02200E+03
      Fréquence supérieure :  1.67293E+03

------------------------------------------------------------------------
     Calcul modal : Méthode d'itération simultanée
                    Méthode de Sorensen

numéro    fréquence (HZ)     norme d'erreur
    1       1.02200E+03        1.11493E-10
    2       1.67293E+03        1.34716E-10

  Norme d'erreur moyenne   :  1.23104E-10
------------------------------------------------------------------------

         Vérification à posteriori des modes

  Dans l'intervalle ( 1.01944E+03 , 1.67711E+03 ) il y a bien 2 fréquence(s).
------------------------------------------------------------------------

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     84.84      1.29     84.91
 Normalisation des modes : modes_1


 NUME_ORDRE             ancienne norme              nouvelle norme
     1                  SANS_CMP: LAGR                        TRAN
     2                  SANS_CMP: LAGR                        TRAN
  # Mémoire (Mo) :  3973.40 /   799.53 /   534.95 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0064   user+syst:       85.98s (syst:        1.45s, elaps:       86.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt526
  # ------------------------------------------------------------------------------------------
  # Commande No :  0070            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR1 = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                           MATR_MASS=matAs_M1,
                           MODE_INTERF=_F(GROUP_NO=('railBk', ),
                                          TOUT_CMP='OUI',
                                          NB_MODE=20,
                                          SHIFT=10.0,),
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='OUI',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=1.E-06,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :       1398
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :       1398
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     1
     Nombre de produits OP*X                    =    79
     Nombre de produits B*X                     =   234
     Nombre de réorthogonalisations  (étape 1)  =    77
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  1.56811E+04

------------------------------------------------------------------------
         1          279.33
         2          633.72
         3          822.81
         4         1684.83
         5         2090.81
         6         2409.19
         7         3423.56
         8         4266.01
         9         5327.89
        10         6024.71
        11        10440.57
        12        11344.57
        13        15026.66
        14        17105.29
        15        19103.10
        16        24346.77
        17        29701.36
        18        30921.17
        19        39854.58
        20        39956.51
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.47      0.37     17.55
  # Mémoire (Mo) :  4115.22 /   821.18 /   618.96 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0070   user+syst:       18.97s (syst:        0.45s, elaps:       19.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt533
  # ------------------------------------------------------------------------------------------
  # Commande No :  0071            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR2 = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                           MATR_MASS=matAs_M1,
                           MODE_INTERF=_F(GROUP_NO=('railFt', ),
                                          TOUT_CMP='OUI',
                                          NB_MODE=20,
                                          SHIFT=10.0,),
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='OUI',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=1.E-06,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :       1398
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :       1398
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     1
     Nombre de produits OP*X                    =    79
     Nombre de produits B*X                     =   235
     Nombre de réorthogonalisations  (étape 1)  =    78
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  1.56811E+04

------------------------------------------------------------------------
         1          279.33
         2          633.72
         3          822.81
         4         1684.83
         5         2090.81
         6         2409.19
         7         3423.56
         8         4266.00
         9         5327.89
        10         6024.71
        11        10440.57
        12        11344.57
        13        15026.66
        14        17105.29
        15        19103.10
        16        24346.77
        17        29701.36
        18        30921.17
        19        39854.58
        20        39956.51
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.48      0.40     17.50
  # Mémoire (Mo) :  4132.75 /   838.28 /   636.27 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0071   user+syst:       18.96s (syst:        0.49s, elaps:       19.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt540
  # ------------------------------------------------------------------------------------------
  # Commande No :  0072            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaS = MODE_STATIQUE(MATR_RIGI=matAs_K1,
                          MATR_MASS=matAs_M1,
                          MODE_INTERF=_F(GROUP_NO=('slpSym', ),
                                         TOUT_CMP='OUI',
                                         NB_MODE=20,
                                         SHIFT=10.0,),
                          SOLVEUR=_F(RENUM='AUTO',
                                     NPREC=8,
                                     ELIM_LAGR='LAGR2',
                                     STOP_SINGULIER='OUI',
                                     TYPE_RESOL='AUTO',
                                     ACCELERATION='AUTO',
                                     LOW_RANK_SEUIL=0.0,
                                     PRETRAITEMENTS='AUTO',
                                     POSTTRAITEMENTS='AUTO',
                                     PCENT_PIVOT=20,
                                     RESI_RELA=1.E-06,
                                     GESTION_MEMOIRE='AUTO',
                                     METHODE='MUMPS',),
                          INFO=1,)

 ------------------------------------------------------------------------
  VOUS AVEZ DEMANDE                   20  MODES
  LA TAILE DU SOUS ESPACE RETENU EST                   34
 ------------------------------------------------------------------------
  Le nombre total de DDL est       :        432
  Le nombre de DDL de Lagrange est :          0
  Le nombre de DDL actifs est      :        432
  L'option choisie est : PLUS_PETITE
  La valeur de décalage en fréquence est :  0.00000E+00
------------------------------------------------------------------------


  39 charges critiques  dans l'intervalle demandé
      Informations sur le calcul demandé:

  Nombre de modes recherchés  : 39

  La dimension de l'espace réduit est : 0
  Elle est inférieure au nombre de modes, on la prend égale à : 78


     =============================================
     =       Méthode de Sorensen (code ARPACK)   =
     =       Version :  2.4                      =
     =          Date :  07/31/96                 =
     =============================================

     Nombre de redémarrages                     =     2
     Nombre de produits OP*X                    =    99
     Nombre de produits B*X                     =   294
     Nombre de réorthogonalisations  (étape 1)  =    96
     Nombre de réorthogonalisations  (étape 2)  =     0
     Nombre de redémarrages du a un V0 nul      =     0

------------------------------------------------------------------------
  Les fréquences calculées sont comprises entre :
      Fréquence inférieure : -1.00000E+01
      Fréquence supérieure :  5.63415E+04

------------------------------------------------------------------------
         1         3207.99
         2         3878.80
         3         6221.83
         4         7214.71
         5         9853.90
         6        10728.75
         7        12423.84
         8        13314.49
         9        15766.15
        10        17899.83
        11        19297.67
        12        22093.40
        13        23082.11
        14        24417.19
        15        27129.31
        16        30004.28
        17        31009.97
        18        32149.03
        19        34108.18
        20        37830.07
#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):     17.84      0.41     17.88
  # Mémoire (Mo) :  4147.61 /   856.79 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0072   user+syst:       19.26s (syst:        0.52s, elaps:       19.31s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt545
  # ------------------------------------------------------------------------------------------
  # Commande No :  0073            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR1 = NORM_MODE(reuse=modStaR1,
                       MODE=modStaR1,
                       NORME='TRAN',
                       INFO=1,)

   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR1) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le       !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il   !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR1) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le          !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il      !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaR1


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.61 /   856.79 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0073   user+syst:        0.94s (syst:        0.02s, elaps:        0.95s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt546
  # ------------------------------------------------------------------------------------------
  # Commande No :  0074            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaR2 = NORM_MODE(reuse=modStaR2,
                       MODE=modStaR2,
                       NORME='TRAN',
                       INFO=1,)

   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR2) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le       !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il   !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
   
   !-------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                    !
   !                                                                                     !
   !  La base modale à normer (modStaR2) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.              !
   !                                                                                     !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les         !
   !  matrices de rigidité et de masse sont nécessaires.                                 !
   !                                                                                     !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le          !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.           !
   !                                                                                     !
   !  Conseil :                                                                          !
   !                                                                                     !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il      !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice.  !
   !                                                                                     !
   !                                                                                     !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                      !
   ! alarme, vous pouvez obtenir des résultats inattendus !                              !
   !-------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaR2


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.61 /   856.79 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0074   user+syst:        0.96s (syst:        0.03s, elaps:        0.95s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt547
  # ------------------------------------------------------------------------------------------
  # Commande No :  0075            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  modStaS = NORM_MODE(reuse=modStaS,
                      MODE=modStaS,
                      NORME='TRAN',
                      INFO=1,)

   
   !------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                   !
   !                                                                                    !
   !  La base modale à normer (modStaS) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.             !
   !                                                                                    !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les        !
   !  matrices de rigidité et de masse sont nécessaires.                                !
   !                                                                                    !
   !  À défaut de trouver l'information exacte pour la matrice de rigidité sous le      !
   !  mot-clé RAIDE, on utilisera la matrice matAs_K1 référencée dans la base.          !
   !                                                                                    !
   !  Conseil :                                                                         !
   !                                                                                    !
   !  Si la matrice matAs_K1 ne correspond pas à la matrice de rigidité du système. Il  !
   !  faudra renseigner le mot-clé RAIDE pour forcer l'utilisation de la bonne matrice. !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
   
   !------------------------------------------------------------------------------------!
   ! <A> <ALGELINE_1>                                                                   !
   !                                                                                    !
   !  La base modale à normer (modStaS) est soit composée, soit issue d'une restitution !
   !  sur base physique d'une autre base, mais en coordonnées généralisées.             !
   !                                                                                    !
   !  Pour pouvoir mettre à jour les paramètres modaux, des informations sur les        !
   !  matrices de rigidité et de masse sont nécessaires.                                !
   !                                                                                    !
   !  À défaut de trouver l'information exacte pour la matrice de masse sous le         !
   !  mot-clé MASSE, on utilisera la matrice matAs_M1 référencée dans la base.          !
   !                                                                                    !
   !  Conseil :                                                                         !
   !                                                                                    !
   !  Si la matrice matAs_M1 ne correspond pas à la matrice de masse du système. Il     !
   !  faudra renseigner le mot-clé MASSE pour forcer l'utilisation de la bonne matrice. !
   !                                                                                    !
   !                                                                                    !
   ! Ceci est une alarme. Si vous ne comprenez pas le sens de cette                     !
   ! alarme, vous pouvez obtenir des résultats inattendus !                             !
   !------------------------------------------------------------------------------------!
   
 Normalisation des modes : modStaS


 NUME_ORDRE                    norme
     1                            TRAN
     2                            TRAN
     3                            TRAN
     4                            TRAN
     5                            TRAN
     6                            TRAN
     7                            TRAN
     8                            TRAN
     9                            TRAN
    10                            TRAN
    11                            TRAN
    12                            TRAN
    13                            TRAN
    14                            TRAN
    15                            TRAN
    16                            TRAN
    17                            TRAN
    18                            TRAN
    19                            TRAN
    20                            TRAN
  Le nombre total de DDL est               :     112761
  Le nombre de DDL de Lagrange est         :     112761
  Le nombre de DDL bloqués cinématiquement :     112761
  Le nombre de DDL actifs est              :     112761
  # Mémoire (Mo) :  4147.61 /   856.79 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0075   user+syst:        0.95s (syst:        0.03s, elaps:        0.96s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt561
  # ------------------------------------------------------------------------------------------
  # Commande No :  0076            Concept de type : interf_dyna_clas
  # ------------------------------------------------------------------------------------------
  Lint = DEFI_INTERF_DYNA(NUME_DDL=num1,
                          INTERFACE=(_F(NOM='I_slpSym',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('slpSym', ),),
                                     _F(NOM='I_raiRBk',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('railBk', ),),
                                     _F(NOM='I_raiRFt',
                                        TYPE='CRAIGB',
                                        GROUP_NO=('railFt', ),),
                                     ),
                          FREQ=1.0,
                          INFO=1,)

  # Mémoire (Mo) :  4147.61 /   856.79 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0076   user+syst:        0.06s (syst:        0.00s, elaps:        0.07s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt569
  # ------------------------------------------------------------------------------------------
  # Commande No :  0077            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(RITZ=(_F(MODE_MECA=(modes_1, ),),
                                 _F(MODE_INTF=modStaR1,),
                                 ),
                           INTERF_DYNA=Lint,
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)


 MODE_MECA : modes_1
 Nombre de modes propres calculés insuffisant
 par rapport au nombre demandé sous NMAX_MODE (9999).
 Nombre de modes propres limité à : 2.
  # Mémoire (Mo) :  4147.61 /   879.46 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0077   user+syst:        0.04s (syst:        0.01s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt574
  # ------------------------------------------------------------------------------------------
  # Commande No :  0078            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(reuse=bamo1,
                           RITZ=(_F(BASE_MODALE=bamo1,),
                                 _F(MODE_INTF=modStaR2,),
                                 ),
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   896.73 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0078   user+syst:        0.05s (syst:        0.01s, elaps:        0.05s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt579
  # ------------------------------------------------------------------------------------------
  # Commande No :  0079            Concept de type : mode_meca
  # ------------------------------------------------------------------------------------------
  bamo1 = DEFI_BASE_MODALE(reuse=bamo1,
                           RITZ=(_F(BASE_MODALE=bamo1,),
                                 _F(MODE_INTF=modStaS,),
                                 ),
                           NUME_REF=num1,
                           ORTHO='NON',
                           SOLVEUR=_F(RENUM='AUTO',
                                      NPREC=8,
                                      ELIM_LAGR='LAGR2',
                                      STOP_SINGULIER='NON',
                                      TYPE_RESOL='AUTO',
                                      ACCELERATION='AUTO',
                                      LOW_RANK_SEUIL=0.0,
                                      PRETRAITEMENTS='AUTO',
                                      POSTTRAITEMENTS='AUTO',
                                      PCENT_PIVOT=20,
                                      RESI_RELA=-1.0,
                                      GESTION_MEMOIRE='AUTO',
                                      METHODE='MUMPS',),
                           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   913.99 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0079   user+syst:        0.06s (syst:        0.00s, elaps:        0.06s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt591
  # ------------------------------------------------------------------------------------------
  # Commande No :  0080            Concept de type : macr_elem_dyna
  # ------------------------------------------------------------------------------------------
  macroEl1 = MACR_ELEM_DYNA(BASE_MODALE=bamo1,
                            MATR_RIGI=matAs_K1,
                            MATR_MASS=matAs_M1,
                            MATR_AMOR=matAs_A1,)


  Le nombre de modes dynamiques est 3,
  ce n'est pas un multiple du nombre de composante.
  # Mémoire (Mo) :  4147.61 /   942.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0080   user+syst:        3.88s (syst:        0.11s, elaps:        3.90s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt617
  # ------------------------------------------------------------------------------------------
  # Commande No :  0081            Concept de type : modele_gene
  # ------------------------------------------------------------------------------------------
  modeGene = DEFI_MODELE_GENE(SOUS_STRUC=(_F(NOM='elem0R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(0, 0.0, 0.0),),
                                          _F(NOM='elem0L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(0, 0.0, 0.0),),
                                          _F(NOM='elem1R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(600, 0.0, 0.0),),
                                          _F(NOM='elem1L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(600, 0.0, 0.0),),
                                          _F(NOM='elem2R',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 0.0, 0.0),
                                             TRANS=(1200, 0.0, 0.0),),
                                          _F(NOM='elem2L',
                                             MACR_ELEM_DYNA=macroEl1,
                                             ANGL_NAUT=(0.0, 180.0, 0.0),
                                             TRANS=(1200, 0.0, 0.0),),
                                          ),
                              LIAISON=(_F(SOUS_STRUC_1='elem0R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem0L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem0R',
                                          INTERFACE_1='I_raiRFt',
                                          SOUS_STRUC_2='elem1R',
                                          INTERFACE_2='I_raiRBk',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem0L',
                                          INTERFACE_1='I_raiRBk',
                                          SOUS_STRUC_2='elem1L',
                                          INTERFACE_2='I_raiRFt',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem1L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1R',
                                          INTERFACE_1='I_raiRFt',
                                          SOUS_STRUC_2='elem2R',
                                          INTERFACE_2='I_raiRBk',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem1L',
                                          INTERFACE_1='I_raiRBk',
                                          SOUS_STRUC_2='elem2L',
                                          INTERFACE_2='I_raiRFt',
                                          OPTION='REDUIT',),
                                       _F(SOUS_STRUC_1='elem2R',
                                          INTERFACE_1='I_slpSym',
                                          SOUS_STRUC_2='elem2L',
                                          INTERFACE_2='I_slpSym',
                                          OPTION='REDUIT',),
                                       ),
                              VERIF=_F(STOP_ERREUR='OUI',
                                       PRECISION=1.E-06,
                                       CRITERE='RELATIF',),
                              INFO=1,)

  # Mémoire (Mo) :  4147.61 /   942.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0081   user+syst:        0.28s (syst:        0.01s, elaps:        0.28s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt618
  # ------------------------------------------------------------------------------------------
  # Commande No :  0082            Concept de type : nume_ddl_gene
  # ------------------------------------------------------------------------------------------
  numGene = NUME_DDL_GENE(MODELE_GENE=modeGene,
                          STOCKAGE='LIGN_CIEL',
                          METHODE='CLASSIQUE',)

 +++ NOMBRE DE SOUS-STRUCTURES:                     6
 +++ NOMBRE DE LIAISONS:                     7
 +++ NOMBRE TOTAL D'EQUATIONS:                   652
 +++ DONT NOMBRE D'EQUATIONS STRUCTURE:                   372
 +++ DONT NOMBRE D'EQUATIONS LIAISON:                   280
 +++ HAUTEUR MAXIMUM D'UNE COLONNE:                   326
 +++ HAUTEUR MOYENNE D'UNE COLONNE:                   119
 +++ NOMBRE DE BLOCS DU STOCKAGE:                     1
 +++ NOMBRE DE TERMES DU STOCKAGE:                 78098
  # Mémoire (Mo) :  4147.61 /   942.55 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0082   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt624
  # ------------------------------------------------------------------------------------------
  # Commande No :  0083            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  masGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='MASS_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  1.000000
  # Mémoire (Mo) :  4147.61 /   943.15 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0083   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt627
  # ------------------------------------------------------------------------------------------
  # Commande No :  0084            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  rigGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='RIGI_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  55432.422893
  # Mémoire (Mo) :  4147.61 /   943.75 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0084   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt630
  # ------------------------------------------------------------------------------------------
  # Commande No :  0085            Concept de type : matr_asse_gene_r
  # ------------------------------------------------------------------------------------------
  amoGene = ASSE_MATR_GENE(NUME_DDL_GENE=numGene,
                           OPTION='AMOR_GENE',
                           METHODE='CLASSIQUE',)


 coefficient de conditionnement des multiplicateurs de Lagrange :  1.000000
  # Mémoire (Mo) :  4147.61 /   944.35 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0085   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt632
  # ------------------------------------------------------------------------------------------
  # Commande No :  0086            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  vectGe10 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,
                            CHAR_SOUS_STRUC=_F(SOUS_STRUC='elem2R',
                                               VECT_ASSE=vectAs10,),
                            METHODE='CLASSIQUE',)

  # Mémoire (Mo) :  4147.61 /   944.35 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0086   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt633
  # ------------------------------------------------------------------------------------------
  # Commande No :  0087            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  vectGe45 = ASSE_VECT_GENE(NUME_DDL_GENE=numGene,
                            CHAR_SOUS_STRUC=_F(SOUS_STRUC='elem2R',
                                               VECT_ASSE=vectAs45,),
                            METHODE='CLASSIQUE',)

  # Mémoire (Mo) :  4147.61 /   944.35 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0087   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt654
  # ------------------------------------------------------------------------------------------
  # Commande No :  0088            Concept de type : harm_gene
  # ------------------------------------------------------------------------------------------
  harmGe10 = DYNA_VIBRA(BASE_CALCUL='GENE',
                        TYPE_CALCUL='HARM',
                        MATR_MASS=masGene,
                        MATR_RIGI=rigGene,
                        MATR_AMOR=amoGene,
                        FREQ=(300.0, 400.0, 500.0),
                        TOUT_CHAM='OUI',
                        EXCIT=_F(VECT_ASSE_GENE=vectGe10,
                                 COEF_MULT=1.0,
                                 PHAS_DEG=0.0,
                                 PUIS_PULS=0,),
                        SOLVEUR=_F(METHODE='LDLT',
                                   RENUM='RCMK',
                                   NPREC=8,
                                   ELIM_LAGR='NON',
                                   STOP_SINGULIER='OUI',),
                        )


--------------------------------------------------------------------------------------

D Y N A _ V I B R A
=====================================================================================
                     Calcul HARMonique sur base GENEralisee
=====================================================================================

Modèle de sous-structuration dynamique
--------------------------------------------------------------------------------------
    >> modèle généralisé : bamo1
    >> numérotation généralisée : numGene
    >> nombre de modes    : 652
    >> fréquence minimale : 0.00000e+00
    >> fréquence maximale : 1.67293e+03

Matrices dynamiques pour la résolution
--------------------------------------------------------------------------------------
    >> matrice de masse        : masGene
    >> matrice de rigidité     : rigGene
    >> matrice d'amortissement : amoGene

Résolution
--------------------------------------------------------------------------------------
    >> fréquence minimale : 3.00000e+02
    >> fréquence maximale : 5.00000e+02
    >> nombre de fréquences calculées : 3

Archivage
--------------------------------------------------------------------------------------
    >> fréquences archivées : toutes (3 fréquences)
    >> champs archivés      : DEPL  VITE  ACCE

======================================================================================

Avancement du calcul
--------------------------------------------------------------------------------------
[ 33%] Fréquence calculée : 3.00000e+02, archivée au numéro d'ordre :     1
[100%] Fréquence calculée : 5.00000e+02, archivée au numéro d'ordre :     3

======================================================================================
                                                                        Fin du calcul

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.03      0.00      0.03
  # Mémoire (Mo) :  4147.61 /   944.35 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0088   user+syst:        0.04s (syst:        0.00s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt668
  # ------------------------------------------------------------------------------------------
  # Commande No :  0089            Concept de type : harm_gene
  # ------------------------------------------------------------------------------------------
  harmGe45 = DYNA_VIBRA(BASE_CALCUL='GENE',
                        TYPE_CALCUL='HARM',
                        MATR_MASS=masGene,
                        MATR_RIGI=rigGene,
                        MATR_AMOR=amoGene,
                        FREQ=(300.0, 400.0, 500.0),
                        TOUT_CHAM='OUI',
                        EXCIT=_F(VECT_ASSE_GENE=vectGe45,
                                 COEF_MULT=1.0,
                                 PHAS_DEG=0.0,
                                 PUIS_PULS=0,),
                        SOLVEUR=_F(METHODE='LDLT',
                                   RENUM='RCMK',
                                   NPREC=8,
                                   ELIM_LAGR='NON',
                                   STOP_SINGULIER='OUI',),
                        )


--------------------------------------------------------------------------------------

D Y N A _ V I B R A
=====================================================================================
                     Calcul HARMonique sur base GENEralisee
=====================================================================================

Modèle de sous-structuration dynamique
--------------------------------------------------------------------------------------
    >> modèle généralisé : bamo1
    >> numérotation généralisée : numGene
    >> nombre de modes    : 652
    >> fréquence minimale : 0.00000e+00
    >> fréquence maximale : 1.67293e+03

Matrices dynamiques pour la résolution
--------------------------------------------------------------------------------------
    >> matrice de masse        : masGene
    >> matrice de rigidité     : rigGene
    >> matrice d'amortissement : amoGene

Résolution
--------------------------------------------------------------------------------------
    >> fréquence minimale : 3.00000e+02
    >> fréquence maximale : 5.00000e+02
    >> nombre de fréquences calculées : 3

Archivage
--------------------------------------------------------------------------------------
    >> fréquences archivées : toutes (3 fréquences)
    >> champs archivés      : DEPL  VITE  ACCE

======================================================================================

Avancement du calcul
--------------------------------------------------------------------------------------
[ 33%] Fréquence calculée : 3.00000e+02, archivée au numéro d'ordre :     1
[100%] Fréquence calculée : 5.00000e+02, archivée au numéro d'ordre :     3

======================================================================================
                                                                        Fin du calcul

#1      Resolution des systemes lineaires                 CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.03
  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0089   user+syst:        0.04s (syst:        0.00s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0090            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=300.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0090   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0091            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0091   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0092            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0092   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0093            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=400.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0093   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0094            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0094   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0095            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0095   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt683
  # ------------------------------------------------------------------------------------------
  # Commande No :  0096            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe10,
                       FREQ=500.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0096   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt685
  # ------------------------------------------------------------------------------------------
  # Commande No :  0097            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=8,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0097   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt687
  # ------------------------------------------------------------------------------------------
  # Commande No :  0098            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   944.51 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0098   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------
  Lecture des blocs du fichier 'fort.30'...
  Lecture des blocs du fichier 'fort.31'...
  Lecture des blocs du fichier 'fort.32'...
  Lecture des blocs du fichier 'fort.33'...
  Lecture des blocs du fichier 'fort.36'...
  Lecture des blocs du fichier 'fort.37'...
[300. 400. 500.]
[0.016 0.016 0.016]
[300. 400. 500.]
[0.001 0.001 0.001]
[300. 400. 500.]
[0.15923022 0.15923022 0.15923022]
[300. 400. 500.]
[0.15923022 0.15923022 0.15923022]
Optimized frequency bands : 
[0.0, 2000.0]
TIME FOR INFO_MODE + CALC_MODES     134.38781929016113
TIME FOR INTF MODES     57.37029433250427
TIME FOR BAMO     0.21948480606079102
TIME FOR MACROEL     3.897894859313965
TIME FOR MODEGENE     0.31711483001708984
TIME FOR HARMO     0.08817410469055176
1 0 0 0.004022696740309913
2 1 0 0.0016896302553435797
3 2 0 0.40964733174036416
4 3 0 0.11083103987356656
5 4 0 0.021647401053301988
6 5 0 0.05590556578753228
7 6 0 0.033185601902820744
8 7 0 0.15881612786175087
9 8 0 0.005482690551219264
10 9 0 0.0033051186239679807
11 10 0 0.0031136346833276697
12 11 0 0.0030438540409815974
13 12 0 0.00041975260101159587
14 13 0 0.0015682221612466137
15 14 0 0.002561397745938729
16 15 0 0.00011459721559541662
17 16 0 0.0008656113912836407
18 17 0 0.000329471601522802
19 18 0 0.00043316479270596314
20 19 0 4.53670024798906e-05
21 20 0 1.4302950356206233e-05
22 21 0 1.8820425881270594e-05
23 22 0 0.36897919733453804
24 23 0 0.04365771630610218
25 24 0 0.0026978684906792624
26 25 0 0.03398976210273417
27 26 0 0.02457098285402723
28 27 0 0.15999760917979367
29 28 0 0.0031722136627572867
30 29 0 0.002325858103023484
31 30 0 0.003513949156390855
32 31 0 0.0044459827979986604
33 32 0 0.000637172136036252
34 33 0 0.00253802270263211
35 34 0 0.0023967243629261998
36 35 0 0.000454671892781421
37 36 0 0.0002586332201149149
38 37 0 0.000549337836308405
39 38 0 0.00027501757697434543
40 39 0 0.00019176779101102978
41 40 0 2.441858001604516e-05
42 41 0 8.607987632855894e-05
43 42 0 1.0298820270710622e-05
44 43 0 1.0891545506993028e-05
45 44 0 1.671622167457706e-05
46 45 0 5.748791034930735e-06
47 46 0 3.5820731126681377e-06
48 47 0 2.0897705586030252e-06
49 48 0 4.208716413204981e-06
50 49 0 1.7582799587380845e-06
51 50 0 1.8551818572851558e-07
52 51 0 2.8847787449475217e-07
53 52 0 4.567156427362654e-07
54 53 0 8.455891842502481e-07
55 54 0 2.263889348201453e-07
56 55 0 1.2001429329563208e-06
57 56 0 1.5304902756188946e-06
58 57 0 1.446138358835696e-07
59 58 0 7.380139869087848e-07
60 59 0 3.7862170394339514e-07
61 60 0 1.1306674309734052e-06
62 61 0 7.768339603885762e-07
63 0 1 1.1998409938525188e-07
64 1 1 2.1676744633825898e-08
65 2 1 3.8295409235703435e-06
66 3 1 1.4587962475510415e-06
67 4 1 2.8182078599351043e-08
68 5 1 1.984599400811156e-07
69 6 1 2.0609532873990617e-07
70 7 1 3.6126768323917375e-07
71 8 1 2.4182117992020466e-08
72 9 1 8.208157230249674e-09
73 10 1 2.693630244706946e-07
74 11 1 8.005012904805339e-09
75 12 1 1.0249992084996944e-09
76 13 1 8.445291033943117e-08
77 14 1 5.429888023642845e-09
78 15 1 4.633260328386481e-09
79 16 1 3.327983745062466e-10
80 17 1 1.3323412813299752e-09
81 18 1 5.548155494324217e-10
82 19 1 1.176142243610015e-08
83 20 1 7.985868653979638e-11
84 21 1 3.07163656134641e-09
85 22 1 8.048910435810551e-06
86 23 1 1.116895571242003e-06
87 24 1 8.663051611816703e-08
88 25 1 6.121919461190256e-07
89 26 1 2.3155976200540542e-07
90 27 1 3.60953264146482e-07
91 28 1 2.8961180234308476e-08
92 29 1 9.318776998002474e-09
93 30 1 4.7451910579975593e-08
94 31 1 4.994477083359178e-09
95 32 1 7.731669609625078e-10
96 33 1 1.6925021480931713e-08
97 34 1 5.737109143505987e-09
98 35 1 1.1219047749332384e-09
99 36 1 1.799515871595747e-09
100 37 1 8.078218586804891e-10
101 38 1 9.218704541365886e-10
102 39 1 4.5967340322668224e-10
103 40 1 3.215532985276314e-11
104 41 1 1.8054420635955064e-10
105 42 1 1.879223071085495e-05
106 43 1 9.70315993660828e-06
107 44 1 1.1890992286373749e-05
108 45 1 8.278202537773522e-06
109 46 1 1.599908132265412e-05
110 47 1 1.7234846293045377e-06
111 48 1 6.1249010740419306e-06
112 49 1 1.6419155852235521e-06
113 50 1 2.7529490668921867e-07
114 51 1 2.2022401900110713e-06
115 52 1 3.63123616599086e-07
116 53 1 7.903906946124808e-07
117 54 1 2.749029315849506e-07
118 55 1 7.180082679419507e-07
119 56 1 9.498065145217735e-07
120 57 1 1.0572031896608144e-07
121 58 1 2.986837348233077e-07
122 59 1 2.3393366783900516e-07
123 60 1 7.548774582016606e-07
124 61 1 2.552041619185706e-07
125 0 2 0.040544851080082905
126 1 2 0.0034293052428298067
127 2 2 0.4440133365297601
128 3 2 0.04497968295630818
129 4 2 0.01834957083220477
130 5 2 0.10436522912948547
131 6 2 0.10403949850312091
132 7 2 0.15985980709174522
133 8 2 0.020625455438477984
134 9 2 0.0030414922156836105
135 10 2 0.006484906832491891
136 11 2 0.005667430353872909
137 12 2 0.00040233618560104684
138 13 2 0.0013822080380423924
139 14 2 0.0025008504454942923
140 15 2 0.00021100136486534868
141 16 2 0.0004149539093189628
142 17 2 0.0005598886479238528
143 18 2 0.00032816028792247246
144 19 2 0.0005095798818958614
145 20 2 3.905230240843681e-05
146 21 2 2.7670044311798633e-05
147 22 2 0.2398959095565408
148 23 2 0.023376347153693623
149 24 2 0.08754057216232025
150 25 2 0.07164369581679884
151 26 2 0.09168810850666514
152 27 2 0.16250387685249235
153 28 2 0.009656365693576648
154 29 2 0.04899331250448881
155 30 2 0.025492111472922147
156 31 2 0.012960569328702347
157 32 2 0.00014615655257295174
158 33 2 0.004665059009350363
159 34 2 0.001498823638919536
160 35 2 0.0005364503008937641
161 36 2 0.008579241164424187
162 37 2 0.0029433379683599025
163 38 2 0.0022238948556764456
164 39 2 0.0009568192518486498
165 40 2 0.0001727696947826499
166 41 2 0.000148118406351439
167 42 2 1.3167562052441599e-05
168 43 2 7.583650879569813e-05
169 44 2 1.3056555237718716e-05
170 45 2 4.224142385017342e-05
171 46 2 2.135246868373772e-06
172 47 2 1.097567796302807e-05
173 48 2 3.4708528066873937e-06
174 49 2 1.0965012500795427e-05
175 50 2 1.3986472434195121e-06
176 51 2 1.9729086238029372e-07
177 52 2 2.990870410315365e-06
178 53 2 5.5256903486623285e-06
179 54 2 1.4568033361095794e-06
180 55 2 9.638248506912447e-07
181 56 2 1.407223596057144e-06
182 57 2 8.472089849429124e-07
183 58 2 6.800396782813485e-07
184 59 2 2.2045945275265472e-06
185 60 2 8.655024509277834e-07
186 61 2 6.711601166286625e-07
187 0 3 6.443354158891159e-07
188 1 3 2.878492838205438e-07
189 2 3 5.9885434257839356e-06
190 3 3 3.1513505771494227e-06
191 4 3 2.8282053946805208e-08
192 5 3 1.4550790072020144e-06
193 6 3 7.665160992523249e-07
194 7 3 3.611626503225382e-07
195 8 3 1.0390254648318298e-07
196 9 3 8.374250579001143e-09
197 10 3 1.0197218460271409e-07
198 11 3 8.149655306459286e-09
199 12 3 1.0347960675389138e-09
200 13 3 1.9269037393811346e-08
201 14 3 5.4147881871500754e-09
202 15 3 3.5943729127763025e-09
203 16 3 2.2367855298718292e-10
204 17 3 1.3899213847282875e-09
205 18 3 4.824329882304899e-10
206 19 3 1.1144458780797748e-08
207 20 3 6.482053811324001e-11
208 21 3 1.6203474003126613e-09
209 22 3 5.203505831456327e-06
210 23 3 1.8557810651431919e-06
211 24 3 1.0545585768998325e-08
212 25 3 1.5057555423441083e-06
213 26 3 1.0848973326435088e-06
214 27 3 3.614640941905572e-07
215 28 3 7.040645977500929e-08
216 29 3 1.5150741462040728e-08
217 30 3 3.177181115784871e-07
218 31 3 6.2037656606290345e-09
219 32 3 1.0592335417503544e-09
220 33 3 4.0599631227881864e-08
221 34 3 5.563739741091418e-09
222 35 3 1.4889891976240124e-09
223 36 3 3.303691259485365e-10
224 37 3 1.2911471931968098e-09
225 38 3 5.297169231174325e-10
226 39 3 2.1595274912119085e-08
227 40 3 9.377670815298435e-11
228 41 3 3.973522499961464e-09
229 42 3 2.0038686644588265e-05
230 43 3 6.89353316333504e-05
231 44 3 9.789620560006399e-06
232 45 3 5.6977491366503665e-05
233 46 3 1.3314988718827366e-05
234 47 3 1.1005957485552996e-05
235 48 3 4.807797130266626e-06
236 49 3 1.0526017207377156e-05
237 50 3 1.975021040046156e-06
238 51 3 1.908262485017457e-06
239 52 3 2.5788431702024844e-06
240 53 3 5.5581100979739505e-06
241 54 3 1.9058661579053761e-06
242 55 3 4.792396607001553e-07
243 56 3 9.000054850905076e-07
244 57 3 7.190460193478578e-07
245 58 3 2.9230908687894054e-07
246 59 3 1.5380575497543159e-06
247 60 3 6.324605116859076e-07
248 61 3 2.2384993113041157e-07
249 0 4 0.002742608902655462
250 1 4 0.0057974063809344955
251 2 4 0.14328120359017785
252 3 4 0.04850444335109929
253 4 4 0.08235571185886016
254 5 4 0.024056182212738995
255 6 4 0.0023247873593118143
256 7 4 0.16134218874767378
257 8 4 0.013461669370475564
258 9 4 0.01077330872076448
259 10 4 0.020080373314210094
260 11 4 0.0018393307744296566
261 12 4 0.00022998239282605963
262 13 4 0.004955716707210875
263 14 4 0.0009431220165089987
264 15 4 0.0005475722244857295
265 16 4 0.007704646307342058
266 17 4 0.003139511709186
267 18 4 0.0019028297889844903
268 19 4 0.001293810642164459
269 20 4 0.00012920036401945005
270 21 4 0.00028214674713104957
271 22 4 0.03387412923530286
272 23 4 0.35367405339272484
273 24 4 0.7773997555401018
274 25 4 0.10448294713228758
275 26 4 0.11570932063385429
276 27 4 0.15902904530305148
277 28 4 0.016329996566173094
278 29 4 0.022753979762793697
279 30 4 0.08279623920541615
280 31 4 0.07391219888219568
281 32 4 0.029590113436145683
282 33 4 0.025813963856930227
283 34 4 0.0008794534829235768
284 35 4 0.005261635850343978
285 36 4 0.010335673521345573
286 37 4 0.0049490298010742475
287 38 4 0.0036112773938655005
288 39 4 0.004144720003667444
289 40 4 0.0018244226746706271
290 41 4 0.0012760002623048905
291 42 4 9.801922931935346e-06
292 43 4 6.175706966663817e-05
293 44 4 1.7675056061582947e-05
294 45 4 2.9001711602765793e-05
295 46 4 3.958122303479264e-06
296 47 4 1.498298339571292e-05
297 48 4 4.241938333837964e-06
298 49 4 1.1355058892828342e-05
299 50 4 8.229380108963251e-07
300 51 4 3.4878468685565885e-07
301 52 4 2.7802502607679047e-06
302 53 4 5.07515314553167e-06
303 54 4 1.4558958083654201e-06
304 55 4 1.2431184889611289e-06
305 56 4 1.3874143336437027e-06
306 57 4 9.729487916631634e-07
307 58 4 7.671505519837681e-07
308 59 4 2.6082323395911265e-06
309 60 4 1.2307814244633366e-06
310 61 4 7.519729659954538e-07
311 0 5 3.186558680661632e-07
312 1 5 2.6823445043655375e-07
313 2 5 2.134762463296795e-06
314 3 5 3.761063248085573e-06
315 4 5 9.14106532929833e-08
316 5 5 8.707136140212808e-07
317 6 5 1.270687151288231e-07
318 7 5 3.6094511913031876e-07
319 8 5 1.9308494877291707e-07
320 9 5 6.6778056195193345e-09
321 10 5 3.098276371097324e-08
322 11 5 6.229908084233668e-09
323 12 5 7.832834437775383e-10
324 13 5 1.948798517882236e-08
325 14 5 5.7067575228670795e-09
326 15 5 2.6539690722011064e-09
327 16 5 1.9358407712670998e-09
328 17 5 8.141821798129704e-10
329 18 5 9.63348273986101e-10
330 19 5 3.1191998331944044e-10
331 20 5 3.5230977504605234e-11
332 21 5 1.1951137591861285e-10
333 22 5 5.2480788701771624e-06
334 23 5 3.1610961759807306e-06
335 24 5 1.550642363902457e-08
336 25 5 7.720609971601986e-07
337 26 5 6.630550476770386e-08
338 27 5 3.6130020826592393e-07
339 28 5 2.6251794038396685e-07
340 29 5 1.18329731210757e-08
341 30 5 6.099467848673357e-08
342 31 5 7.442999956180303e-09
343 32 5 1.0906019427453813e-09
344 33 5 2.903928112505542e-08
345 34 5 5.483566696959198e-09
346 35 5 6.7711644984079364e-09
347 36 5 3.320569207139041e-10
348 37 5 1.3476101683606428e-09
349 38 5 4.554776230167625e-10
350 39 5 7.210217705781775e-09
351 40 5 5.036328271469206e-11
352 41 5 1.524422317444874e-09
353 42 5 1.488796909340223e-05
354 43 5 5.2734229206465135e-05
355 44 5 1.1493804491925205e-05
356 45 5 4.817583736210508e-05
357 46 5 1.5941626289563435e-05
358 47 5 1.0269072274991545e-05
359 48 5 6.224340096122641e-06
360 49 5 1.0368324370253855e-05
361 50 5 1.4401523461481426e-06
362 51 5 2.028820768278953e-06
363 52 5 2.0476508015284245e-06
364 53 5 4.579615325297529e-06
365 54 5 1.6511336830827025e-06
366 55 5 7.338165697400134e-07
367 56 5 8.289018324415745e-07
368 57 5 6.201777053014725e-07
369 58 5 2.396679847664264e-07
370 59 5 1.3957217383905719e-06
371 60 5 7.05157046242892e-07
372 61 5 2.603897429022311e-07
1 0 0 0.18609402254637306
2 1 0 0.015430383195876893
3 2 0 2.3721855157217364
4 3 0 1.0000200141182174
5 4 0 0.039727465985340674
6 5 0 0.5930388476482801
7 6 0 0.3838985898228854
8 7 0 0.0986088284279861
9 8 0 0.06352943765058841
10 9 0 0.003688428385838066
11 10 0 0.029235708371955008
12 11 0 0.0006905163997849724
13 12 0 0.00014128295645618406
14 13 0 0.01429794589016548
15 14 0 0.0015357789115950252
16 15 0 0.0009717594175679493
17 16 0 0.0004066930090399883
18 17 0 0.00023027675322654693
19 18 0 0.00022482640863628545
20 19 0 0.0005389490835208833
21 20 0 7.92841319246796e-06
22 21 0 0.00017741817161466295
23 22 0 2.914666133367594
24 23 0 0.30377358350751965
25 24 0 0.019885508209437346
26 25 0 0.6138177435851785
27 26 0 0.658441559125789
28 27 0 0.09733738765191924
29 28 0 0.09432691873632892
30 29 0 0.004267828483350755
31 30 0 0.10778846713419761
32 31 0 0.0014255311904581393
33 32 0 0.00011956204785068712
34 33 0 0.0009793329287249562
35 34 0 0.0014459978695520268
36 35 0 0.002088674467551131
37 36 0 0.0002454954486339818
38 37 0 0.0004455739588901039
39 38 0 4.84101916098253e-05
40 39 0 0.0022105043380414345
41 40 0 2.7982689195465116e-05
42 41 0 0.0004424500323618476
43 42 0 3.2267916140494726e-05
44 43 0 5.9067653232882034e-05
45 44 0 3.8457459393594896e-05
46 45 0 3.416896307732501e-05
47 46 0 1.1789790228854795e-05
48 47 0 1.0470673903490452e-05
49 48 0 8.940788164390206e-06
50 49 0 8.871037071380098e-06
51 50 0 1.134709314514074e-06
52 51 0 2.485077967871431e-06
53 52 0 2.310593514580399e-06
54 53 0 5.436640703449144e-06
55 54 0 1.4365687565501347e-06
56 55 0 3.3490696804373896e-06
57 56 0 1.7720795678583398e-06
58 57 0 6.543839938445927e-07
59 58 0 1.5802695524321158e-06
60 59 0 1.5442295953050505e-06
61 60 0 2.9169543566021047e-06
62 61 0 1.2296265189861512e-06
63 0 1 1.0505467115388064e-06
64 1 1 3.787360360462152e-07
65 2 1 1.3156735687943268e-05
66 3 1 2.4486641005585066e-06
67 4 1 2.9817729376496796e-09
68 5 1 2.739907660944069e-06
69 6 1 2.7053676459956417e-06
70 7 1 2.764338200455943e-07
71 8 1 1.1172795087984922e-07
72 9 1 1.4434589591675269e-08
73 10 1 8.052215539017817e-07
74 11 1 4.540135814719643e-09
75 12 1 1.045890353217774e-09
76 13 1 9.260579789019692e-08
77 14 1 3.961183966896766e-09
78 15 1 1.336973548998259e-08
79 16 1 2.967062660183637e-10
80 17 1 1.05681752931904e-09
81 18 1 1.4950933817658347e-10
82 19 1 2.4702477292976105e-08
83 20 1 1.0430180644288957e-11
84 21 1 2.400043641837373e-09
85 22 1 8.00868970122454e-06
86 23 1 7.213612841343788e-06
87 24 1 9.525896382398877e-08
88 25 1 2.5991621847241463e-06
89 26 1 1.3289224829541412e-06
90 27 1 2.7327916430822164e-07
91 28 1 9.22077139013868e-08
92 29 1 5.20483128511386e-09
93 30 1 9.788045983024396e-08
94 31 1 4.115581231964691e-09
95 32 1 4.7242098602941e-10
96 33 1 5.930796948893125e-08
97 34 1 4.299079754784738e-09
98 35 1 5.537557378212889e-09
99 36 1 1.3530430481182039e-09
100 37 1 5.868070866818158e-10
101 38 1 7.109546557720823e-10
102 39 1 2.0106433096650932e-09
103 40 1 3.09112698218627e-11
104 41 1 5.291105842307447e-10
105 42 1 1.5887735825157718e-05
106 43 1 5.453893700513423e-05
107 44 1 2.195927741001511e-05
108 45 1 4.387870283869385e-05
109 46 1 2.9549060783889564e-05
110 47 1 1.1220283827555343e-05
111 48 1 1.2538337504230775e-05
112 49 1 8.87040845529111e-06
113 50 1 1.4663271822485592e-06
114 51 1 4.103039459030464e-06
115 52 1 2.1263650448829335e-06
116 53 1 5.492577544905488e-06
117 54 1 1.8098152001240347e-06
118 55 1 2.330096582118432e-06
119 56 1 1.0090372335652436e-06
120 57 1 6.917414779003496e-07
121 58 1 2.063489507878584e-07
122 59 1 1.3819663806477493e-06
123 60 1 1.4252010395172326e-06
124 61 1 3.9964061631671023e-07
125 0 2 0.025975231891361434
126 1 2 0.004190853050155779
127 2 2 2.5289455090412685
128 3 2 0.22032694507254438
129 4 2 0.01799560056690523
130 5 2 0.24820007170224587
131 6 2 0.2882280021666875
132 7 2 0.09756585200473575
133 8 2 0.0746390249535054
134 9 2 0.012591179617378549
135 10 2 0.029265618814233195
136 11 2 0.0020005213788660196
137 12 2 0.0003604733812624172
138 13 2 0.024991423778968656
139 14 2 0.00138498233340682
140 15 2 0.0007915972795816065
141 16 2 0.0004837406910707533
142 17 2 0.0004061932531948309
143 18 2 5.873890878744684e-05
144 19 2 0.0024294988116276162
145 20 2 2.34999661242309e-06
146 21 2 0.0008886253003881895
147 22 2 2.7429698078542537
148 23 2 0.1861478521444714
149 24 2 0.11207513778670138
150 25 2 0.29757859782081103
151 26 2 0.3769387959987669
152 27 2 0.0941403693903949
153 28 2 0.08552529505549805
154 29 2 0.05031728232503123
155 30 2 0.014374224215935968
156 31 2 0.02103820210323268
157 32 2 0.0007333555876388753
158 33 2 0.02060508544655906
159 34 2 0.002647522082192328
160 35 2 0.001260724569000303
161 36 2 0.010004140806553255
162 37 2 0.0024317674672346863
163 38 2 0.002903592534567314
164 39 2 0.0019226490161493334
165 40 2 0.00016397683023472583
166 41 2 0.0008401500076176873
167 42 2 2.4391734752198337e-05
168 43 2 4.0752863988681826e-05
169 44 2 1.0706192699199842e-05
170 45 2 2.417305221605249e-05
171 46 2 4.412574847804963e-06
172 47 2 6.837841051706307e-06
173 48 2 2.404974351120818e-06
174 49 2 5.779038802209586e-06
175 50 2 8.642180908312438e-07
176 51 2 1.5380377897906152e-06
177 52 2 1.5509324877904906e-06
178 53 2 3.69440985560617e-06
179 54 2 9.616237460675564e-07
180 55 2 1.0603290424740802e-06
181 56 2 5.61382792626386e-07
182 57 2 4.4118903422456007e-07
183 58 2 6.460181269856133e-07
184 59 2 1.0289447929882779e-06
185 60 2 8.331174912207761e-07
186 61 2 1.853190626837941e-07
187 0 3 1.3222535583903717e-07
188 1 3 3.2788224125438694e-07
189 2 3 1.1939113596176225e-05
190 3 3 5.287037285370701e-06
191 4 3 3.981815486998362e-08
192 5 3 1.3861352390834742e-06
193 6 3 1.1622543452561535e-06
194 7 3 2.77826309009784e-07
195 8 3 3.628514437865722e-07
196 9 3 8.817426502840837e-09
197 10 3 3.716453278665023e-07
198 11 3 4.862289502384653e-09
199 12 3 6.14888098900117e-10
200 13 3 1.772905896684875e-07
201 14 3 4.301657026309745e-09
202 15 3 1.8567619527726218e-09
203 16 3 7.914654126068934e-11
204 17 3 9.771527726174654e-10
205 18 3 2.1929805072432815e-10
206 19 3 1.8661397685061e-08
207 20 3 2.4060041245037383e-11
208 21 3 5.733492677809923e-09
209 22 3 1.1533731044982799e-05
210 23 3 1.8543502310243337e-06
211 24 3 1.5132915270033068e-08
212 25 3 1.1783065518717955e-06
213 26 3 1.4266527247596031e-06
214 27 3 2.763499936240274e-07
215 28 3 5.53676937704651e-07
216 29 3 1.2005635554026284e-08
217 30 3 4.122063279087307e-07
218 31 3 4.619705610750538e-09
219 32 3 5.776982526544459e-10
220 33 3 1.7804044349529128e-07
221 34 3 4.3528404345898094e-09
222 35 3 2.503314459536596e-09
223 36 3 2.0699109906466993e-10
224 37 3 9.607002665540381e-10
225 38 3 1.2372010160438764e-10
226 39 3 2.6708594853529826e-08
227 40 3 3.8852161825309026e-11
228 41 3 7.772965162227347e-09
229 42 3 1.8743072968883733e-05
230 43 3 3.79720189247293e-05
231 44 3 3.90091929473041e-06
232 45 3 3.0132595343415075e-05
233 46 3 6.157883974694554e-06
234 47 3 7.708938579266279e-06
235 48 3 2.4679827195361397e-06
236 49 3 5.813297731480837e-06
237 50 3 1.042055542159342e-06
238 51 3 6.033090406027412e-07
239 52 3 1.445830951696636e-06
240 53 3 3.7468270390425014e-06
241 54 3 1.219657040934459e-06
242 55 3 7.017016784431971e-07
243 56 3 4.7290734231771026e-07
244 57 3 4.7448516441507424e-07
245 58 3 1.4393325187811882e-07
246 59 3 9.529351153320985e-07
247 60 3 9.348513848093716e-08
248 61 3 1.1482260805999836e-07
249 0 4 0.1816784019393885
250 1 4 0.01451327694190392
251 2 4 3.0601897047732187
252 3 4 0.24388703838457673
253 4 4 0.08474875014465345
254 5 4 0.5977959265811369
255 6 4 0.6878817221216159
256 7 4 0.09548350431969911
257 8 4 0.11620256479527463
258 9 4 0.006435685782043744
259 10 4 0.09357848357833119
260 11 4 0.0036824148900729205
261 12 4 0.0009524256282240047
262 13 4 0.004325945840275858
263 14 4 0.0035991893492703327
264 15 4 0.0017427166642056307
265 16 4 0.009014148414932827
266 17 4 0.002636821131571878
267 18 4 0.0025517256123383176
268 19 4 0.0013214580560713988
269 20 4 9.36462691693054e-05
270 21 4 0.0007676012169069302
271 22 4 2.383886017115751
272 23 4 0.6538953343318791
273 24 4 0.8418110371576807
274 25 4 0.5057873653621648
275 26 4 0.5028757292542562
276 27 4 0.09739980027294716
277 28 4 0.08278918565736712
278 29 4 0.018006014273131105
279 30 4 0.05967107907470754
280 31 4 0.07856226092907673
281 32 4 0.028991911601459554
282 33 4 0.01498642121725197
283 34 4 0.003850566602452683
284 35 4 0.006110832876345499
285 36 4 0.009039445361411064
286 37 4 0.005447850567375724
287 38 4 0.0029586507653466708
288 39 4 0.00463125752496058
289 40 4 0.0018045738339931721
290 41 4 0.001119166540226364
291 42 4 2.1471768161239073e-05
292 43 4 0.00015183074194035937
293 44 4 3.3628372903398106e-05
294 45 4 8.014147289512466e-05
295 46 4 1.0431504524073648e-05
296 47 4 3.649614309324343e-05
297 48 4 7.824998513897622e-06
298 49 4 2.682518244900675e-05
299 50 4 2.6470117881112656e-06
300 51 4 2.0921698972358818e-06
301 52 4 6.618079985471618e-06
302 53 4 1.5207428516682233e-05
303 54 4 4.218268507432878e-06
304 55 4 2.898162777982631e-06
305 56 4 1.7673421643235925e-06
306 57 4 2.2486814261306556e-06
307 58 4 1.2364121557579415e-06
308 59 4 5.575091498417313e-06
309 60 4 2.4837718418767855e-06
310 61 4 1.1495330128195536e-06
311 0 5 1.3782621055822437e-06
312 1 5 1.034509967233279e-06
313 2 5 7.752239758527855e-06
314 3 5 1.1672392065879214e-05
315 4 5 1.2290713971337264e-07
316 5 5 2.7410621737749765e-06
317 6 5 1.2819447630958988e-06
318 7 5 2.771116258351497e-07
319 8 5 5.191878906696497e-07
320 9 5 9.970095776997331e-09
321 10 5 1.0248254488348221e-07
322 11 5 5.584421516415107e-09
323 12 5 4.964311481222748e-10
324 13 5 5.889922217491501e-08
325 14 5 4.290733010349165e-09
326 15 5 7.1339372149185616e-09
327 16 5 1.510212156544901e-09
328 17 5 6.04211319961816e-10
329 18 5 7.629900266202697e-10
330 19 5 1.898943162971446e-09
331 20 5 4.11630428991298e-11
332 21 5 7.218431763451116e-10
333 22 5 1.3574627142433785e-05
334 23 5 6.2396092846427495e-06
335 24 5 3.599724707279711e-08
336 25 5 2.9643670606893475e-06
337 26 5 2.3970705433351352e-06
338 27 5 2.7808636454526133e-07
339 28 5 7.060542113782766e-07
340 29 5 2.0953160916933273e-08
341 30 5 8.911996938700102e-07
342 31 5 5.510630246832026e-09
343 32 5 1.0308954834729852e-09
344 33 5 1.1013391868271101e-07
345 34 5 4.0988052413965705e-09
346 35 5 1.4317691174421245e-08
347 36 5 4.1421917024686344e-10
348 37 5 1.0055874962950763e-09
349 38 5 1.7265240853023165e-10
350 39 5 3.635508859705887e-08
351 40 5 7.073021098795055e-11
352 41 5 6.409995873491339e-09
353 42 5 1.0353842257954291e-05
354 43 5 0.0001354155618937868
355 44 5 2.0246151981700126e-05
356 45 5 0.00011507743084310667
357 46 5 2.6710973580159894e-05
358 47 5 3.07496072563537e-05
359 48 5 1.1430791598030295e-05
360 49 5 2.545629526643852e-05
361 50 5 3.549968941092443e-06
362 51 5 3.835120702768559e-06
363 52 5 5.218637228482164e-06
364 53 5 1.3988780687826226e-05
365 54 5 4.6658163543478655e-06
366 55 5 2.218968188370442e-06
367 56 5 1.0103923860015969e-06
368 57 5 1.8589367155715658e-06
369 58 5 2.2253122759316298e-07
370 59 5 3.883642784873501e-06
371 60 5 1.366042999185604e-06
372 61 5 3.4915273941643365e-07
1 0 0 0.022480186977000435
2 1 0 0.008885619088262787
3 2 0 0.160357972361838
4 3 0 0.14422860374682964
5 4 0 0.044873268712791584
6 5 0 0.04821745468762946
7 6 0 0.023094601489742142
8 7 0 0.047484343023191336
9 8 0 0.006967937841284178
10 9 0 0.00317394305414905
11 10 0 0.0025367888849598813
12 11 0 0.0010053415583238365
13 12 0 6.363530408460385e-05
14 13 0 0.0009049730469052876
15 14 0 0.0007042300138626583
16 15 0 6.952138323393745e-05
17 16 0 0.00011453903954674143
18 17 0 0.00013134923037387772
19 18 0 7.529167590776553e-05
20 19 0 3.692117247973173e-05
21 20 0 5.98773354750393e-06
22 21 0 1.0786392411126159e-05
23 22 0 0.14402611109266578
24 23 0 0.12113539011160199
25 24 0 0.02606137068672521
26 25 0 0.06084560895953051
27 26 0 0.04614348462058322
28 27 0 0.04562672627747908
29 28 0 0.009181899706923399
30 29 0 0.0035411986547282262
31 30 0 0.007897551739748212
32 31 0 0.00018688772509985776
33 32 0 0.00017110176248233096
34 33 0 0.000490245506506689
35 34 0 0.0006367387353836736
36 35 0 0.00041078478208059265
37 36 0 0.0004555129485426292
38 37 0 0.00030543312680128527
39 38 0 7.05253940994306e-05
40 39 0 0.00024277138279756122
41 40 0 1.788291980466557e-05
42 41 0 4.516098438696836e-05
43 42 0 5.494986533122716e-06
44 43 0 3.530232299891892e-05
45 44 0 7.793124463589684e-06
46 45 0 1.8695996177740836e-05
47 46 0 1.9343034276193586e-06
48 47 0 8.071977887401638e-06
49 48 0 1.9961602153136405e-06
50 49 0 5.9770482488934286e-06
51 50 0 5.697677361741361e-07
52 51 0 3.400693684709636e-07
53 52 0 1.486884593538113e-06
54 53 0 4.046377376580192e-06
55 54 0 1.1611905593725778e-06
56 55 0 7.453239077931152e-07
57 56 0 5.348828133684985e-07
58 57 0 5.167729760535472e-07
59 58 0 4.039896761665575e-07
60 59 0 1.2330146186680026e-06
61 60 0 5.90399226155836e-07
62 61 0 3.1120609739045923e-07
63 0 1 1.8303851990903444e-07
64 1 1 1.1877045642566168e-06
65 2 1 1.3944136789719182e-06
66 3 1 1.2240671952552277e-05
67 4 1 3.0700257544178676e-08
68 5 1 1.0027384153232588e-06
69 6 1 2.347189182852545e-06
70 7 1 5.884680514530929e-09
71 8 1 1.3198154341043296e-06
72 9 1 4.197891002932306e-09
73 10 1 3.653544652694969e-07
74 11 1 1.2237860717266928e-09
75 12 1 1.2734410397489945e-10
76 13 1 9.716199148905965e-08
77 14 1 2.307013206295317e-10
78 15 1 1.1603310004890845e-08
79 16 1 4.0070280971812516e-10
80 17 1 1.6970500947588438e-10
81 18 1 1.4732338422738598e-10
82 19 1 2.0731197248420075e-08
83 20 1 8.289891027920693e-11
84 21 1 5.6409559210474244e-09
85 22 1 3.2852041620879516e-06
86 23 1 1.2328423186897666e-05
87 24 1 2.030531556166759e-08
88 25 1 7.295163768209731e-07
89 26 1 2.0623343981071545e-06
90 27 1 4.9260741909963155e-09
91 28 1 1.005722434277967e-06
92 29 1 5.087644325064007e-09
93 30 1 6.509728666273272e-08
94 31 1 2.1573231333300536e-09
95 32 1 1.0175807029955904e-10
96 33 1 5.949933797951033e-09
97 34 1 5.234762923963224e-11
98 35 1 2.789009905009482e-09
99 36 1 2.342798540690652e-10
100 37 1 2.1496087699858316e-11
101 38 1 7.586804771637536e-11
102 39 1 1.0103962110818162e-09
103 40 1 1.4722305800821418e-11
104 41 1 9.43641212700786e-10
105 42 1 5.6824443721783144e-06
106 43 1 3.1497059671182004e-05
107 44 1 4.835635201429074e-06
108 45 1 2.6845642812195798e-05
109 46 1 6.6782365640339516e-06
110 47 1 7.4197686447085395e-06
111 48 1 2.5408048103110955e-06
112 49 1 5.906350578970064e-06
113 50 1 7.844167956204215e-07
114 51 1 1.1364756371493409e-06
115 52 1 1.2485981871979472e-06
116 53 1 3.847688342498649e-06
117 54 1 1.2520886177938843e-06
118 55 1 4.884839023795974e-07
119 56 1 3.466257374831823e-07
120 57 1 4.933294237657024e-07
121 58 1 5.888876437657696e-08
122 59 1 9.747579308464231e-07
123 60 1 3.556115685083937e-07
124 61 1 1.019449698412825e-07
125 0 2 0.044028522220748
126 1 2 0.019240856289157195
127 2 2 0.0654550850683123
128 3 2 0.12426337163078266
129 4 2 0.029653394202837895
130 5 2 0.016433267377734106
131 6 2 0.05354161984139068
132 7 2 0.045979099725124026
133 8 2 0.02238772066334579
134 9 2 0.01590800098511752
135 10 2 0.004761471758658241
136 11 2 0.004440027867232367
137 12 2 0.00022800471412003746
138 13 2 0.0014769661555448723
139 14 2 0.000567071124872392
140 15 2 0.0006373778937867236
141 16 2 0.0007910930376577018
142 17 2 0.000271750956914985
143 18 2 0.0001923926388288827
144 19 2 0.0004145395693549652
145 20 2 1.2965240076465997e-06
146 21 2 0.00013872599537577665
147 22 2 0.3416237630284082
148 23 2 0.266515362703541
149 24 2 0.14838392803776593
150 25 2 0.03997135523786523
151 26 2 0.14418141244588362
152 27 2 0.041216567881981636
153 28 2 0.02926548438587682
154 29 2 0.06852598061424878
155 30 2 0.043719948310039204
156 31 2 0.026969493852617998
157 32 2 0.0007563171603349748
158 33 2 0.0077124060227207955
159 34 2 0.0021087764088598866
160 35 2 0.001169453916193366
161 36 2 0.01253534398372382
162 37 2 0.0032656578287727877
163 38 2 0.003584280824558952
164 39 2 0.0004763324140621652
165 40 2 0.000214725563928122
166 41 2 4.1752675655871444e-05
167 42 2 3.1800213763320836e-06
168 43 2 0.00010066252788772791
169 44 2 3.82366876657746e-06
170 45 2 5.8776374131006924e-05
171 46 2 7.776796943739047e-07
172 47 2 2.3250168054620597e-05
173 48 2 1.0772093808953763e-06
174 49 2 1.6351450852266904e-05
175 50 2 2.0841084825833805e-06
176 51 2 1.0637032617312076e-07
177 52 2 4.079994341539704e-06
178 53 2 1.1304742503144422e-05
179 54 2 3.0516703998926557e-06
180 55 2 3.299197227841949e-07
181 56 2 4.439810243568975e-07
182 57 2 1.3565029672982658e-06
183 58 2 2.501375473731203e-07
184 59 2 3.0557654427328023e-06
185 60 2 2.690756212126785e-07
186 61 2 2.1786943718438346e-07
187 0 3 7.532350145031032e-07
188 1 3 2.0689260864757833e-06
189 2 3 4.776211589890046e-06
190 3 3 2.0209281489454297e-05
191 4 3 8.03697229559117e-08
192 5 3 1.9259371715910152e-07
193 6 3 5.254484703412886e-06
194 7 3 9.316631480191754e-09
195 8 3 2.2836294965690036e-06
196 9 3 8.470510345486628e-09
197 10 3 6.333956058333528e-07
198 11 3 1.5687272084060027e-09
199 12 3 1.9441603629340866e-10
200 13 3 1.4638582838516167e-07
201 14 3 4.4287472012410007e-10
202 15 3 1.7239280096628165e-08
203 16 3 1.7243425086229244e-10
204 17 3 2.636943392948737e-10
205 18 3 5.496491892913515e-11
206 19 3 1.3452327459603413e-08
207 20 3 8.752897020326985e-11
208 21 3 6.439213407026126e-09
209 22 3 2.609345730095765e-06
210 23 3 1.2859374248477257e-05
211 24 3 3.5423621336840256e-08
212 25 3 1.1945139675704926e-07
213 26 3 3.962484181671896e-06
214 27 3 5.66345079901821e-09
215 28 3 2.150951875913545e-06
216 29 3 1.3750593726948667e-08
217 30 3 5.269292871723871e-07
218 31 3 4.231874500937971e-09
219 32 3 4.872311096360843e-11
220 33 3 1.379518967515851e-07
221 34 3 1.5082282557026969e-10
222 35 3 1.51350327358384e-08
223 36 3 7.464269827612075e-10
224 37 3 5.912115886930837e-11
225 38 3 5.123232156558982e-10
226 39 3 4.9559280579625047e-08
227 40 3 2.0914565495367096e-10
228 41 3 1.4485156308335096e-08
229 42 3 5.5817688639444755e-06
230 43 3 9.332686841292007e-05
231 44 3 2.8418926576843113e-06
232 45 3 7.4487112321897e-05
233 46 3 4.0000070398063055e-06
234 47 3 2.3328259687395476e-05
235 48 3 1.4151335065374574e-06
236 49 3 1.6325598704488605e-05
237 50 3 2.3715857002436157e-06
238 51 3 7.548105091272909e-07
239 52 3 3.6034495020460607e-06
240 53 3 1.0884100496136555e-05
241 54 3 3.5018585528973042e-06
242 55 3 2.2673196348993232e-07
243 56 3 2.9980180073323443e-07
244 57 3 1.3990052046736638e-06
245 58 3 5.466331356385194e-08
246 59 3 2.809479013355323e-06
247 60 3 2.3325349609214864e-07
248 61 3 7.186408187022221e-08
249 0 4 0.009589576244740954
250 1 4 0.052547105369944024
251 2 4 0.3055537816093265
252 3 4 0.3232559884209417
253 4 4 0.11846552336608993
254 5 4 0.007495941354846635
255 6 4 0.13579606433505353
256 7 4 0.043116973852648795
257 8 4 0.07284873660956653
258 9 4 0.008961648330759247
259 10 4 0.027817725460756136
260 11 4 0.0024169987658250883
261 12 4 0.0009553561379413499
262 13 4 0.009063899706859073
263 14 4 0.0035008900708001726
264 15 4 0.0009977700427077373
265 16 4 0.011223195114682139
266 17 4 0.0035516866963212
267 18 4 0.00309543675188575
268 19 4 0.002687537862430965
269 20 4 0.00012063661154649362
270 21 4 0.000715143544724414
271 22 4 0.05529429475332966
272 23 4 0.9791221434448308
273 24 4 1.0696020660792314
274 25 4 0.0875327652909292
275 26 4 0.19481855245576588
276 27 4 0.04529950119162462
277 28 4 0.045910961742268046
278 29 4 0.02240050967550515
279 30 4 0.08272828766626382
280 31 4 0.08010145819931076
281 32 4 0.028956695810392525
282 33 4 0.02498762304546545
283 34 4 0.0031153564891211087
284 35 4 0.005236690120063707
285 36 4 0.009084521662084415
286 37 4 0.005308924769039434
287 38 4 0.003015970670304373
288 39 4 0.004197536906148957
289 40 4 0.0018088137561169445
290 41 4 0.001247965710212328
291 42 4 1.6468634754055967e-05
292 43 4 0.00024781406946703007
293 44 4 4.152307821815358e-06
294 45 4 0.00012475929569599214
295 46 4 2.496861008896771e-06
296 47 4 6.304727122564465e-05
297 48 4 6.120868313728044e-07
298 49 4 4.497966645407678e-05
299 50 4 3.7828173517213332e-06
300 51 4 1.1475761980357076e-06
301 52 4 1.0981765169994303e-05
302 53 4 2.9392585213214916e-05
303 54 4 8.658777715647862e-06
304 55 4 3.91542217316345e-07
305 56 4 4.879502939685557e-07
306 57 4 4.000976048228732e-06
307 58 4 3.4970594836948376e-07
308 59 4 9.749228536458666e-06
309 60 4 4.396959941254867e-07
.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0099            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=300.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0099   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0100            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0100   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0101            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0101   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0102            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=400.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0102   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0103            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0103   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0104            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0104   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt752
  # ------------------------------------------------------------------------------------------
  # Commande No :  0105            Concept de type : vect_asse_gene
  # ------------------------------------------------------------------------------------------
  dispGene = RECU_GENE(RESU_GENE=harmGe45,
                       FREQ=500.0,
                       NOM_CHAM='DEPL',)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0105   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt754
  # ------------------------------------------------------------------------------------------
  # Commande No :  0106            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_GENE(UNITE=9,
            GENE=_F(RESU_GENE=dispGene,
                    PRECISION=1.E-06,
                    CRITERE='RELATIF',),
            FORMAT='RESULTAT',)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0106   user+syst:        0.00s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt755
  # ------------------------------------------------------------------------------------------
  # Commande No :  0107            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(dispGene, ),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   944.71 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0107   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt813
  # ------------------------------------------------------------------------------------------
  # Commande No :  0108            Concept de type : -
  # ------------------------------------------------------------------------------------------
  IMPR_RESU(FORMAT='MED',
            UNITE=82,
            VERSION_MED='3.3.1',
            RESU=_F(RESULTAT=modes_1,
                    INFO_MAILLAGE='NON',
                    IMPR_NOM_VARI='OUI',),
            PROC0='OUI',
            INFO=1,)


Création du fichier au format MED 3.3.1.
  # Mémoire (Mo) :  4147.61 /   945.32 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0108   user+syst:        0.05s (syst:        0.01s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt830
  # ------------------------------------------------------------------------------------------
  # Commande No :  0109            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matEl_A1, matAs_A1, masGene, rigGene, amoGene, vectGe10, vectGe45, elemprop),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   833.11 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0109   user+syst:        0.02s (syst:        0.01s, elaps:        0.02s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt831
  # ------------------------------------------------------------------------------------------
  # Commande No :  0110            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(meshSlp, meshRaiR, meshPadR, tmp2, mesh, mesh0, model, f_EBal, f_TDBal, f_EPad1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   817.25 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0110   user+syst:        0.01s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt832
  # ------------------------------------------------------------------------------------------
  # Commande No :  0111            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(f_EPad2, f_TDPad1, f_TDPad2, tie2, tie3, BCinterf, load10, load45),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   774.03 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0111   user+syst:        0.01s (syst:        0.00s, elaps:        0.01s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt833
  # ------------------------------------------------------------------------------------------
  # Commande No :  0112            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matEl_K1, concrRe, steel, padMat1, padMat2, fieldmat, tabModes, macroEl1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   675.12 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0112   user+syst:        0.02s (syst:        0.02s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt834
  # ------------------------------------------------------------------------------------------
  # Commande No :  0113            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(matAs_K1, matEl_M1, matAs_M1, vectEl10, vectEl45, vectAs10, vectAs45, modeGene, numGene),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   523.84 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0113   user+syst:        0.03s (syst:        0.01s, elaps:        0.04s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt835
  # ------------------------------------------------------------------------------------------
  # Commande No :  0114            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(modStaR1, modStaR2, modStaS, Lint, bamo1),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   414.84 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0114   user+syst:        0.04s (syst:        0.01s, elaps:        0.03s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt836
  # ------------------------------------------------------------------------------------------
  # Commande No :  0115            Concept de type : -
  # ------------------------------------------------------------------------------------------
  DETRUIRE(CONCEPT=_F(NOM=(harmGe10, harmGe45, CH_id, intCH_id),),
           INFO=1,)

  # Mémoire (Mo) :  4147.61 /   414.12 /   652.08 /   180.99 (VmPeak / VmSize / Optimum / Minimum)
  # Fin commande No : 0115   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
  # ------------------------------------------------------------------------------------------

.. __stg1_txt841
  # ------------------------------------------------------------------------------------------
  # Commande No :  0116            Concept de type : -
  # ------------------------------------------------------------------------------------------
  FIN(RETASSAGE='OUI',
      FORMAT_HDF='NON',
      INFO_RESU='OUI',
      PROC0='OUI',
      )

   
   !-------------------------------------------------------------------------!
   ! <I> <CATAMESS_89>                                                       !
   !                                                                         !
   !     Liste des alarmes émises lors de l'exécution du calcul.             !
   !                                                                         !
   !     Les alarmes que vous avez choisies d'ignorer sont précédées de (*). !
   !     Nombre d'occurrences pour chacune des alarmes :                     !
   !            ALGELINE_1           émise    6 fois                         !
   !            SUPERVIS2_2          émise    1 fois                         !
   !            SUPERVIS_1           émise    1 fois                         !
   !-------------------------------------------------------------------------!
   

 ======>

 STRUCTURE DU CONCEPT modes_1  CALCULE POUR          2 NUMEROS D'ORDRE

 LISTE DES NOMS SYMBOLIQUES:
 ! ---------- !----------------!
 ! NUME_ORDRE !      DEPL      !
 ! ---------- !----------------!
 !          1 !     DEPL_R     !
 !          2 !     DEPL_R     !
 ! ---------- !----------------!

 LISTE DES NOMS DE VARIABLES D'ACCES:
                                      FREQ             DE TYPE  R
                                      NUME_MODE        DE TYPE  I
                                      NOEUD_CMP        DE TYPE  K16

 LISTE DES NOMS DE PARAMETRES:
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 ! NUME_ORDRE !   AMOR_GENE    !  AMOR_REDUIT   !    CARAELEM    !    CHAMPMAT    !     EXCIT      !FACT_PARTICI_DX !FACT_PARTICI_DY !FACT_PARTICI_DZ !  MASS_EFFE_DX  !  MASS_EFFE_DY  !  MASS_EFFE_DZ  !MASS_EFFE_UN_DX !MASS_EFFE_UN_DY !MASS_EFFE_UN_DZ !   MASS_GENE    !     MODELE     !     NORME      !    NUME_DDL    !     OMEGA2     !   RIGI_GENE    !   TYPE_DEFO    !   TYPE_MODE    !
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 !          1 !       R        !       R        !       K8       !       K8       !      K24       !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       K8       !      K24       !       I        !       R        !       R        !      K16       !      K16       !
 !          2 !       R        !       R        !       K8       !       K8       !      K24       !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       R        !       K8       !      K24       !       I        !       R        !       R        !      K16       !      K16       !
 ! ---------- !----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!----------------!
 ---------------------------------------------------------------------------
 Concepts de la base: G
    Nom       Type                 Taille (Mo)         Nombre      Nombre de
                                                     d'objets       segments
    TOTAL                                57.28             76            148
  
    num1       NUME_DDL_SDASTER          28.25             11             16
    modes_1    MODE_MECA                  1.74             20             26
    &FOZERO                               0.00              2              2
    &&_NUM_C                              0.00              1              1
    &CATA.AC                              0.00              2              4
    &CATA.CL                              0.60              1              3
    &CATA.GD                              0.14              4             11
    &CATA.ME                              0.20              2              4
    &CATA.OP                              0.30              4             19
    &CATA.PH                              0.00              1              1
    &CATA.PR                              0.00              2              4
    &CATA.TE                             26.03             17             42
    &CATA.TH                              0.01              2              4
    &CATA.TM                              0.01              7             11
 ---------------------------------------------------------------------------


     Nom de la base                          :  GLOBALE
     Nombre d'enregistrements utilisés       :  93
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  413
     Volume des accès en lecture             :        322.66 Mo.
     Nombre total d'accès en écriture        :  174
     Volume des accès en écriture            :        135.94 Mo.
     Nombre d'identificateurs utilisés       :  1835
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  91 %


     Nom de la base                          :  VOLATILE
     Nombre d'enregistrements utilisés       :  62
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  509
     Volume des accès en lecture             :        397.66 Mo.
     Nombre total d'accès en écriture        :  623
     Volume des accès en écriture            :        486.72 Mo.
     Nombre d'identificateurs utilisés       :  1030
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  51 %

  Ouverture en lecture du fichier ./glob.1

     Nom de la base                          :  GLOBALE
     Créée avec la version                   :  14.04.00
     Nombre d'enregistrements utilisés       :  93
     Nombre d'enregistrements maximum        :  62914
     Longueur d'enregistrement (octets)      :  819200
     Nombre d'identificateurs utilisés       :  1835
     Taille maximum du répertoire            :  2000
     Pourcentage d'utilisation du répertoire :  91 %

  Ouverture en lecture du fichier ./glob.1


Lancement de la commande : rm -f ./vola.?


  Ouverture en écriture du fichier ./vola.1


Lancement de la commande : rm -f ./glob.*



Lancement de la commande ->mv ./vola.1 ./glob.1<-

 <I> <FIN> RETASSAGE DE LA BASE "GLOBALE" EFFECTUEE,  1 FICHIER(S) UTILISE(S).

 <FIN> Arrêt normal dans "FIN".
 <I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".

 La mémoire demandée au lancement est surestimée, elle est de 8000.00 Mo.
 Le pic mémoire utilisée est de 4147.61 Mo.



     Nom de la base                          :  ELEMBASE
     Nombre d'enregistrements utilisés       :  43
     Nombre d'enregistrements maximum        :  512
     Longueur d'enregistrement (octets)      :  819200
     Nombre total d'accès en lecture         :  60
     Volume des accès en lecture             :         46.88 Mo.
     Nombre total d'accès en écriture        :  0
     Volume des accès en écriture            :          0.00 Mo.
     Nombre d'identificateurs utilisés       :  123
     Taille maximum du répertoire            :  300
     Pourcentage d'utilisation du répertoire :  41 %
  
 <I> <FIN> MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :                     180.99 Mo
 <I> <FIN> MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :                     652.08 Mo
 <I> <FIN> MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS LORS DE L'EXECUTION :    4147.61 Mo
  
 <I>       FERMETURE DES BASES EFFECTUEE
  
   STATISTIQUES CONCERNANT L'ALLOCATION DYNAMIQUE :
     TAILLE CUMULEE MAXIMUM            :                  652  Mo.
     TAILLE CUMULEE LIBEREE            :                  498  Mo.
     NOMBRE TOTAL D'ALLOCATIONS        :               672151
     NOMBRE TOTAL DE LIBERATIONS       :               672091
     APPELS AU MECANISME DE LIBERATION :                    0
     TAILLE MEMOIRE CUMULEE RECUPEREE  :                  697  Mo.
     VOLUME DES LECTURES               :                    0  Mo.
     VOLUME DES ECRITURES              :                  505  Mo.
  
   MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :     180.99 Mo
     - IMPOSE DE NOMBREUX ACCES DISQUE
     - RALENTIT LA VITESSE D'EXECUTION
   MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :     652.08 Mo
     - LIMITE LES ACCES DISQUE
     - AMELIORE LA VITESSE D'EXECUTION
   MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS     :    4147.61 Mo
     - COMPREND LA MEMOIRE CONSOMMEE PAR  JEVEUX, 
       LE SUPERVISEUR PYTHON, LES LIBRAIRIES EXTERNES
  
 <I>       FIN D'EXECUTION LE : JE-25-AOUT-2022 19:01:46


  <I> Informations sur les temps d'exécution
      Temps cpu user total                  197.50 s
      Temps cpu systeme total                 5.04 s
      Temps elapsed total                   203.42 s
      Temps restant                     3599796.58 s


  La signature de la base sauvegardée est (à l'adresse 0) :
    b29aba282365f916ec40a6ef009f1dae676372b0

 ********************************************************************************
 * COMMAND                  :       USER :     SYSTEM :   USER+SYS :    ELAPSED *
 ********************************************************************************
 * init (jdc)               :     197.51 :       5.05 :     202.56 :     203.43 *
 *  . compile               :       0.00 :       0.00 :       0.00 :       0.00 *
 *  . exec_compile          :     197.33 :       5.04 :     202.37 :     203.23 *
 * DEBUT                    :       0.01 :       0.02 :       0.03 :       0.05 *
 * LIRE_MAILLAGE            :       0.01 :       0.00 :       0.01 :       0.03 *
 * LIRE_MAILLAGE            :       0.02 :       0.01 :       0.03 :       0.03 *
 * LIRE_MAILLAGE            :       0.02 :       0.00 :       0.02 :       0.02 *
 * MODI_MAILLAGE            :       0.00 :       0.00 :       0.00 :       0.00 *
 * MODI_MAILLAGE            :       0.01 :       0.00 :       0.01 :       0.00 *
 * ASSE_MAILLAGE            :       0.04 :       0.00 :       0.04 :       0.05 *
 * ASSE_MAILLAGE            :       0.05 :       0.00 :       0.05 :       0.06 *
 * CREA_MAILLAGE            :       0.06 :       0.01 :       0.07 :       0.07 *
 * AFFE_MODELE              :       0.03 :       0.01 :       0.04 :       0.03 *
 * CREA_CHAMP               :       0.00 :       0.00 :       0.00 :       0.01 *
 * POST_ELEM                :       0.01 :       0.00 :       0.01 :       0.02 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.01 :       0.00 :       0.01 :       0.01 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * LIRE_FONCTION            :       0.00 :       0.00 :       0.00 :       0.00 *
 * AFFE_CHAR_MECA           :       0.12 :       0.00 :       0.12 :       0.12 *
 * AFFE_CHAR_MECA           :       0.28 :       0.02 :       0.30 :       0.31 *
 * AFFE_CHAR_MECA           :       0.03 :       0.00 :       0.03 :       0.03 *
 * AFFE_CHAR_MECA           :       0.00 :       0.00 :       0.00 :       0.01 *
 * AFFE_CHAR_MECA           :       0.01 :       0.00 :       0.01 :       0.01 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * DEFI_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * DEFI_MATERIAU            :       0.01 :       0.00 :       0.01 :       0.00 *
 * AFFE_MATERIAU            :       0.00 :       0.00 :       0.00 :       0.00 *
 * AFFE_CARA_ELEM           :       0.11 :       0.01 :       0.12 :       0.12 *
 * CALC_MATR_ELEM           :       0.35 :       0.03 :       0.38 :       0.38 *
 * NUME_DDL                 :       0.69 :       0.20 :       0.89 :       0.93 *
 * ASSE_MATRICE             :       0.26 :       0.01 :       0.27 :       0.28 *
 * CALC_MATR_ELEM           :       0.11 :       0.02 :       0.13 :       0.13 *
 * ASSE_MATRICE             :       0.20 :       0.01 :       0.21 :       0.22 *
 * CALC_VECT_ELEM           :       0.01 :       0.00 :       0.01 :       0.00 *
 * CALC_VECT_ELEM           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_VECTEUR             :       0.00 :       0.00 :       0.00 :       0.01 *
 * ASSE_VECTEUR             :       0.00 :       0.00 :       0.00 :       0.00 *
 * CALC_MATR_ELEM           :       0.10 :       0.04 :       0.14 :       0.13 *
 * ASSE_MATRICE             :       0.20 :       0.01 :       0.21 :       0.21 *
 * INFO_MODE                :      46.67 :       1.26 :      47.93 :      48.31 *
 * CALC_MODES               :      84.53 :       1.45 :      85.98 :      86.06 *
 * MODE_STATIQUE            :      18.52 :       0.45 :      18.97 :      19.06 *
 * MODE_STATIQUE            :      18.47 :       0.49 :      18.96 :      19.00 *
 * MODE_STATIQUE            :      18.74 :       0.52 :      19.26 :      19.31 *
 * NORM_MODE                :       0.92 :       0.02 :       0.94 :       0.95 *
 * NORM_MODE                :       0.93 :       0.03 :       0.96 :       0.95 *
 * NORM_MODE                :       0.92 :       0.03 :       0.95 :       0.96 *
 * DEFI_INTERF_DYNA         :       0.06 :       0.00 :       0.06 :       0.07 *
 * DEFI_BASE_MODALE         :       0.03 :       0.01 :       0.04 :       0.04 *
 * DEFI_BASE_MODALE         :       0.04 :       0.01 :       0.05 :       0.05 *
 * DEFI_BASE_MODALE         :       0.06 :       0.00 :       0.06 :       0.06 *
 * MACR_ELEM_DYNA           :       3.77 :       0.11 :       3.88 :       3.90 *
 * DEFI_MODELE_GENE         :       0.27 :       0.01 :       0.28 :       0.28 *
 * NUME_DDL_GENE            :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_MATR_GENE           :       0.01 :       0.00 :       0.01 :       0.00 *
 * ASSE_MATR_GENE           :       0.00 :       0.00 :       0.00 :       0.00 *
 * ASSE_VECT_GENE           :       0.01 :       0.00 :       0.01 :       0.01 *
 * ASSE_VECT_GENE           :       0.01 :       0.00 :       0.01 :       0.01 *
 * DYNA_VIBRA               :       0.04 :       0.00 :       0.04 :       0.04 *
 * DYNA_VIBRA               :       0.04 :       0.00 :       0.04 :       0.04 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.00 :       0.00 :       0.00 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.01 :       0.00 :       0.01 :       0.00 *
 * IMPR_GENE                :       0.00 :       0.00 :       0.00 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * RECU_GENE                :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_GENE                :       0.00 :       0.00 :       0.00 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * IMPR_RESU                :       0.04 :       0.01 :       0.05 :       0.04 *
 * DETRUIRE                 :       0.01 :       0.01 :       0.02 :       0.02 *
 * DETRUIRE                 :       0.01 :       0.00 :       0.01 :       0.00 *
 * DETRUIRE                 :       0.01 :       0.00 :       0.01 :       0.01 *
 * DETRUIRE                 :       0.00 :       0.02 :       0.02 :       0.03 *
 * DETRUIRE                 :       0.02 :       0.01 :       0.03 :       0.04 *
 * DETRUIRE                 :       0.03 :       0.01 :       0.04 :       0.03 *
 * DETRUIRE                 :       0.00 :       0.00 :       0.00 :       0.00 *
 * FIN                      :       0.03 :       0.13 :       0.16 :       0.17 *
 *  . part Superviseur      :       0.66 :       0.14 :       0.80 :       0.90 *
 *  . part Fortran          :     196.85 :       4.91 :     201.76 :     202.53 *
 ********************************************************************************
 * TOTAL_JOB                :     197.50 :       5.04 :     202.54 :     203.42 *
 ********************************************************************************


310 61 4 9.56459378775701e-08
311 0 5 9.092455138352292e-07
312 1 5 3.819863722412097e-06
313 2 5 2.1308120999177754e-06
314 3 5 3.4778515593682256e-05
315 4 5 1.8731511387114495e-07
316 5 5 3.760297332977806e-07
317 6 5 4.971546845288698e-06
318 7 5 1.4037398383261764e-08
319 8 5 2.324684124886648e-06
320 9 5 2.4644670083813256e-08
321 10 5 9.708325224311349e-08
322 11 5 5.0838937521549365e-09
323 12 5 4.081227213976208e-10
324 13 5 3.438682843837158e-08
325 14 5 4.0516610541484455e-10
326 15 5 7.70624540191266e-09
327 16 5 6.580480935919501e-10
328 17 5 1.8104251188281718e-10
329 18 5 1.926136459885436e-10
330 19 5 3.4932823945395542e-09
331 20 5 5.2872839936682043e-11
332 21 5 2.641825247286429e-09
333 22 5 4.13169022909511e-06
334 23 5 2.1841151623712517e-05
335 24 5 8.942843297592773e-08
336 25 5 7.801078169650654e-07
337 26 5 5.374582452665509e-06
338 27 5 9.634154920662477e-09
339 28 5 3.571032698044083e-06
340 29 5 3.113339003080134e-08
341 30 5 1.2942556284540548e-06
342 31 5 9.191761398556862e-09
343 32 5 8.482910493456831e-11
344 33 5 3.181357541380723e-07
345 34 5 4.785972706754605e-10
346 35 5 1.8924001964172378e-08
347 36 5 1.2527036470247064e-09
348 37 5 1.9345704830788668e-10
349 38 5 9.194764928028339e-10
350 39 5 9.182411898461101e-08
351 40 5 3.658553218705449e-10
352 41 5 2.5008922254667434e-08
353 42 5 1.436002166445441e-05
354 43 5 0.00021708696581978386
355 44 5 6.347960271244615e-07
356 45 5 0.00019041670764901385
357 46 5 5.560363080177409e-07
358 47 5 5.2813537843624906e-05
359 48 5 1.3826373278734376e-06
360 49 5 4.3490243621529646e-05
361 50 5 5.297674575179189e-06
362 51 5 4.856270550988691e-07
363 52 5 8.631374145673447e-06
364 53 5 2.7184152430568807e-05
365 54 5 8.91454218782995e-06
nModesTot 62
nEigen 2
TOTAL TIME 202.80310487747192
WARNING: can not pickle object: f <class '_io.TextIOWrapper'>
WARNING: can not pickle object: freqFile <class '_io.TextIOWrapper'>
WARNING: can not pickle object: temp1 <class 'Utilitai.Table.Table'>
WARNING: can not pickle object: fileVect <class '_io.TextIOWrapper'>
WARNING: can not pickle object: fileModes <class '_io.TextIOWrapper'>
--- Fin de l'exécution
EXECUTION_CODE_ASTER_EXIT_92099=0
